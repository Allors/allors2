@using Microsoft.AspNetCore.Components
@inject IUriHelper Url

<style>
    .mdc-drawer {
        box-shadow: 2px 0px 2px 0px rgba(199,199,199,0.29);
    }
</style>

<MatNavMenu Multi="true">
    <MatNavItem Href="@Url.ToAbsoluteUri("").AbsoluteUri"><MatIcon Icon="home"></MatIcon>&nbsp; Home</MatNavItem>

    @foreach (string type in sections)
    {
        <MatNavSubMenu Expanded="true">
            <MatNavSubMenuHeader>
                <MatNavItem AllowSelection="false">@type</MatNavItem>
            </MatNavSubMenuHeader>
            <MatNavSubMenuList>
                @foreach (var navItem in navItems.Where(n => n.Section == @type))
                {
                    <MatNavItem Href="@Url.ToAbsoluteUri(navItem.Url).AbsoluteUri">
                        @navItem.Name
                    </MatNavItem>
                }
            </MatNavSubMenuList>
        </MatNavSubMenu>
        <MatDivider></MatDivider>
    }

    <MatNavItem Href="@Url.ToAbsoluteUri("BaseComponent").AbsoluteUri">
        Base Component
    </MatNavItem>
</MatNavMenu>
@code
{
    class NavItem
    {
        public string Section;
        public string Name;
        public string Icon;
        public string Url;
    }

    NavItem[] navItems;
    string[] sections;

    protected async override System.Threading.Tasks.Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        const string general = "General";
        const string relations = "Relations";

        sections = new string[] { general, relations };
        navItems = new[]
        {
            new NavItem()
            {
                Section = general,
                Name = "Counter",
                Url = "counter",
            },
            new NavItem()
            {
                Section = relations,
                Name = "Organisations",
                Url = "organisation/list",
            },
            new NavItem()
            {
                Section = relations,
                Name = "People",
                Url = "person/list",
            },
        }.OrderBy(i => i.Name).ToArray();
    }
}
