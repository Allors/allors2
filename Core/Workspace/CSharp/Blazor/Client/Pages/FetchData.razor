@page "/fetchdata"
@inject HttpClient Http
@using Allors.Workspace;
@using Allors.Workspace.Domain
@using Allors.Workspace.Client;
@using Allors.Workspace.Data;
@using Allors.Workspace.Meta;

@if (people == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Middle Name</th>
                <th>Last Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in people)
            {
                <tr>
                    <td>@person.FirstName</td>
                    <td>@person.MiddleName</td>
                    <td>@person.LastName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    Database Database;
    Workspace Workspace;
    Context Context;

    Person[] people;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        this.Database = new Database(this.Http);
        var objectFactory = new ObjectFactory(MetaPopulation.Instance, typeof(User));
        this.Workspace = new Workspace(objectFactory);

        var user = "administrator";
        var uri = new Uri("/TestAuthentication/Token", UriKind.Relative);
        var loggedIn = await this.Database.Login(uri, user, null);

        var context = new Context(this.Database, this.Workspace);

        var pull = new Pull
        {
            Extent = new Filter(M.Person.ObjectType),
        };

        var result = await context.Load(pull);

        this.people = result.GetCollection<Person>("People");
    }
}
