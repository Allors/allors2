@using Microsoft.AspNetCore.Components
@inject IUriHelper Url


<BSNavbar IsExpand="true" Color="Color.Light">
    <BSNavbarBrand Href="/">Allors</BSNavbarBrand>
    <BSNavbarToggler @onclick="onclick" />
    <BSCollapse isOpen="@IsOpen" IsNavbar="true" IsOpenChanged="OpenChanged">
        <BSNav IsList="true" Class="mr-auto" IsNavbar="true">

            <BSNavItem>
                <BSNavLink Href="/counter">Counter</BSNavLink>
            </BSNavItem>

            @foreach (string section in sections)
            {
                <BSNavItem IsDropdown="true">
                    <BSDropdownToggle Color="Color.Light">@section</BSDropdownToggle>

                    <BSDropdownMenu>
                        @foreach (var navItem in navItems.Where(n => n.Section == section))
                        {
                            <BSDropdownItem Href="@Url.ToAbsoluteUri(navItem.Url).AbsoluteUri" @onclick="!IsO">@navItem.Name</BSDropdownItem>
                        }
                    </BSDropdownMenu>
                </BSNavItem>
            }

        </BSNav>
    </BSCollapse>
</BSNavbar>

@code
{
    class NavItem
    {
        public string Section;
        public string Name;
        public string Icon;
        public string Url;
    }

    NavItem[] navItems;
    string[] sections;

    bool IsOpen { get; set; } = true;

    void onclick(UIMouseEventArgs e)
    {
        IsOpen = !IsOpen;
        StateHasChanged();
    }

    void OpenChanged(bool e)
    {
        IsOpen = e;
        InvokeAsync(StateHasChanged);
    }

    protected async override System.Threading.Tasks.Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        const string relations = "Relations";

        sections = new string[] { relations };
        navItems = new[]
        {
            new NavItem()
            {
                Section = relations,
                Name = "Organisations",
                Url = "organisation/list",
            },
            new NavItem()
            {
                Section = relations,
                Name = "People",
                Url = "person/list",
            },
        }.OrderBy(i => i.Name).ToArray();
    }
}
