// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
import { SessionObject, Method } from "@allors/base-domain";

import { User } from './User.g';
import { Localised } from './Localised.g';
import { UniquelyIdentifiable } from './UniquelyIdentifiable.g';
import { Deletable } from './Deletable.g';
import { Media } from './Media.g';
import { Organisation } from './Organisation.g';
import { TaskList } from './TaskList.g';
import { NotificationList } from './NotificationList.g';
import { Locale } from './Locale.g';
import { Task } from './Task.g';
import { Singleton } from './Singleton.g';
import { TaskAssignment } from './TaskAssignment.g';

export class Person extends SessionObject implements User, UniquelyIdentifiable, Deletable {
    get CanReadFirstName(): boolean {
        return this.canRead('FirstName');
    }

    get CanWriteFirstName(): boolean {
        return this.canWrite('FirstName');
    }

    get FirstName(): string {
        return this.get('FirstName');
    }

    set FirstName(value: string) {
        this.set('FirstName', value);
    }

    get CanReadLastName(): boolean {
        return this.canRead('LastName');
    }

    get CanWriteLastName(): boolean {
        return this.canWrite('LastName');
    }

    get LastName(): string {
        return this.get('LastName');
    }

    set LastName(value: string) {
        this.set('LastName', value);
    }

    get CanReadMiddleName(): boolean {
        return this.canRead('MiddleName');
    }

    get CanWriteMiddleName(): boolean {
        return this.canWrite('MiddleName');
    }

    get MiddleName(): string {
        return this.get('MiddleName');
    }

    set MiddleName(value: string) {
        this.set('MiddleName', value);
    }

    get CanReadBirthDate(): boolean {
        return this.canRead('BirthDate');
    }

    get CanWriteBirthDate(): boolean {
        return this.canWrite('BirthDate');
    }

    get BirthDate(): Date {
        return this.get('BirthDate');
    }

    set BirthDate(value: Date) {
        this.set('BirthDate', value);
    }

    get CanReadFullName(): boolean {
        return this.canRead('FullName');
    }

    get FullName(): string {
        return this.get('FullName');
    }


    get CanReadIsStudent(): boolean {
        return this.canRead('IsStudent');
    }

    get CanWriteIsStudent(): boolean {
        return this.canWrite('IsStudent');
    }

    get IsStudent(): boolean {
        return this.get('IsStudent');
    }

    set IsStudent(value: boolean) {
        this.set('IsStudent', value);
    }

    get CanReadPhoto(): boolean {
        return this.canRead('Photo');
    }

    get CanWritePhoto(): boolean {
        return this.canWrite('Photo');
    }

    get Photo(): Media {
        return this.get('Photo');
    }

    set Photo(value: Media) {
        this.set('Photo', value);
    }

    get CanReadWeight(): boolean {
        return this.canRead('Weight');
    }

    get CanWriteWeight(): boolean {
        return this.canWrite('Weight');
    }

    get Weight(): number {
        return this.get('Weight');
    }

    set Weight(value: number) {
        this.set('Weight', value);
    }

    get CanReadCycleOne(): boolean {
        return this.canRead('CycleOne');
    }

    get CanWriteCycleOne(): boolean {
        return this.canWrite('CycleOne');
    }

    get CycleOne(): Organisation {
        return this.get('CycleOne');
    }

    set CycleOne(value: Organisation) {
        this.set('CycleOne', value);
    }

    get CanReadCycleMany(): boolean {
        return this.canRead('CycleMany');
    }

    get CanWriteCycleMany(): boolean {
        return this.canWrite('CycleMany');
    }

    get CycleMany(): Organisation[] {
        return this.get('CycleMany');
    }

    AddCycleMany(value: Organisation) {
        return this.add('CycleMany', value);
    }

    RemoveCycleMany(value: Organisation) {
        return this.remove('CycleMany', value);
    }

    set CycleMany(value: Organisation[]) {
        this.set('CycleMany', value);
    }

    get CanReadUserName(): boolean {
        return this.canRead('UserName');
    }

    get CanWriteUserName(): boolean {
        return this.canWrite('UserName');
    }

    get UserName(): string {
        return this.get('UserName');
    }

    set UserName(value: string) {
        this.set('UserName', value);
    }

    get CanReadNormalizedUserName(): boolean {
        return this.canRead('NormalizedUserName');
    }

    get CanWriteNormalizedUserName(): boolean {
        return this.canWrite('NormalizedUserName');
    }

    get NormalizedUserName(): string {
        return this.get('NormalizedUserName');
    }

    set NormalizedUserName(value: string) {
        this.set('NormalizedUserName', value);
    }

    get CanReadUserEmail(): boolean {
        return this.canRead('UserEmail');
    }

    get CanWriteUserEmail(): boolean {
        return this.canWrite('UserEmail');
    }

    get UserEmail(): string {
        return this.get('UserEmail');
    }

    set UserEmail(value: string) {
        this.set('UserEmail', value);
    }

    get CanReadUserEmailConfirmed(): boolean {
        return this.canRead('UserEmailConfirmed');
    }

    get CanWriteUserEmailConfirmed(): boolean {
        return this.canWrite('UserEmailConfirmed');
    }

    get UserEmailConfirmed(): boolean {
        return this.get('UserEmailConfirmed');
    }

    set UserEmailConfirmed(value: boolean) {
        this.set('UserEmailConfirmed', value);
    }

    get CanReadTaskList(): boolean {
        return this.canRead('TaskList');
    }

    get TaskList(): TaskList {
        return this.get('TaskList');
    }


    get CanReadNotificationList(): boolean {
        return this.canRead('NotificationList');
    }

    get CanWriteNotificationList(): boolean {
        return this.canWrite('NotificationList');
    }

    get NotificationList(): NotificationList {
        return this.get('NotificationList');
    }

    set NotificationList(value: NotificationList) {
        this.set('NotificationList', value);
    }

    get CanReadLocale(): boolean {
        return this.canRead('Locale');
    }

    get CanWriteLocale(): boolean {
        return this.canWrite('Locale');
    }

    get Locale(): Locale {
        return this.get('Locale');
    }

    set Locale(value: Locale) {
        this.set('Locale', value);
    }

    get CanReadUniqueId(): boolean {
        return this.canRead('UniqueId');
    }

    get CanWriteUniqueId(): boolean {
        return this.canWrite('UniqueId');
    }

    get UniqueId(): string {
        return this.get('UniqueId');
    }

    set UniqueId(value: string) {
        this.set('UniqueId', value);
    }


    get CanExecuteDelete(): boolean {
        return this.canExecute('Delete');
    }

    get Delete(): Method {
        return new Method(this, 'Delete');
    }
}
