"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
const base_domain_1 = require("@allors/base-domain");
class Media extends base_domain_1.SessionObject {
    get CanReadRevision() {
        return this.canRead('Revision');
    }
    get Revision() {
        return this.get('Revision');
    }
    get CanReadMediaContent() {
        return this.canRead('MediaContent');
    }
    get CanWriteMediaContent() {
        return this.canWrite('MediaContent');
    }
    get MediaContent() {
        return this.get('MediaContent');
    }
    set MediaContent(value) {
        this.set('MediaContent', value);
    }
    get CanReadInData() {
        return this.canRead('InData');
    }
    get CanWriteInData() {
        return this.canWrite('InData');
    }
    get InData() {
        return this.get('InData');
    }
    set InData(value) {
        this.set('InData', value);
    }
    get CanReadInDataUri() {
        return this.canRead('InDataUri');
    }
    get CanWriteInDataUri() {
        return this.canWrite('InDataUri');
    }
    get InDataUri() {
        return this.get('InDataUri');
    }
    set InDataUri(value) {
        this.set('InDataUri', value);
    }
    get CanReadFileName() {
        return this.canRead('FileName');
    }
    get CanWriteFileName() {
        return this.canWrite('FileName');
    }
    get FileName() {
        return this.get('FileName');
    }
    set FileName(value) {
        this.set('FileName', value);
    }
    get CanReadType() {
        return this.canRead('Type');
    }
    get Type() {
        return this.get('Type');
    }
    get CanReadUniqueId() {
        return this.canRead('UniqueId');
    }
    get CanWriteUniqueId() {
        return this.canWrite('UniqueId');
    }
    get UniqueId() {
        return this.get('UniqueId');
    }
    set UniqueId(value) {
        this.set('UniqueId', value);
    }
    get CanExecuteDelete() {
        return this.canExecute('Delete');
    }
    get Delete() {
        return new base_domain_1.Method(this, 'Delete');
    }
}
exports.Media = Media;
