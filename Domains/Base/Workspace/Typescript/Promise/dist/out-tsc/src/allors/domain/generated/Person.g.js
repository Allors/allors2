"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
const framework_1 = require("../../framework");
class Person extends framework_1.SessionObject {
    get CanReadFirstName() {
        return this.canRead('FirstName');
    }
    get CanWriteFirstName() {
        return this.canWrite('FirstName');
    }
    get FirstName() {
        return this.get('FirstName');
    }
    set FirstName(value) {
        this.set('FirstName', value);
    }
    get CanReadLastName() {
        return this.canRead('LastName');
    }
    get CanWriteLastName() {
        return this.canWrite('LastName');
    }
    get LastName() {
        return this.get('LastName');
    }
    set LastName(value) {
        this.set('LastName', value);
    }
    get CanReadMiddleName() {
        return this.canRead('MiddleName');
    }
    get CanWriteMiddleName() {
        return this.canWrite('MiddleName');
    }
    get MiddleName() {
        return this.get('MiddleName');
    }
    set MiddleName(value) {
        this.set('MiddleName', value);
    }
    get CanReadBirthDate() {
        return this.canRead('BirthDate');
    }
    get CanWriteBirthDate() {
        return this.canWrite('BirthDate');
    }
    get BirthDate() {
        return this.get('BirthDate');
    }
    set BirthDate(value) {
        this.set('BirthDate', value);
    }
    get CanReadFullName() {
        return this.canRead('FullName');
    }
    get FullName() {
        return this.get('FullName');
    }
    get CanReadIsStudent() {
        return this.canRead('IsStudent');
    }
    get CanWriteIsStudent() {
        return this.canWrite('IsStudent');
    }
    get IsStudent() {
        return this.get('IsStudent');
    }
    set IsStudent(value) {
        this.set('IsStudent', value);
    }
    get CanReadPhoto() {
        return this.canRead('Photo');
    }
    get CanWritePhoto() {
        return this.canWrite('Photo');
    }
    get Photo() {
        return this.get('Photo');
    }
    set Photo(value) {
        this.set('Photo', value);
    }
    get CanReadWeight() {
        return this.canRead('Weight');
    }
    get CanWriteWeight() {
        return this.canWrite('Weight');
    }
    get Weight() {
        return this.get('Weight');
    }
    set Weight(value) {
        this.set('Weight', value);
    }
    get CanReadCycleOne() {
        return this.canRead('CycleOne');
    }
    get CanWriteCycleOne() {
        return this.canWrite('CycleOne');
    }
    get CycleOne() {
        return this.get('CycleOne');
    }
    set CycleOne(value) {
        this.set('CycleOne', value);
    }
    get CanReadCycleMany() {
        return this.canRead('CycleMany');
    }
    get CanWriteCycleMany() {
        return this.canWrite('CycleMany');
    }
    get CycleMany() {
        return this.get('CycleMany');
    }
    AddCycleMany(value) {
        return this.add('CycleMany', value);
    }
    RemoveCycleMany(value) {
        return this.remove('CycleMany', value);
    }
    set CycleMany(value) {
        this.set('CycleMany', value);
    }
    get CanReadUserName() {
        return this.canRead('UserName');
    }
    get CanWriteUserName() {
        return this.canWrite('UserName');
    }
    get UserName() {
        return this.get('UserName');
    }
    set UserName(value) {
        this.set('UserName', value);
    }
    get CanReadNormalizedUserName() {
        return this.canRead('NormalizedUserName');
    }
    get CanWriteNormalizedUserName() {
        return this.canWrite('NormalizedUserName');
    }
    get NormalizedUserName() {
        return this.get('NormalizedUserName');
    }
    set NormalizedUserName(value) {
        this.set('NormalizedUserName', value);
    }
    get CanReadUserEmail() {
        return this.canRead('UserEmail');
    }
    get CanWriteUserEmail() {
        return this.canWrite('UserEmail');
    }
    get UserEmail() {
        return this.get('UserEmail');
    }
    set UserEmail(value) {
        this.set('UserEmail', value);
    }
    get CanReadUserEmailConfirmed() {
        return this.canRead('UserEmailConfirmed');
    }
    get CanWriteUserEmailConfirmed() {
        return this.canWrite('UserEmailConfirmed');
    }
    get UserEmailConfirmed() {
        return this.get('UserEmailConfirmed');
    }
    set UserEmailConfirmed(value) {
        this.set('UserEmailConfirmed', value);
    }
    get CanReadTaskList() {
        return this.canRead('TaskList');
    }
    get TaskList() {
        return this.get('TaskList');
    }
    get CanReadNotificationList() {
        return this.canRead('NotificationList');
    }
    get CanWriteNotificationList() {
        return this.canWrite('NotificationList');
    }
    get NotificationList() {
        return this.get('NotificationList');
    }
    set NotificationList(value) {
        this.set('NotificationList', value);
    }
    get CanReadLocale() {
        return this.canRead('Locale');
    }
    get CanWriteLocale() {
        return this.canWrite('Locale');
    }
    get Locale() {
        return this.get('Locale');
    }
    set Locale(value) {
        this.set('Locale', value);
    }
    get CanReadUniqueId() {
        return this.canRead('UniqueId');
    }
    get CanWriteUniqueId() {
        return this.canWrite('UniqueId');
    }
    get UniqueId() {
        return this.get('UniqueId');
    }
    set UniqueId(value) {
        this.set('UniqueId', value);
    }
    get CanExecuteDelete() {
        return this.canExecute('Delete');
    }
    get Delete() {
        return new framework_1.Method(this, 'Delete');
    }
}
exports.Person = Person;
//# sourceMappingURL=Person.g.js.map