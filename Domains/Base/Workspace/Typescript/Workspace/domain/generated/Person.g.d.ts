import { SessionObject, Method } from "@allors/framework";
import { User } from './User.g';
import { UniquelyIdentifiable } from './UniquelyIdentifiable.g';
import { Deletable } from './Deletable.g';
import { Media } from './Media.g';
import { Organisation } from './Organisation.g';
import { TaskList } from './TaskList.g';
import { NotificationList } from './NotificationList.g';
import { Locale } from './Locale.g';
export declare class Person extends SessionObject implements User, UniquelyIdentifiable, Deletable {
    readonly CanReadFirstName: boolean;
    readonly CanWriteFirstName: boolean;
    FirstName: string;
    readonly CanReadLastName: boolean;
    readonly CanWriteLastName: boolean;
    LastName: string;
    readonly CanReadMiddleName: boolean;
    readonly CanWriteMiddleName: boolean;
    MiddleName: string;
    readonly CanReadBirthDate: boolean;
    readonly CanWriteBirthDate: boolean;
    BirthDate: Date;
    readonly CanReadFullName: boolean;
    readonly FullName: string;
    readonly CanReadIsStudent: boolean;
    readonly CanWriteIsStudent: boolean;
    IsStudent: boolean;
    readonly CanReadPhoto: boolean;
    readonly CanWritePhoto: boolean;
    Photo: Media;
    readonly CanReadWeight: boolean;
    readonly CanWriteWeight: boolean;
    Weight: number;
    readonly CanReadCycleOne: boolean;
    readonly CanWriteCycleOne: boolean;
    CycleOne: Organisation;
    readonly CanReadCycleMany: boolean;
    readonly CanWriteCycleMany: boolean;
    CycleMany: Organisation[];
    AddCycleMany(value: Organisation): void;
    RemoveCycleMany(value: Organisation): void;
    readonly CanReadUserName: boolean;
    readonly CanWriteUserName: boolean;
    UserName: string;
    readonly CanReadNormalizedUserName: boolean;
    readonly CanWriteNormalizedUserName: boolean;
    NormalizedUserName: string;
    readonly CanReadUserEmail: boolean;
    readonly CanWriteUserEmail: boolean;
    UserEmail: string;
    readonly CanReadUserEmailConfirmed: boolean;
    readonly CanWriteUserEmailConfirmed: boolean;
    UserEmailConfirmed: boolean;
    readonly CanReadTaskList: boolean;
    readonly TaskList: TaskList;
    readonly CanReadNotificationList: boolean;
    readonly CanWriteNotificationList: boolean;
    NotificationList: NotificationList;
    readonly CanReadLocale: boolean;
    readonly CanWriteLocale: boolean;
    Locale: Locale;
    readonly CanReadUniqueId: boolean;
    readonly CanWriteUniqueId: boolean;
    UniqueId: string;
    readonly CanExecuteDelete: boolean;
    readonly Delete: Method;
}
