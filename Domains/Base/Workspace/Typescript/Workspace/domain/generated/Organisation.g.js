"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
const framework_1 = require("@allors/framework");
class Organisation extends framework_1.SessionObject {
    get CanReadEmployees() {
        return this.canRead('Employees');
    }
    get CanWriteEmployees() {
        return this.canWrite('Employees');
    }
    get Employees() {
        return this.get('Employees');
    }
    AddEmployee(value) {
        return this.add('Employees', value);
    }
    RemoveEmployee(value) {
        return this.remove('Employees', value);
    }
    set Employees(value) {
        this.set('Employees', value);
    }
    get CanReadManager() {
        return this.canRead('Manager');
    }
    get CanWriteManager() {
        return this.canWrite('Manager');
    }
    get Manager() {
        return this.get('Manager');
    }
    set Manager(value) {
        this.set('Manager', value);
    }
    get CanReadName() {
        return this.canRead('Name');
    }
    get CanWriteName() {
        return this.canWrite('Name');
    }
    get Name() {
        return this.get('Name');
    }
    set Name(value) {
        this.set('Name', value);
    }
    get CanReadOwner() {
        return this.canRead('Owner');
    }
    get CanWriteOwner() {
        return this.canWrite('Owner');
    }
    get Owner() {
        return this.get('Owner');
    }
    set Owner(value) {
        this.set('Owner', value);
    }
    get CanReadShareholders() {
        return this.canRead('Shareholders');
    }
    get CanWriteShareholders() {
        return this.canWrite('Shareholders');
    }
    get Shareholders() {
        return this.get('Shareholders');
    }
    AddShareholder(value) {
        return this.add('Shareholders', value);
    }
    RemoveShareholder(value) {
        return this.remove('Shareholders', value);
    }
    set Shareholders(value) {
        this.set('Shareholders', value);
    }
    get CanReadCycleOne() {
        return this.canRead('CycleOne');
    }
    get CanWriteCycleOne() {
        return this.canWrite('CycleOne');
    }
    get CycleOne() {
        return this.get('CycleOne');
    }
    set CycleOne(value) {
        this.set('CycleOne', value);
    }
    get CanReadCycleMany() {
        return this.canRead('CycleMany');
    }
    get CanWriteCycleMany() {
        return this.canWrite('CycleMany');
    }
    get CycleMany() {
        return this.get('CycleMany');
    }
    AddCycleMany(value) {
        return this.add('CycleMany', value);
    }
    RemoveCycleMany(value) {
        return this.remove('CycleMany', value);
    }
    set CycleMany(value) {
        this.set('CycleMany', value);
    }
    get CanReadUniqueId() {
        return this.canRead('UniqueId');
    }
    get CanWriteUniqueId() {
        return this.canWrite('UniqueId');
    }
    get UniqueId() {
        return this.get('UniqueId');
    }
    set UniqueId(value) {
        this.set('UniqueId', value);
    }
    get CanExecuteJustDoIt() {
        return this.canExecute('JustDoIt');
    }
    get JustDoIt() {
        return new framework_1.Method(this, 'JustDoIt');
    }
    get CanExecuteDelete() {
        return this.canExecute('Delete');
    }
    get Delete() {
        return new framework_1.Method(this, 'Delete');
    }
}
exports.Organisation = Organisation;
