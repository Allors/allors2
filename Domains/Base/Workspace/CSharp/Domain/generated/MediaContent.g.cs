// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Workspace.Domain
{
	public partial class MediaContent : SessionObject , Deletable
	{
		public MediaContent(Session session)
		: base(session)
		{
		}

		public Allors.Workspace.Meta.MetaMediaContent Meta
		{
			get
			{
				return Allors.Workspace.Meta.MetaMediaContent.Instance;
			}
		}

		public static MediaContent Instantiate (Session allorsSession, long allorsObjectId)
		{
			return (MediaContent) allorsSession.Get(allorsObjectId);		
		}

		public override bool Equals(object obj)
        {
            var that = obj as SessionObject;
		    if (that == null)
		    {
		        return false;
		    }

		    return this.Id.Equals(that.Id);
        }

		public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }


		public bool CanReadType 
		{
			get
			{
				return this.CanRead(this.Meta.Type);
			}
		}

		public bool CanWriteType 
		{
			get
			{
				return this.CanWrite(this.Meta.Type);
			}
		}



		virtual public global::System.String Type 
		{
			get
			{
				return (global::System.String) this.Get(Meta.Type);
			}
			set
			{
				this.Set(Meta.Type, value);
			}
		}

		virtual public bool ExistType{
			get
			{
				return this.Exist(Meta.Type);
			}
		}

		virtual public void RemoveType()
		{
			this.Set(Meta.Type, null);
		}
		public bool CanReadData 
		{
			get
			{
				return this.CanRead(this.Meta.Data);
			}
		}

		public bool CanWriteData 
		{
			get
			{
				return this.CanWrite(this.Meta.Data);
			}
		}



		virtual public global::System.Byte[] Data 
		{
			get
			{
				return (global::System.Byte[]) this.Get(Meta.Data);
			}
			set
			{
				this.Set(Meta.Data, value);
			}
		}

		virtual public bool ExistData{
			get
			{
				return this.Exist(Meta.Data);
			}
		}

		virtual public void RemoveData()
		{
			this.Set(Meta.Data, null);
		}


			public bool CanExecuteDelete 
			{
				get
				{
					return this.CanExecute(this.Meta.Delete);
				}
			}

			public Method Delete 
			{
				get
				{
					return new Method(this, "Delete");
				}
			}
	}
}