// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Workspace.Domain
{
	public partial class LocalisedText : SessionObject , Localised
	{
		public LocalisedText(Session session)
		: base(session)
		{
		}

		public Allors.Workspace.Meta.MetaLocalisedText Meta
		{
			get
			{
				return Allors.Workspace.Meta.MetaLocalisedText.Instance;
			}
		}

		public static LocalisedText Instantiate (Session allorsSession, long allorsObjectId)
		{
			return (LocalisedText) allorsSession.Get(allorsObjectId);		
		}

		public override bool Equals(object obj)
        {
            var that = obj as SessionObject;
		    if (that == null)
		    {
		        return false;
		    }

		    return this.Id.Equals(that.Id);
        }

		public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }


		public bool CanReadText 
		{
			get
			{
				return this.CanRead(this.Meta.Text);
			}
		}

		public bool CanWriteText 
		{
			get
			{
				return this.CanWrite(this.Meta.Text);
			}
		}



		virtual public global::System.String Text 
		{
			get
			{
				return (global::System.String) this.Get(Meta.Text);
			}
			set
			{
				this.Set(Meta.Text, value);
			}
		}

		virtual public bool ExistText{
			get
			{
				return this.Exist(Meta.Text);
			}
		}

		virtual public void RemoveText()
		{
			this.Set(Meta.Text, null);
		}
		public bool CanReadLocale 
		{
			get
			{
				return this.CanRead(this.Meta.Locale);
			}
		}

		public bool CanWriteLocale 
		{
			get
			{
				return this.CanWrite(this.Meta.Locale);
			}
		}



		virtual public Locale Locale
		{ 
			get
			{
				return (Locale) this.Get(Meta.Locale);
			}
			set
			{
				this.Set(Meta.Locale, value);
			}
		}

		virtual public bool ExistLocale
		{
			get
			{
				return this.Exist(Meta.Locale);
			}
		}

		virtual public void RemoveLocale()
		{
			this.Set(Meta.Locale, null);
		}


	}
}