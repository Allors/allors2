// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Workspace.Domain
{
	public partial class OrderState : SessionObject , ObjectState
	{
		public OrderState(Session session)
		: base(session)
		{
		}

		public Allors.Workspace.Meta.MetaOrderState Meta
		{
			get
			{
				return Allors.Workspace.Meta.MetaOrderState.Instance;
			}
		}

		public static OrderState Instantiate (Session allorsSession, long allorsObjectId)
		{
			return (OrderState) allorsSession.Get(allorsObjectId);		
		}

		public override bool Equals(object obj)
        {
            var that = obj as SessionObject;
		    if (that == null)
		    {
		        return false;
		    }

		    return this.Id.Equals(that.Id);
        }

		public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }


		public bool CanReadName 
		{
			get
			{
				return this.CanRead(this.Meta.Name);
			}
		}

		public bool CanWriteName 
		{
			get
			{
				return this.CanWrite(this.Meta.Name);
			}
		}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) this.Get(Meta.Name);
			}
			set
			{
				this.Set(Meta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return this.Exist(Meta.Name);
			}
		}

		virtual public void RemoveName()
		{
			this.Set(Meta.Name, null);
		}
		public bool CanReadUniqueId 
		{
			get
			{
				return this.CanRead(this.Meta.UniqueId);
			}
		}

		public bool CanWriteUniqueId 
		{
			get
			{
				return this.CanWrite(this.Meta.UniqueId);
			}
		}



		virtual public global::System.Guid UniqueId 
		{
			get
			{
				return (global::System.Guid) this.Get(Meta.UniqueId);
			}
			set
			{
				this.Set(Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return this.Exist(Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			this.Set(Meta.UniqueId, null);
		}


	}
}