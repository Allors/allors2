// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Workspace.Domain
{
	public partial class Notification : SessionObject 
	{
		public Notification(Session session)
		: base(session)
		{
		}

		public Allors.Workspace.Meta.MetaNotification Meta
		{
			get
			{
				return Allors.Workspace.Meta.MetaNotification.Instance;
			}
		}

		public static Notification Instantiate (Session allorsSession, long allorsObjectId)
		{
			return (Notification) allorsSession.Get(allorsObjectId);		
		}

		public override bool Equals(object obj)
        {
            var that = obj as SessionObject;
		    if (that == null)
		    {
		        return false;
		    }

		    return this.Id.Equals(that.Id);
        }

		public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }


		public bool CanReadConfirmed 
		{
			get
			{
				return this.CanRead(this.Meta.Confirmed);
			}
		}

		public bool CanWriteConfirmed 
		{
			get
			{
				return this.CanWrite(this.Meta.Confirmed);
			}
		}



		virtual public global::System.Boolean Confirmed 
		{
			get
			{
				return (global::System.Boolean) this.Get(Meta.Confirmed);
			}
			set
			{
				this.Set(Meta.Confirmed, value);
			}
		}

		virtual public bool ExistConfirmed{
			get
			{
				return this.Exist(Meta.Confirmed);
			}
		}

		virtual public void RemoveConfirmed()
		{
			this.Set(Meta.Confirmed, null);
		}
		public bool CanReadTitle 
		{
			get
			{
				return this.CanRead(this.Meta.Title);
			}
		}

		public bool CanWriteTitle 
		{
			get
			{
				return this.CanWrite(this.Meta.Title);
			}
		}



		virtual public global::System.String Title 
		{
			get
			{
				return (global::System.String) this.Get(Meta.Title);
			}
			set
			{
				this.Set(Meta.Title, value);
			}
		}

		virtual public bool ExistTitle{
			get
			{
				return this.Exist(Meta.Title);
			}
		}

		virtual public void RemoveTitle()
		{
			this.Set(Meta.Title, null);
		}
		public bool CanReadDescription 
		{
			get
			{
				return this.CanRead(this.Meta.Description);
			}
		}

		public bool CanWriteDescription 
		{
			get
			{
				return this.CanWrite(this.Meta.Description);
			}
		}



		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) this.Get(Meta.Description);
			}
			set
			{
				this.Set(Meta.Description, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return this.Exist(Meta.Description);
			}
		}

		virtual public void RemoveDescription()
		{
			this.Set(Meta.Description, null);
		}
		public bool CanReadDateCreated 
		{
			get
			{
				return this.CanRead(this.Meta.DateCreated);
			}
		}

		public bool CanWriteDateCreated 
		{
			get
			{
				return this.CanWrite(this.Meta.DateCreated);
			}
		}



		virtual public global::System.DateTime DateCreated 
		{
			get
			{
				return (global::System.DateTime) this.Get(Meta.DateCreated);
			}
			set
			{
				this.Set(Meta.DateCreated, value);
			}
		}

		virtual public bool ExistDateCreated{
			get
			{
				return this.Exist(Meta.DateCreated);
			}
		}

		virtual public void RemoveDateCreated()
		{
			this.Set(Meta.DateCreated, null);
		}


	}
}