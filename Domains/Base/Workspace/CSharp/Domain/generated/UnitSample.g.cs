// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Workspace.Domain
{
	public partial class UnitSample : SessionObject 
	{
		public UnitSample(Session session)
		: base(session)
		{
		}

		public Allors.Workspace.Meta.MetaUnitSample Meta
		{
			get
			{
				return Allors.Workspace.Meta.MetaUnitSample.Instance;
			}
		}

		public static UnitSample Instantiate (Session allorsSession, long allorsObjectId)
		{
			return (UnitSample) allorsSession.Get(allorsObjectId);		
		}

		public override bool Equals(object obj)
        {
            var that = obj as SessionObject;
		    if (that == null)
		    {
		        return false;
		    }

		    return this.Id.Equals(that.Id);
        }

		public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }


		public bool CanReadAllorsBinary 
		{
			get
			{
				return this.CanRead(this.Meta.AllorsBinary);
			}
		}

		public bool CanWriteAllorsBinary 
		{
			get
			{
				return this.CanWrite(this.Meta.AllorsBinary);
			}
		}



		virtual public global::System.Byte[] AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) this.Get(Meta.AllorsBinary);
			}
			set
			{
				this.Set(Meta.AllorsBinary, value);
			}
		}

		virtual public bool ExistAllorsBinary{
			get
			{
				return this.Exist(Meta.AllorsBinary);
			}
		}

		virtual public void RemoveAllorsBinary()
		{
			this.Set(Meta.AllorsBinary, null);
		}
		public bool CanReadAllorsDateTime 
		{
			get
			{
				return this.CanRead(this.Meta.AllorsDateTime);
			}
		}

		public bool CanWriteAllorsDateTime 
		{
			get
			{
				return this.CanWrite(this.Meta.AllorsDateTime);
			}
		}



		virtual public global::System.DateTime? AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) this.Get(Meta.AllorsDateTime);
			}
			set
			{
				this.Set(Meta.AllorsDateTime, value);
			}
		}

		virtual public bool ExistAllorsDateTime{
			get
			{
				return this.Exist(Meta.AllorsDateTime);
			}
		}

		virtual public void RemoveAllorsDateTime()
		{
			this.Set(Meta.AllorsDateTime, null);
		}
		public bool CanReadAllorsBoolean 
		{
			get
			{
				return this.CanRead(this.Meta.AllorsBoolean);
			}
		}

		public bool CanWriteAllorsBoolean 
		{
			get
			{
				return this.CanWrite(this.Meta.AllorsBoolean);
			}
		}



		virtual public global::System.Boolean? AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) this.Get(Meta.AllorsBoolean);
			}
			set
			{
				this.Set(Meta.AllorsBoolean, value);
			}
		}

		virtual public bool ExistAllorsBoolean{
			get
			{
				return this.Exist(Meta.AllorsBoolean);
			}
		}

		virtual public void RemoveAllorsBoolean()
		{
			this.Set(Meta.AllorsBoolean, null);
		}
		public bool CanReadAllorsDouble 
		{
			get
			{
				return this.CanRead(this.Meta.AllorsDouble);
			}
		}

		public bool CanWriteAllorsDouble 
		{
			get
			{
				return this.CanWrite(this.Meta.AllorsDouble);
			}
		}



		virtual public global::System.Double? AllorsDouble 
		{
			get
			{
				return (global::System.Double?) this.Get(Meta.AllorsDouble);
			}
			set
			{
				this.Set(Meta.AllorsDouble, value);
			}
		}

		virtual public bool ExistAllorsDouble{
			get
			{
				return this.Exist(Meta.AllorsDouble);
			}
		}

		virtual public void RemoveAllorsDouble()
		{
			this.Set(Meta.AllorsDouble, null);
		}
		public bool CanReadAllorsInteger 
		{
			get
			{
				return this.CanRead(this.Meta.AllorsInteger);
			}
		}

		public bool CanWriteAllorsInteger 
		{
			get
			{
				return this.CanWrite(this.Meta.AllorsInteger);
			}
		}



		virtual public global::System.Int32? AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) this.Get(Meta.AllorsInteger);
			}
			set
			{
				this.Set(Meta.AllorsInteger, value);
			}
		}

		virtual public bool ExistAllorsInteger{
			get
			{
				return this.Exist(Meta.AllorsInteger);
			}
		}

		virtual public void RemoveAllorsInteger()
		{
			this.Set(Meta.AllorsInteger, null);
		}
		public bool CanReadAllorsString 
		{
			get
			{
				return this.CanRead(this.Meta.AllorsString);
			}
		}

		public bool CanWriteAllorsString 
		{
			get
			{
				return this.CanWrite(this.Meta.AllorsString);
			}
		}



		virtual public global::System.String AllorsString 
		{
			get
			{
				return (global::System.String) this.Get(Meta.AllorsString);
			}
			set
			{
				this.Set(Meta.AllorsString, value);
			}
		}

		virtual public bool ExistAllorsString{
			get
			{
				return this.Exist(Meta.AllorsString);
			}
		}

		virtual public void RemoveAllorsString()
		{
			this.Set(Meta.AllorsString, null);
		}
		public bool CanReadAllorsUnique 
		{
			get
			{
				return this.CanRead(this.Meta.AllorsUnique);
			}
		}

		public bool CanWriteAllorsUnique 
		{
			get
			{
				return this.CanWrite(this.Meta.AllorsUnique);
			}
		}



		virtual public global::System.Guid? AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) this.Get(Meta.AllorsUnique);
			}
			set
			{
				this.Set(Meta.AllorsUnique, value);
			}
		}

		virtual public bool ExistAllorsUnique{
			get
			{
				return this.Exist(Meta.AllorsUnique);
			}
		}

		virtual public void RemoveAllorsUnique()
		{
			this.Set(Meta.AllorsUnique, null);
		}
		public bool CanReadAllorsDecimal 
		{
			get
			{
				return this.CanRead(this.Meta.AllorsDecimal);
			}
		}

		public bool CanWriteAllorsDecimal 
		{
			get
			{
				return this.CanWrite(this.Meta.AllorsDecimal);
			}
		}



		virtual public global::System.Decimal? AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) this.Get(Meta.AllorsDecimal);
			}
			set
			{
				this.Set(Meta.AllorsDecimal, value);
			}
		}

		virtual public bool ExistAllorsDecimal{
			get
			{
				return this.Exist(Meta.AllorsDecimal);
			}
		}

		virtual public void RemoveAllorsDecimal()
		{
			this.Set(Meta.AllorsDecimal, null);
		}


	}
}