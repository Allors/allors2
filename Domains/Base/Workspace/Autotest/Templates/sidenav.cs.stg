delimiters "$", "$"

TemplateId() ::= <<AD9BA86D-0F33-44C7-933C-00D9D3527715>>
TemplateName() ::= <<Sidenav>>
TemplateVersion() ::= <<1.0.0>>
TemplateConfiguration(model) ::= <<
$!
Copyright 2002-2019 Allors bvba.
Licensed under the Lesser General Public Licence v3 (LGPL)
For more information visit http://www.allors.com/legal
!$
<generations>
    <generation template="sidenav" input="menu" output="sidenav.g.cs"/>
</generations>
>>

sidenav(model, menu) ::= <<
// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Tests
{
    using Angular.Html;
    using Pages;
    using Pages.Relations;

    public partial class Sidenav
    {
$menu.MenuItems:{menuItem|$menuItem(menuItem)$}; separator="\n"$	
    }
}
>>

menuItem(menuItem) ::= <<
        // $menuItem.Title$
$if(!menuItem.Parent)$
$if(menuItem.Link)$
        public Anchor $menuItem.Title$ => this.Link("$menuItem.Link$");

        public $menuItem.Title$Page NavigateTo$menuItem.Title$()
        {
            this.Navigate(this.$menuItem.Title$);
            return new $menuItem.Title$Page(this.Driver);
        }

$else$
        public Element $menuItem.Title$Group => this.Group("$menuItem.Title$");

$endif$
$else$
        public Anchor $menuItem.Title$ => this.Link("$menuItem.Link$");

        public $menuItem.Title$Page NavigateTo$menuItem.Title$()
        {
            this.Navigate(this.$menuItem.Parent.Title$Group, this.$menuItem.Title$);
            return new $menuItem.Title$Page(this.Driver);
        }
$endif$

$menuItem.Children:{menuItem|$menuItem(menuItem)$}; separator="\n"$	

>>