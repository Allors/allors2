// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPostBuild : Allors.Meta.Method
	{
		protected ObjectOnPostBuild(Object @object) : base(@object)
		{
		}
	}

	public partial class EmailMessageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnPostBuild); 

		public EmailMessageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnPostBuildMethodInvocation;
			}
		}
	}public partial class BuildOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BuildOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Build.ObjectType, Allors.Meta.M.Build.OnPostBuild); 

		public BuildOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BuildOnPostBuildMethodInvocation;
			}
		}
	}public partial class BadUIOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BadUIOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BadUI.ObjectType, Allors.Meta.M.BadUI.OnPostBuild); 

		public BadUIOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BadUIOnPostBuildMethodInvocation;
			}
		}
	}public partial class ClassWithoutRolesOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ClassWithoutRolesOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ClassWithoutRoles.ObjectType, Allors.Meta.M.ClassWithoutRoles.OnPostBuild); 

		public ClassWithoutRolesOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClassWithoutRolesOnPostBuildMethodInvocation;
			}
		}
	}public partial class DependeeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DependeeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dependee.ObjectType, Allors.Meta.M.Dependee.OnPostBuild); 

		public DependeeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependeeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ExtenderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExtenderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Extender.ObjectType, Allors.Meta.M.Extender.OnPostBuild); 

		public ExtenderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExtenderOnPostBuildMethodInvocation;
			}
		}
	}public partial class FirstOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FirstOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.First.ObjectType, Allors.Meta.M.First.OnPostBuild); 

		public FirstOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FirstOnPostBuildMethodInvocation;
			}
		}
	}public partial class FromOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FromOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.From.ObjectType, Allors.Meta.M.From.OnPostBuild); 

		public FromOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FromOnPostBuildMethodInvocation;
			}
		}
	}public partial class PlaceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PlaceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Place.ObjectType, Allors.Meta.M.Place.OnPostBuild); 

		public PlaceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlaceOnPostBuildMethodInvocation;
			}
		}
	}public partial class SecondOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecondOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Second.ObjectType, Allors.Meta.M.Second.OnPostBuild); 

		public SecondOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecondOnPostBuildMethodInvocation;
			}
		}
	}public partial class SimpleJobOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SimpleJobOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SimpleJob.ObjectType, Allors.Meta.M.SimpleJob.OnPostBuild); 

		public SimpleJobOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SimpleJobOnPostBuildMethodInvocation;
			}
		}
	}public partial class StatefulCompanyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StatefulCompanyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatefulCompany.ObjectType, Allors.Meta.M.StatefulCompany.OnPostBuild); 

		public StatefulCompanyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatefulCompanyOnPostBuildMethodInvocation;
			}
		}
	}public partial class SubdependeeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubdependeeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Subdependee.ObjectType, Allors.Meta.M.Subdependee.OnPostBuild); 

		public SubdependeeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubdependeeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ThirdOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThirdOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Third.ObjectType, Allors.Meta.M.Third.OnPostBuild); 

		public ThirdOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThirdOnPostBuildMethodInvocation;
			}
		}
	}public partial class ToOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ToOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.To.ObjectType, Allors.Meta.M.To.OnPostBuild); 

		public ToOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccessControlOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnPostBuild); 

		public AccessControlOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Order.ObjectType, Allors.Meta.M.Order.OnPostBuild); 

		public OrderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderLineOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderLineOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderLine.ObjectType, Allors.Meta.M.OrderLine.OnPostBuild); 

		public OrderLineOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderLineOnPostBuildMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnPostBuild); 

		public LocalisedTextOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPostBuildMethodInvocation;
			}
		}
	}public partial class CountryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnPostBuild); 

		public CountryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPostBuildMethodInvocation;
			}
		}
	}public partial class CurrencyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnPostBuild); 

		public CurrencyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPostBuildMethodInvocation;
			}
		}
	}public partial class LanguageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnPostBuild); 

		public LanguageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPostBuildMethodInvocation;
			}
		}
	}public partial class LocaleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnPostBuild); 

		public LocaleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnPostBuild); 

		public MediaOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaContentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnPostBuild); 

		public MediaContentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PermissionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnPostBuild); 

		public PermissionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPostBuildMethodInvocation;
			}
		}
	}public partial class RoleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnPostBuild); 

		public RoleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPostBuildMethodInvocation;
			}
		}
	}public partial class SingletonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnPostBuild); 

		public SingletonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPostBuildMethodInvocation;
			}
		}
	}public partial class UserGroupOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnPostBuild); 

		public UserGroupOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPostBuildMethodInvocation;
			}
		}
	}public partial class NotificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnPostBuild); 

		public NotificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class NotificationListOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnPostBuild); 

		public NotificationListOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnPostBuild); 

		public TaskAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class C1OnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation C1OnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.C1.ObjectType, Allors.Meta.M.C1.OnPostBuild); 

		public C1OnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1OnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnPostBuild); 

		public OrganisationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPostBuildMethodInvocation;
			}
		}
	}public partial class UnitSampleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitSampleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitSample.ObjectType, Allors.Meta.M.UnitSample.OnPostBuild); 

		public UnitSampleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitSampleOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderLineVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderLineVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderLineVersion.ObjectType, Allors.Meta.M.OrderLineVersion.OnPostBuild); 

		public OrderLineVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderLineVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderVersion.ObjectType, Allors.Meta.M.OrderVersion.OnPostBuild); 

		public OrderVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class GenderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GenderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Gender.ObjectType, Allors.Meta.M.Gender.OnPostBuild); 

		public GenderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderOnPostBuildMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnPostBuild); 

		public AutomatedAgentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnPostBuild); 

		public PersonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPostBuildMethodInvocation;
			}
		}
	}public partial class LoginOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnPostBuild); 

		public LoginOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPostBuildMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnPostBuild); 

		public SecurityTokenOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaskListOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnPostBuild); 

		public TaskListOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnPostBuildMethodInvocation;
			}
		}
	}public partial class DependentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DependentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dependent.ObjectType, Allors.Meta.M.Dependent.OnPostBuild); 

		public DependentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependentOnPostBuildMethodInvocation;
			}
		}
	}public partial class CounterOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnPostBuild); 

		public CounterOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPostBuildMethodInvocation;
			}
		}
	}public partial class PaymentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentState.ObjectType, Allors.Meta.M.PaymentState.OnPostBuild); 

		public PaymentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentState.ObjectType, Allors.Meta.M.ShipmentState.OnPostBuild); 

		public ShipmentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderState.ObjectType, Allors.Meta.M.OrderState.OnPostBuild); 

		public OrderStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class HomeAddressOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HomeAddressOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.HomeAddress.ObjectType, Allors.Meta.M.HomeAddress.OnPostBuild); 

		public HomeAddressOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HomeAddressOnPostBuildMethodInvocation;
			}
		}
	}public partial class MailboxAddressOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MailboxAddressOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MailboxAddress.ObjectType, Allors.Meta.M.MailboxAddress.OnPostBuild); 

		public MailboxAddressOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MailboxAddressOnPostBuildMethodInvocation;
			}
		}
	}public partial class C2OnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation C2OnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.C2.ObjectType, Allors.Meta.M.C2.OnPostBuild); 

		public C2OnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C2OnPostBuildMethodInvocation;
			}
		}
	}public partial class FourOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FourOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Four.ObjectType, Allors.Meta.M.Four.OnPostBuild); 

		public FourOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FourOnPostBuildMethodInvocation;
			}
		}
	}public partial class OneOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OneOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.One.ObjectType, Allors.Meta.M.One.OnPostBuild); 

		public OneOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneOnPostBuildMethodInvocation;
			}
		}
	}public partial class ThreeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThreeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Three.ObjectType, Allors.Meta.M.Three.OnPostBuild); 

		public ThreeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThreeOnPostBuildMethodInvocation;
			}
		}
	}public partial class TwoOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TwoOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Two.ObjectType, Allors.Meta.M.Two.OnPostBuild); 

		public TwoOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TwoOnPostBuildMethodInvocation;
			}
		}
	}public partial class ValidationC1OnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ValidationC1OnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ValidationC1.ObjectType, Allors.Meta.M.ValidationC1.OnPostBuild); 

		public ValidationC1OnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ValidationC1OnPostBuildMethodInvocation;
			}
		}
	}public partial class ValidationC2OnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ValidationC2OnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ValidationC2.ObjectType, Allors.Meta.M.ValidationC2.OnPostBuild); 

		public ValidationC2OnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ValidationC2OnPostBuildMethodInvocation;
			}
		}
	}
}