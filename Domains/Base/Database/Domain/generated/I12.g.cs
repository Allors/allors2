// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface I12 :  Object, Allors.IObject
	{


		global::System.Byte[] I12AllorsBinary 
		{
			get;
			set;
		}

		bool ExistI12AllorsBinary{get;}

		void RemoveI12AllorsBinary();


		C2 I12C2One2One
		{ 
			get;
			set;
		}

		bool ExistI12C2One2One
		{
			get;
		}

		void RemoveI12C2One2One();


		global::System.Double? I12AllorsDouble 
		{
			get;
			set;
		}

		bool ExistI12AllorsDouble{get;}

		void RemoveI12AllorsDouble();


		I1 I12I1Many2One
		{ 
			get;
			set;
		}

		bool ExistI12I1Many2One
		{
			get;
		}

		void RemoveI12I1Many2One();


		global::System.String I12AllorsString 
		{
			get;
			set;
		}

		bool ExistI12AllorsString{get;}

		void RemoveI12AllorsString();


		global::Allors.Extent<I12> I12I12Many2Manies
		{ 
			get;
			set;
		}

		void AddI12I12Many2Many (I12 value);

		void RemoveI12I12Many2Many (I12 value);

		bool ExistI12I12Many2Manies
		{
			get;
		}

		void RemoveI12I12Many2Manies();


		global::System.Decimal? I12AllorsDecimal 
		{
			get;
			set;
		}

		bool ExistI12AllorsDecimal{get;}

		void RemoveI12AllorsDecimal();


		global::Allors.Extent<I2> I12I2Many2Manies
		{ 
			get;
			set;
		}

		void AddI12I2Many2Many (I2 value);

		void RemoveI12I2Many2Many (I2 value);

		bool ExistI12I2Many2Manies
		{
			get;
		}

		void RemoveI12I2Many2Manies();


		global::Allors.Extent<C2> I12C2Many2Manies
		{ 
			get;
			set;
		}

		void AddI12C2Many2Many (C2 value);

		void RemoveI12C2Many2Many (C2 value);

		bool ExistI12C2Many2Manies
		{
			get;
		}

		void RemoveI12C2Many2Manies();


		global::Allors.Extent<I1> I12I1Many2Manies
		{ 
			get;
			set;
		}

		void AddI12I1Many2Many (I1 value);

		void RemoveI12I1Many2Many (I1 value);

		bool ExistI12I1Many2Manies
		{
			get;
		}

		void RemoveI12I1Many2Manies();


		global::Allors.Extent<I12> I12I12One2Manies
		{ 
			get;
			set;
		}

		void AddI12I12One2Many (I12 value);

		void RemoveI12I12One2Many (I12 value);

		bool ExistI12I12One2Manies
		{
			get;
		}

		void RemoveI12I12One2Manies();


		global::System.String Name 
		{
			get;
			set;
		}

		bool ExistName{get;}

		void RemoveName();


		global::Allors.Extent<C1> I12C1Many2Manies
		{ 
			get;
			set;
		}

		void AddI12C1Many2Many (C1 value);

		void RemoveI12C1Many2Many (C1 value);

		bool ExistI12C1Many2Manies
		{
			get;
		}

		void RemoveI12C1Many2Manies();


		I2 I12I2Many2One
		{ 
			get;
			set;
		}

		bool ExistI12I2Many2One
		{
			get;
		}

		void RemoveI12I2Many2One();


		global::System.Guid? I12AllorsUnique 
		{
			get;
			set;
		}

		bool ExistI12AllorsUnique{get;}

		void RemoveI12AllorsUnique();


		global::System.Int32? I12AllorsInteger 
		{
			get;
			set;
		}

		bool ExistI12AllorsInteger{get;}

		void RemoveI12AllorsInteger();


		global::Allors.Extent<I1> I12I1One2Manies
		{ 
			get;
			set;
		}

		void AddI12I1One2Many (I1 value);

		void RemoveI12I1One2Many (I1 value);

		bool ExistI12I1One2Manies
		{
			get;
		}

		void RemoveI12I1One2Manies();


		C1 I12C1One2One
		{ 
			get;
			set;
		}

		bool ExistI12C1One2One
		{
			get;
		}

		void RemoveI12C1One2One();


		I12 I12I12One2One
		{ 
			get;
			set;
		}

		bool ExistI12I12One2One
		{
			get;
		}

		void RemoveI12I12One2One();


		I2 I12I2One2One
		{ 
			get;
			set;
		}

		bool ExistI12I2One2One
		{
			get;
		}

		void RemoveI12I2One2One();


		global::Allors.Extent<I12> Dependencies
		{ 
			get;
			set;
		}

		void AddDependency (I12 value);

		void RemoveDependency (I12 value);

		bool ExistDependencies
		{
			get;
		}

		void RemoveDependencies();


		global::Allors.Extent<I2> I12I2One2Manies
		{ 
			get;
			set;
		}

		void AddI12I2One2Many (I2 value);

		void RemoveI12I2One2Many (I2 value);

		bool ExistI12I2One2Manies
		{
			get;
		}

		void RemoveI12I2One2Manies();


		C2 I12C2Many2One
		{ 
			get;
			set;
		}

		bool ExistI12C2Many2One
		{
			get;
		}

		void RemoveI12C2Many2One();


		I12 I12I12Many2One
		{ 
			get;
			set;
		}

		bool ExistI12I12Many2One
		{
			get;
		}

		void RemoveI12I12Many2One();


		global::System.Boolean? I12AllorsBoolean 
		{
			get;
			set;
		}

		bool ExistI12AllorsBoolean{get;}

		void RemoveI12AllorsBoolean();


		I1 I12I1One2One
		{ 
			get;
			set;
		}

		bool ExistI12I1One2One
		{
			get;
		}

		void RemoveI12I1One2One();


		global::Allors.Extent<C1> I12C1One2Manies
		{ 
			get;
			set;
		}

		void AddI12C1One2Many (C1 value);

		void RemoveI12C1One2Many (C1 value);

		bool ExistI12C1One2Manies
		{
			get;
		}

		void RemoveI12C1One2Manies();


		C1 I12C1Many2One
		{ 
			get;
			set;
		}

		bool ExistI12C1Many2One
		{
			get;
		}

		void RemoveI12C1Many2One();


		global::System.DateTime? I12AllorsDateTime 
		{
			get;
			set;
		}

		bool ExistI12AllorsDateTime{get;}

		void RemoveI12AllorsDateTime();



		global::Allors.Extent<C1> C1sWhereC1I12Many2Many
		{ 
			get;
		}

		bool ExistC1sWhereC1I12Many2Many
		{
			get;
		}


		global::Allors.Extent<C1> C1sWhereC1I12Many2One
		{ 
			get;
		}

		bool ExistC1sWhereC1I12Many2One
		{
			get;
		}


		C1 C1WhereC1I12One2Many
		{
			get;
		}

		bool ExistC1WhereC1I12One2Many
		{
			get;
		}


		C1 C1WhereC1I12One2One
		{
			get;
		}

		bool ExistC1WhereC1I12One2One
		{
			get;
		}


		global::Allors.Extent<C2> C2sWhereC2I12Many2One
		{ 
			get;
		}

		bool ExistC2sWhereC2I12Many2One
		{
			get;
		}


		C2 C2WhereC2I12One2One
		{
			get;
		}

		bool ExistC2WhereC2I12One2One
		{
			get;
		}


		global::Allors.Extent<C2> C2sWhereC2I12Many2Many
		{ 
			get;
		}

		bool ExistC2sWhereC2I12Many2Many
		{
			get;
		}


		C2 C2WhereC2I12One2Many
		{
			get;
		}

		bool ExistC2WhereC2I12One2Many
		{
			get;
		}


		global::Allors.Extent<I1> I1sWhereI1I12Many2Many
		{ 
			get;
		}

		bool ExistI1sWhereI1I12Many2Many
		{
			get;
		}


		global::Allors.Extent<I1> I1sWhereI1I12Many2One
		{ 
			get;
		}

		bool ExistI1sWhereI1I12Many2One
		{
			get;
		}


		I1 I1WhereI1I12One2One
		{
			get;
		}

		bool ExistI1WhereI1I12One2One
		{
			get;
		}


		I1 I1WhereI1I12One2Many
		{
			get;
		}

		bool ExistI1WhereI1I12One2Many
		{
			get;
		}


		global::Allors.Extent<I12> I12sWhereI12I12Many2Many
		{ 
			get;
		}

		bool ExistI12sWhereI12I12Many2Many
		{
			get;
		}


		I12 I12WhereI12I12One2Many
		{
			get;
		}

		bool ExistI12WhereI12I12One2Many
		{
			get;
		}


		I12 I12WhereI12I12One2One
		{
			get;
		}

		bool ExistI12WhereI12I12One2One
		{
			get;
		}


		global::Allors.Extent<I12> I12sWhereDependency
		{ 
			get;
		}

		bool ExistI12sWhereDependency
		{
			get;
		}


		global::Allors.Extent<I12> I12sWhereI12I12Many2One
		{ 
			get;
		}

		bool ExistI12sWhereI12I12Many2One
		{
			get;
		}


		global::Allors.Extent<I2> I2sWhereI2I12Many2One
		{ 
			get;
		}

		bool ExistI2sWhereI2I12Many2One
		{
			get;
		}


		I2 I2WhereI2I12One2Many
		{
			get;
		}

		bool ExistI2WhereI2I12One2Many
		{
			get;
		}


		I2 I2WhereI2I12One2One
		{
			get;
		}

		bool ExistI2WhereI2I12One2One
		{
			get;
		}


		global::Allors.Extent<I2> I2sWhereI2I12Many2Many
		{ 
			get;
		}

		bool ExistI2sWhereI2I12Many2Many
		{
			get;
		}

	}

	public partial interface I12Builder : ObjectBuilder , global::System.IDisposable
	{	
		global::System.Byte[] I12AllorsBinary {get;}
		

		C2 I12C2One2One {get;}

		

		global::System.Double? I12AllorsDouble {get;}
		

		I1 I12I1Many2One {get;}

		

		global::System.String I12AllorsString {get;}
		


		global::System.Collections.Generic.List<I12> I12I12Many2Manies {get;}		

		

		global::System.Decimal? I12AllorsDecimal {get;}
		


		global::System.Collections.Generic.List<I2> I12I2Many2Manies {get;}		

		


		global::System.Collections.Generic.List<C2> I12C2Many2Manies {get;}		

		


		global::System.Collections.Generic.List<I1> I12I1Many2Manies {get;}		

		


		global::System.Collections.Generic.List<I12> I12I12One2Manies {get;}		

		

		global::System.String Name {get;}
		


		global::System.Collections.Generic.List<C1> I12C1Many2Manies {get;}		

		

		I2 I12I2Many2One {get;}

		

		global::System.Guid? I12AllorsUnique {get;}
		

		global::System.Int32? I12AllorsInteger {get;}
		


		global::System.Collections.Generic.List<I1> I12I1One2Manies {get;}		

		

		C1 I12C1One2One {get;}

		

		I12 I12I12One2One {get;}

		

		I2 I12I2One2One {get;}

		


		global::System.Collections.Generic.List<I12> Dependencies {get;}		

		


		global::System.Collections.Generic.List<I2> I12I2One2Manies {get;}		

		

		C2 I12C2Many2One {get;}

		

		I12 I12I12Many2One {get;}

		

		global::System.Boolean? I12AllorsBoolean {get;}
		

		I1 I12I1One2One {get;}

		


		global::System.Collections.Generic.List<C1> I12C1One2Manies {get;}		

		

		C1 I12C1Many2One {get;}

		

		global::System.DateTime? I12AllorsDateTime {get;}
		

	}

	public partial class I12s : global::Allors.ObjectsBase<I12>
	{
		public I12s(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaI12 Meta
		{
			get
			{
				return Allors.Meta.MetaI12.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}