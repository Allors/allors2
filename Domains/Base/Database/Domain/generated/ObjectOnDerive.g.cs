// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnDerive : Allors.Meta.Method
	{
		protected ObjectOnDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class EmailMessageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnDerive); 

		public EmailMessageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnDeriveMethodInvocation;
			}
		}
	}public partial class BuildOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BuildOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Build.ObjectType, Allors.Meta.M.Build.OnDerive); 

		public BuildOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BuildOnDeriveMethodInvocation;
			}
		}
	}public partial class BadUIOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BadUIOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BadUI.ObjectType, Allors.Meta.M.BadUI.OnDerive); 

		public BadUIOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BadUIOnDeriveMethodInvocation;
			}
		}
	}public partial class ClassWithoutRolesOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClassWithoutRolesOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ClassWithoutRoles.ObjectType, Allors.Meta.M.ClassWithoutRoles.OnDerive); 

		public ClassWithoutRolesOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClassWithoutRolesOnDeriveMethodInvocation;
			}
		}
	}public partial class DependeeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DependeeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dependee.ObjectType, Allors.Meta.M.Dependee.OnDerive); 

		public DependeeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependeeOnDeriveMethodInvocation;
			}
		}
	}public partial class ExtenderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExtenderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Extender.ObjectType, Allors.Meta.M.Extender.OnDerive); 

		public ExtenderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExtenderOnDeriveMethodInvocation;
			}
		}
	}public partial class FirstOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FirstOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.First.ObjectType, Allors.Meta.M.First.OnDerive); 

		public FirstOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FirstOnDeriveMethodInvocation;
			}
		}
	}public partial class FromOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FromOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.From.ObjectType, Allors.Meta.M.From.OnDerive); 

		public FromOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FromOnDeriveMethodInvocation;
			}
		}
	}public partial class PlaceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PlaceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Place.ObjectType, Allors.Meta.M.Place.OnDerive); 

		public PlaceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlaceOnDeriveMethodInvocation;
			}
		}
	}public partial class SecondOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecondOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Second.ObjectType, Allors.Meta.M.Second.OnDerive); 

		public SecondOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecondOnDeriveMethodInvocation;
			}
		}
	}public partial class SimpleJobOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SimpleJobOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SimpleJob.ObjectType, Allors.Meta.M.SimpleJob.OnDerive); 

		public SimpleJobOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SimpleJobOnDeriveMethodInvocation;
			}
		}
	}public partial class StatefulCompanyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatefulCompanyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatefulCompany.ObjectType, Allors.Meta.M.StatefulCompany.OnDerive); 

		public StatefulCompanyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatefulCompanyOnDeriveMethodInvocation;
			}
		}
	}public partial class SubdependeeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubdependeeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Subdependee.ObjectType, Allors.Meta.M.Subdependee.OnDerive); 

		public SubdependeeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubdependeeOnDeriveMethodInvocation;
			}
		}
	}public partial class ThirdOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThirdOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Third.ObjectType, Allors.Meta.M.Third.OnDerive); 

		public ThirdOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThirdOnDeriveMethodInvocation;
			}
		}
	}public partial class ToOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ToOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.To.ObjectType, Allors.Meta.M.To.OnDerive); 

		public ToOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToOnDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnDerive); 

		public AccessControlOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Order.ObjectType, Allors.Meta.M.Order.OnDerive); 

		public OrderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderLineOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderLineOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderLine.ObjectType, Allors.Meta.M.OrderLine.OnDerive); 

		public OrderLineOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderLineOnDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnDerive); 

		public LocalisedTextOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnDerive); 

		public CountryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnDerive); 

		public CurrencyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnDerive); 

		public LanguageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnDerive); 

		public LocaleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnDerive); 

		public MediaOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnDerive); 

		public MediaContentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnDerive); 

		public PermissionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnDerive); 

		public RoleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnDerive); 

		public SingletonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnDerive); 

		public UserGroupOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnDeriveMethodInvocation;
			}
		}
	}public partial class NotificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnDerive); 

		public NotificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnDeriveMethodInvocation;
			}
		}
	}public partial class NotificationListOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnDerive); 

		public NotificationListOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnDeriveMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnDerive); 

		public TaskAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class C1OnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation C1OnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.C1.ObjectType, Allors.Meta.M.C1.OnDerive); 

		public C1OnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1OnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnDerive); 

		public OrganisationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnDeriveMethodInvocation;
			}
		}
	}public partial class UnitSampleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitSampleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitSample.ObjectType, Allors.Meta.M.UnitSample.OnDerive); 

		public UnitSampleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitSampleOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderLineVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderLineVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderLineVersion.ObjectType, Allors.Meta.M.OrderLineVersion.OnDerive); 

		public OrderLineVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderLineVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderVersion.ObjectType, Allors.Meta.M.OrderVersion.OnDerive); 

		public OrderVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class GenderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Gender.ObjectType, Allors.Meta.M.Gender.OnDerive); 

		public GenderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderOnDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnDerive); 

		public AutomatedAgentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnDerive); 

		public PersonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnDerive); 

		public LoginOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnDerive); 

		public SecurityTokenOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnDeriveMethodInvocation;
			}
		}
	}public partial class TaskListOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnDerive); 

		public TaskListOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnDeriveMethodInvocation;
			}
		}
	}public partial class DependentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DependentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dependent.ObjectType, Allors.Meta.M.Dependent.OnDerive); 

		public DependentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependentOnDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnDerive); 

		public CounterOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnDeriveMethodInvocation;
			}
		}
	}public partial class PaymentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentState.ObjectType, Allors.Meta.M.PaymentState.OnDerive); 

		public PaymentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentState.ObjectType, Allors.Meta.M.ShipmentState.OnDerive); 

		public ShipmentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderState.ObjectType, Allors.Meta.M.OrderState.OnDerive); 

		public OrderStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderStateOnDeriveMethodInvocation;
			}
		}
	}public partial class HomeAddressOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HomeAddressOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.HomeAddress.ObjectType, Allors.Meta.M.HomeAddress.OnDerive); 

		public HomeAddressOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HomeAddressOnDeriveMethodInvocation;
			}
		}
	}public partial class MailboxAddressOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MailboxAddressOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MailboxAddress.ObjectType, Allors.Meta.M.MailboxAddress.OnDerive); 

		public MailboxAddressOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MailboxAddressOnDeriveMethodInvocation;
			}
		}
	}public partial class C2OnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation C2OnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.C2.ObjectType, Allors.Meta.M.C2.OnDerive); 

		public C2OnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C2OnDeriveMethodInvocation;
			}
		}
	}public partial class FourOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FourOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Four.ObjectType, Allors.Meta.M.Four.OnDerive); 

		public FourOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FourOnDeriveMethodInvocation;
			}
		}
	}public partial class OneOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.One.ObjectType, Allors.Meta.M.One.OnDerive); 

		public OneOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneOnDeriveMethodInvocation;
			}
		}
	}public partial class ThreeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThreeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Three.ObjectType, Allors.Meta.M.Three.OnDerive); 

		public ThreeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThreeOnDeriveMethodInvocation;
			}
		}
	}public partial class TwoOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TwoOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Two.ObjectType, Allors.Meta.M.Two.OnDerive); 

		public TwoOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TwoOnDeriveMethodInvocation;
			}
		}
	}public partial class ValidationC1OnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ValidationC1OnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ValidationC1.ObjectType, Allors.Meta.M.ValidationC1.OnDerive); 

		public ValidationC1OnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ValidationC1OnDeriveMethodInvocation;
			}
		}
	}public partial class ValidationC2OnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ValidationC2OnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ValidationC2.ObjectType, Allors.Meta.M.ValidationC2.OnDerive); 

		public ValidationC2OnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ValidationC2OnDeriveMethodInvocation;
			}
		}
	}
}