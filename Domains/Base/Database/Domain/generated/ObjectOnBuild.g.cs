// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnBuild : Allors.Meta.Method
	{
		protected ObjectOnBuild(Object @object) : base(@object)
		{
		}
	}

	public partial class EmailMessageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnBuild); 

		public EmailMessageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnBuildMethodInvocation;
			}
		}
	}public partial class BuildOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BuildOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Build.ObjectType, Allors.Meta.M.Build.OnBuild); 

		public BuildOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BuildOnBuildMethodInvocation;
			}
		}
	}public partial class BadUIOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BadUIOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BadUI.ObjectType, Allors.Meta.M.BadUI.OnBuild); 

		public BadUIOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BadUIOnBuildMethodInvocation;
			}
		}
	}public partial class ClassWithoutRolesOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ClassWithoutRolesOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ClassWithoutRoles.ObjectType, Allors.Meta.M.ClassWithoutRoles.OnBuild); 

		public ClassWithoutRolesOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClassWithoutRolesOnBuildMethodInvocation;
			}
		}
	}public partial class DependeeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DependeeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dependee.ObjectType, Allors.Meta.M.Dependee.OnBuild); 

		public DependeeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependeeOnBuildMethodInvocation;
			}
		}
	}public partial class ExtenderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExtenderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Extender.ObjectType, Allors.Meta.M.Extender.OnBuild); 

		public ExtenderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExtenderOnBuildMethodInvocation;
			}
		}
	}public partial class FirstOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FirstOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.First.ObjectType, Allors.Meta.M.First.OnBuild); 

		public FirstOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FirstOnBuildMethodInvocation;
			}
		}
	}public partial class FromOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FromOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.From.ObjectType, Allors.Meta.M.From.OnBuild); 

		public FromOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FromOnBuildMethodInvocation;
			}
		}
	}public partial class PlaceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PlaceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Place.ObjectType, Allors.Meta.M.Place.OnBuild); 

		public PlaceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlaceOnBuildMethodInvocation;
			}
		}
	}public partial class SecondOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecondOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Second.ObjectType, Allors.Meta.M.Second.OnBuild); 

		public SecondOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecondOnBuildMethodInvocation;
			}
		}
	}public partial class SimpleJobOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SimpleJobOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SimpleJob.ObjectType, Allors.Meta.M.SimpleJob.OnBuild); 

		public SimpleJobOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SimpleJobOnBuildMethodInvocation;
			}
		}
	}public partial class StatefulCompanyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StatefulCompanyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatefulCompany.ObjectType, Allors.Meta.M.StatefulCompany.OnBuild); 

		public StatefulCompanyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatefulCompanyOnBuildMethodInvocation;
			}
		}
	}public partial class SubdependeeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubdependeeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Subdependee.ObjectType, Allors.Meta.M.Subdependee.OnBuild); 

		public SubdependeeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubdependeeOnBuildMethodInvocation;
			}
		}
	}public partial class ThirdOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThirdOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Third.ObjectType, Allors.Meta.M.Third.OnBuild); 

		public ThirdOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThirdOnBuildMethodInvocation;
			}
		}
	}public partial class ToOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ToOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.To.ObjectType, Allors.Meta.M.To.OnBuild); 

		public ToOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToOnBuildMethodInvocation;
			}
		}
	}public partial class AccessControlOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnBuild); 

		public AccessControlOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnBuildMethodInvocation;
			}
		}
	}public partial class OrderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Order.ObjectType, Allors.Meta.M.Order.OnBuild); 

		public OrderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderOnBuildMethodInvocation;
			}
		}
	}public partial class OrderLineOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderLineOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderLine.ObjectType, Allors.Meta.M.OrderLine.OnBuild); 

		public OrderLineOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderLineOnBuildMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnBuild); 

		public LocalisedTextOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnBuildMethodInvocation;
			}
		}
	}public partial class CountryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnBuild); 

		public CountryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnBuildMethodInvocation;
			}
		}
	}public partial class CurrencyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnBuild); 

		public CurrencyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnBuildMethodInvocation;
			}
		}
	}public partial class LanguageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnBuild); 

		public LanguageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnBuildMethodInvocation;
			}
		}
	}public partial class LocaleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnBuild); 

		public LocaleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnBuildMethodInvocation;
			}
		}
	}public partial class MediaOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnBuild); 

		public MediaOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnBuildMethodInvocation;
			}
		}
	}public partial class MediaContentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnBuild); 

		public MediaContentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnBuildMethodInvocation;
			}
		}
	}public partial class PermissionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnBuild); 

		public PermissionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnBuildMethodInvocation;
			}
		}
	}public partial class RoleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnBuild); 

		public RoleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnBuildMethodInvocation;
			}
		}
	}public partial class SingletonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnBuild); 

		public SingletonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnBuildMethodInvocation;
			}
		}
	}public partial class UserGroupOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnBuild); 

		public UserGroupOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnBuildMethodInvocation;
			}
		}
	}public partial class NotificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnBuild); 

		public NotificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnBuildMethodInvocation;
			}
		}
	}public partial class NotificationListOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnBuild); 

		public NotificationListOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnBuildMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnBuild); 

		public TaskAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class C1OnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation C1OnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.C1.ObjectType, Allors.Meta.M.C1.OnBuild); 

		public C1OnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1OnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnBuild); 

		public OrganisationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnBuildMethodInvocation;
			}
		}
	}public partial class UnitSampleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitSampleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitSample.ObjectType, Allors.Meta.M.UnitSample.OnBuild); 

		public UnitSampleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitSampleOnBuildMethodInvocation;
			}
		}
	}public partial class OrderLineVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderLineVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderLineVersion.ObjectType, Allors.Meta.M.OrderLineVersion.OnBuild); 

		public OrderLineVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderLineVersionOnBuildMethodInvocation;
			}
		}
	}public partial class OrderVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderVersion.ObjectType, Allors.Meta.M.OrderVersion.OnBuild); 

		public OrderVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderVersionOnBuildMethodInvocation;
			}
		}
	}public partial class GenderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GenderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Gender.ObjectType, Allors.Meta.M.Gender.OnBuild); 

		public GenderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderOnBuildMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnBuild); 

		public AutomatedAgentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnBuildMethodInvocation;
			}
		}
	}public partial class PersonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnBuild); 

		public PersonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnBuildMethodInvocation;
			}
		}
	}public partial class LoginOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnBuild); 

		public LoginOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnBuildMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnBuild); 

		public SecurityTokenOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnBuildMethodInvocation;
			}
		}
	}public partial class TaskListOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnBuild); 

		public TaskListOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnBuildMethodInvocation;
			}
		}
	}public partial class DependentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DependentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dependent.ObjectType, Allors.Meta.M.Dependent.OnBuild); 

		public DependentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependentOnBuildMethodInvocation;
			}
		}
	}public partial class CounterOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnBuild); 

		public CounterOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnBuildMethodInvocation;
			}
		}
	}public partial class PaymentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentState.ObjectType, Allors.Meta.M.PaymentState.OnBuild); 

		public PaymentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentStateOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentState.ObjectType, Allors.Meta.M.ShipmentState.OnBuild); 

		public ShipmentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentStateOnBuildMethodInvocation;
			}
		}
	}public partial class OrderStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderState.ObjectType, Allors.Meta.M.OrderState.OnBuild); 

		public OrderStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderStateOnBuildMethodInvocation;
			}
		}
	}public partial class HomeAddressOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HomeAddressOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.HomeAddress.ObjectType, Allors.Meta.M.HomeAddress.OnBuild); 

		public HomeAddressOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HomeAddressOnBuildMethodInvocation;
			}
		}
	}public partial class MailboxAddressOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MailboxAddressOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MailboxAddress.ObjectType, Allors.Meta.M.MailboxAddress.OnBuild); 

		public MailboxAddressOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MailboxAddressOnBuildMethodInvocation;
			}
		}
	}public partial class C2OnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation C2OnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.C2.ObjectType, Allors.Meta.M.C2.OnBuild); 

		public C2OnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C2OnBuildMethodInvocation;
			}
		}
	}public partial class FourOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FourOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Four.ObjectType, Allors.Meta.M.Four.OnBuild); 

		public FourOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FourOnBuildMethodInvocation;
			}
		}
	}public partial class OneOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OneOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.One.ObjectType, Allors.Meta.M.One.OnBuild); 

		public OneOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneOnBuildMethodInvocation;
			}
		}
	}public partial class ThreeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThreeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Three.ObjectType, Allors.Meta.M.Three.OnBuild); 

		public ThreeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThreeOnBuildMethodInvocation;
			}
		}
	}public partial class TwoOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TwoOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Two.ObjectType, Allors.Meta.M.Two.OnBuild); 

		public TwoOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TwoOnBuildMethodInvocation;
			}
		}
	}public partial class ValidationC1OnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ValidationC1OnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ValidationC1.ObjectType, Allors.Meta.M.ValidationC1.OnBuild); 

		public ValidationC1OnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ValidationC1OnBuildMethodInvocation;
			}
		}
	}public partial class ValidationC2OnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ValidationC2OnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ValidationC2.ObjectType, Allors.Meta.M.ValidationC2.OnBuild); 

		public ValidationC2OnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ValidationC2OnBuildMethodInvocation;
			}
		}
	}
}