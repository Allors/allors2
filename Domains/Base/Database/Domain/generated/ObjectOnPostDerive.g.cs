// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPostDerive : Allors.Meta.Method
	{
		protected ObjectOnPostDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class EmailMessageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnPostDerive); 

		public EmailMessageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BuildOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BuildOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Build.ObjectType, Allors.Meta.M.Build.OnPostDerive); 

		public BuildOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BuildOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BadUIOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BadUIOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BadUI.ObjectType, Allors.Meta.M.BadUI.OnPostDerive); 

		public BadUIOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BadUIOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ClassWithoutRolesOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClassWithoutRolesOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ClassWithoutRoles.ObjectType, Allors.Meta.M.ClassWithoutRoles.OnPostDerive); 

		public ClassWithoutRolesOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClassWithoutRolesOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DependeeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DependeeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dependee.ObjectType, Allors.Meta.M.Dependee.OnPostDerive); 

		public DependeeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependeeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ExtenderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExtenderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Extender.ObjectType, Allors.Meta.M.Extender.OnPostDerive); 

		public ExtenderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExtenderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FirstOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FirstOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.First.ObjectType, Allors.Meta.M.First.OnPostDerive); 

		public FirstOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FirstOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FromOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FromOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.From.ObjectType, Allors.Meta.M.From.OnPostDerive); 

		public FromOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FromOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PlaceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PlaceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Place.ObjectType, Allors.Meta.M.Place.OnPostDerive); 

		public PlaceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PlaceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SecondOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecondOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Second.ObjectType, Allors.Meta.M.Second.OnPostDerive); 

		public SecondOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecondOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SimpleJobOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SimpleJobOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SimpleJob.ObjectType, Allors.Meta.M.SimpleJob.OnPostDerive); 

		public SimpleJobOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SimpleJobOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StatefulCompanyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatefulCompanyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatefulCompany.ObjectType, Allors.Meta.M.StatefulCompany.OnPostDerive); 

		public StatefulCompanyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatefulCompanyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SubdependeeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubdependeeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Subdependee.ObjectType, Allors.Meta.M.Subdependee.OnPostDerive); 

		public SubdependeeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubdependeeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ThirdOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThirdOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Third.ObjectType, Allors.Meta.M.Third.OnPostDerive); 

		public ThirdOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThirdOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ToOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ToOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.To.ObjectType, Allors.Meta.M.To.OnPostDerive); 

		public ToOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ToOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnPostDerive); 

		public AccessControlOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Order.ObjectType, Allors.Meta.M.Order.OnPostDerive); 

		public OrderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderLineOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderLineOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderLine.ObjectType, Allors.Meta.M.OrderLine.OnPostDerive); 

		public OrderLineOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderLineOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnPostDerive); 

		public LocalisedTextOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnPostDerive); 

		public CountryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnPostDerive); 

		public CurrencyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnPostDerive); 

		public LanguageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnPostDerive); 

		public LocaleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnPostDerive); 

		public MediaOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnPostDerive); 

		public MediaContentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnPostDerive); 

		public PermissionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnPostDerive); 

		public RoleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnPostDerive); 

		public SingletonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnPostDerive); 

		public UserGroupOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NotificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnPostDerive); 

		public NotificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NotificationListOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnPostDerive); 

		public NotificationListOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnPostDerive); 

		public TaskAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class C1OnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation C1OnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.C1.ObjectType, Allors.Meta.M.C1.OnPostDerive); 

		public C1OnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C1OnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnPostDerive); 

		public OrganisationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UnitSampleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitSampleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitSample.ObjectType, Allors.Meta.M.UnitSample.OnPostDerive); 

		public UnitSampleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitSampleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderLineVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderLineVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderLineVersion.ObjectType, Allors.Meta.M.OrderLineVersion.OnPostDerive); 

		public OrderLineVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderLineVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderVersion.ObjectType, Allors.Meta.M.OrderVersion.OnPostDerive); 

		public OrderVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GenderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Gender.ObjectType, Allors.Meta.M.Gender.OnPostDerive); 

		public GenderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnPostDerive); 

		public AutomatedAgentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnPostDerive); 

		public PersonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnPostDerive); 

		public LoginOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnPostDerive); 

		public SecurityTokenOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaskListOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnPostDerive); 

		public TaskListOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DependentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DependentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dependent.ObjectType, Allors.Meta.M.Dependent.OnPostDerive); 

		public DependentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DependentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnPostDerive); 

		public CounterOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PaymentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentState.ObjectType, Allors.Meta.M.PaymentState.OnPostDerive); 

		public PaymentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentState.ObjectType, Allors.Meta.M.ShipmentState.OnPostDerive); 

		public ShipmentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderState.ObjectType, Allors.Meta.M.OrderState.OnPostDerive); 

		public OrderStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class HomeAddressOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HomeAddressOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.HomeAddress.ObjectType, Allors.Meta.M.HomeAddress.OnPostDerive); 

		public HomeAddressOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HomeAddressOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MailboxAddressOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MailboxAddressOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MailboxAddress.ObjectType, Allors.Meta.M.MailboxAddress.OnPostDerive); 

		public MailboxAddressOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MailboxAddressOnPostDeriveMethodInvocation;
			}
		}
	}public partial class C2OnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation C2OnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.C2.ObjectType, Allors.Meta.M.C2.OnPostDerive); 

		public C2OnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return C2OnPostDeriveMethodInvocation;
			}
		}
	}public partial class FourOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FourOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Four.ObjectType, Allors.Meta.M.Four.OnPostDerive); 

		public FourOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FourOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OneOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.One.ObjectType, Allors.Meta.M.One.OnPostDerive); 

		public OneOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ThreeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThreeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Three.ObjectType, Allors.Meta.M.Three.OnPostDerive); 

		public ThreeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThreeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TwoOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TwoOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Two.ObjectType, Allors.Meta.M.Two.OnPostDerive); 

		public TwoOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TwoOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ValidationC1OnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ValidationC1OnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ValidationC1.ObjectType, Allors.Meta.M.ValidationC1.OnPostDerive); 

		public ValidationC1OnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ValidationC1OnPostDeriveMethodInvocation;
			}
		}
	}public partial class ValidationC2OnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ValidationC2OnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ValidationC2.ObjectType, Allors.Meta.M.ValidationC2.OnPostDerive); 

		public ValidationC2OnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ValidationC2OnPostDeriveMethodInvocation;
			}
		}
	}
}