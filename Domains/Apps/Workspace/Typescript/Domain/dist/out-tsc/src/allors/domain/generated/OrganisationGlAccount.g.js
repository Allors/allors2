"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
const framework_1 = require("../../framework");
class OrganisationGlAccount extends framework_1.SessionObject {
    get CanReadProduct() {
        return this.canRead('Product');
    }
    get CanWriteProduct() {
        return this.canWrite('Product');
    }
    get Product() {
        return this.get('Product');
    }
    set Product(value) {
        this.set('Product', value);
    }
    get CanReadParent() {
        return this.canRead('Parent');
    }
    get CanWriteParent() {
        return this.canWrite('Parent');
    }
    get Parent() {
        return this.get('Parent');
    }
    set Parent(value) {
        this.set('Parent', value);
    }
    get CanReadParty() {
        return this.canRead('Party');
    }
    get CanWriteParty() {
        return this.canWrite('Party');
    }
    get Party() {
        return this.get('Party');
    }
    set Party(value) {
        this.set('Party', value);
    }
    get CanReadHasBankStatementTransactions() {
        return this.canRead('HasBankStatementTransactions');
    }
    get HasBankStatementTransactions() {
        return this.get('HasBankStatementTransactions');
    }
    get CanReadProductCategory() {
        return this.canRead('ProductCategory');
    }
    get CanWriteProductCategory() {
        return this.canWrite('ProductCategory');
    }
    get ProductCategory() {
        return this.get('ProductCategory');
    }
    set ProductCategory(value) {
        this.set('ProductCategory', value);
    }
    get CanReadGeneralLedgerAccount() {
        return this.canRead('GeneralLedgerAccount');
    }
    get CanWriteGeneralLedgerAccount() {
        return this.canWrite('GeneralLedgerAccount');
    }
    get GeneralLedgerAccount() {
        return this.get('GeneralLedgerAccount');
    }
    set GeneralLedgerAccount(value) {
        this.set('GeneralLedgerAccount', value);
    }
    get CanReadFromDate() {
        return this.canRead('FromDate');
    }
    get CanWriteFromDate() {
        return this.canWrite('FromDate');
    }
    get FromDate() {
        return this.get('FromDate');
    }
    set FromDate(value) {
        this.set('FromDate', value);
    }
    get CanReadThroughDate() {
        return this.canRead('ThroughDate');
    }
    get CanWriteThroughDate() {
        return this.canWrite('ThroughDate');
    }
    get ThroughDate() {
        return this.get('ThroughDate');
    }
    set ThroughDate(value) {
        this.set('ThroughDate', value);
    }
}
exports.OrganisationGlAccount = OrganisationGlAccount;
//# sourceMappingURL=OrganisationGlAccount.g.js.map