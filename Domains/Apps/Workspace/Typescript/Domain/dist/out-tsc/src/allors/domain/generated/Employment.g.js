"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
const framework_1 = require("../../framework");
class Employment extends framework_1.SessionObject {
    get CanReadEmployee() {
        return this.canRead('Employee');
    }
    get CanWriteEmployee() {
        return this.canWrite('Employee');
    }
    get Employee() {
        return this.get('Employee');
    }
    set Employee(value) {
        this.set('Employee', value);
    }
    get CanReadPayrollPreferences() {
        return this.canRead('PayrollPreferences');
    }
    get CanWritePayrollPreferences() {
        return this.canWrite('PayrollPreferences');
    }
    get PayrollPreferences() {
        return this.get('PayrollPreferences');
    }
    AddPayrollPreference(value) {
        return this.add('PayrollPreferences', value);
    }
    RemovePayrollPreference(value) {
        return this.remove('PayrollPreferences', value);
    }
    set PayrollPreferences(value) {
        this.set('PayrollPreferences', value);
    }
    get CanReadEmploymentTerminationReason() {
        return this.canRead('EmploymentTerminationReason');
    }
    get CanWriteEmploymentTerminationReason() {
        return this.canWrite('EmploymentTerminationReason');
    }
    get EmploymentTerminationReason() {
        return this.get('EmploymentTerminationReason');
    }
    set EmploymentTerminationReason(value) {
        this.set('EmploymentTerminationReason', value);
    }
    get CanReadEmploymentTermination() {
        return this.canRead('EmploymentTermination');
    }
    get CanWriteEmploymentTermination() {
        return this.canWrite('EmploymentTermination');
    }
    get EmploymentTermination() {
        return this.get('EmploymentTermination');
    }
    set EmploymentTermination(value) {
        this.set('EmploymentTermination', value);
    }
    get CanReadFromDate() {
        return this.canRead('FromDate');
    }
    get CanWriteFromDate() {
        return this.canWrite('FromDate');
    }
    get FromDate() {
        return this.get('FromDate');
    }
    set FromDate(value) {
        this.set('FromDate', value);
    }
    get CanReadThroughDate() {
        return this.canRead('ThroughDate');
    }
    get CanWriteThroughDate() {
        return this.canWrite('ThroughDate');
    }
    get ThroughDate() {
        return this.get('ThroughDate');
    }
    set ThroughDate(value) {
        this.set('ThroughDate', value);
    }
    get CanExecuteDelete() {
        return this.canExecute('Delete');
    }
    get Delete() {
        return new framework_1.Method(this, 'Delete');
    }
}
exports.Employment = Employment;
//# sourceMappingURL=Employment.g.js.map