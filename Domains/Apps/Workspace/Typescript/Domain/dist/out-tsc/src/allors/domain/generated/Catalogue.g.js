"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
const framework_1 = require("../../framework");
class Catalogue extends framework_1.SessionObject {
    get CanReadName() {
        return this.canRead('Name');
    }
    get Name() {
        return this.get('Name');
    }
    get CanReadDescription() {
        return this.canRead('Description');
    }
    get Description() {
        return this.get('Description');
    }
    get CanReadLocalisedNames() {
        return this.canRead('LocalisedNames');
    }
    get CanWriteLocalisedNames() {
        return this.canWrite('LocalisedNames');
    }
    get LocalisedNames() {
        return this.get('LocalisedNames');
    }
    AddLocalisedName(value) {
        return this.add('LocalisedNames', value);
    }
    RemoveLocalisedName(value) {
        return this.remove('LocalisedNames', value);
    }
    set LocalisedNames(value) {
        this.set('LocalisedNames', value);
    }
    get CanReadLocalisedDescriptions() {
        return this.canRead('LocalisedDescriptions');
    }
    get CanWriteLocalisedDescriptions() {
        return this.canWrite('LocalisedDescriptions');
    }
    get LocalisedDescriptions() {
        return this.get('LocalisedDescriptions');
    }
    AddLocalisedDescription(value) {
        return this.add('LocalisedDescriptions', value);
    }
    RemoveLocalisedDescription(value) {
        return this.remove('LocalisedDescriptions', value);
    }
    set LocalisedDescriptions(value) {
        this.set('LocalisedDescriptions', value);
    }
    get CanReadCatalogueImage() {
        return this.canRead('CatalogueImage');
    }
    get CanWriteCatalogueImage() {
        return this.canWrite('CatalogueImage');
    }
    get CatalogueImage() {
        return this.get('CatalogueImage');
    }
    set CatalogueImage(value) {
        this.set('CatalogueImage', value);
    }
    get CanReadProductCategories() {
        return this.canRead('ProductCategories');
    }
    get CanWriteProductCategories() {
        return this.canWrite('ProductCategories');
    }
    get ProductCategories() {
        return this.get('ProductCategories');
    }
    AddProductCategory(value) {
        return this.add('ProductCategories', value);
    }
    RemoveProductCategory(value) {
        return this.remove('ProductCategories', value);
    }
    set ProductCategories(value) {
        this.set('ProductCategories', value);
    }
    get CanReadCatScope() {
        return this.canRead('CatScope');
    }
    get CanWriteCatScope() {
        return this.canWrite('CatScope');
    }
    get CatScope() {
        return this.get('CatScope');
    }
    set CatScope(value) {
        this.set('CatScope', value);
    }
    get CanReadUniqueId() {
        return this.canRead('UniqueId');
    }
    get CanWriteUniqueId() {
        return this.canWrite('UniqueId');
    }
    get UniqueId() {
        return this.get('UniqueId');
    }
    set UniqueId(value) {
        this.set('UniqueId', value);
    }
    get CanExecuteDelete() {
        return this.canExecute('Delete');
    }
    get Delete() {
        return new framework_1.Method(this, 'Delete');
    }
}
exports.Catalogue = Catalogue;
//# sourceMappingURL=Catalogue.g.js.map