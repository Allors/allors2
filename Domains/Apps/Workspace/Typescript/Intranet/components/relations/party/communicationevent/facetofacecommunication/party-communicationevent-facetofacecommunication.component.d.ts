import { AfterViewInit, ChangeDetectorRef, OnDestroy, OnInit } from "@angular/core";
import { MatSnackBar } from "@angular/material";
import { ActivatedRoute } from "@angular/router";
import { TdDialogService, TdMediaService } from "@covalent/core";
import { MetaDomain, Singleton, Person, Party, CommunicationEventPurpose, FaceToFaceCommunication } from "@allors/workspace";
import { WorkspaceService, ErrorService } from "@allors/base-angular";
export declare class PartyCommunicationEventFaceToFaceCommunicationComponent implements OnInit, AfterViewInit, OnDestroy {
    private workspaceService;
    private errorService;
    private snackBar;
    private route;
    private dialogService;
    media: TdMediaService;
    private changeDetectorRef;
    title: string;
    subTitle: string;
    addParticipant: boolean;
    m: MetaDomain;
    communicationEvent: FaceToFaceCommunication;
    parties: Party[];
    party: Party;
    purposes: CommunicationEventPurpose[];
    singleton: Singleton;
    employees: Person[];
    contacts: Party[];
    private refresh$;
    private subscription;
    private scope;
    constructor(workspaceService: WorkspaceService, errorService: ErrorService, snackBar: MatSnackBar, route: ActivatedRoute, dialogService: TdDialogService, media: TdMediaService, changeDetectorRef: ChangeDetectorRef);
    readonly PartyIsOrganisation: boolean;
    ngOnInit(): void;
    participantCancelled(): void;
    participantAdded(id: string): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    cancel(): void;
    close(): void;
    reopen(): void;
    save(form: any): void;
    refresh(): void;
    goBack(): void;
}
