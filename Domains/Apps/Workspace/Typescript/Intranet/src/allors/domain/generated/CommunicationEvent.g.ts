// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
import { SessionObject, Method } from "../../framework";

import { Deletable } from './Deletable.g';
import { Commentable } from './Commentable.g';
import { UniquelyIdentifiable } from './UniquelyIdentifiable.g';
import { Auditable } from './Auditable.g';
import { CommunicationEventState } from './CommunicationEventState.g';
import { Party } from './Party.g';
import { ContactMechanism } from './ContactMechanism.g';
import { CommunicationEventPurpose } from './CommunicationEventPurpose.g';
import { WorkEffort } from './WorkEffort.g';
import { Media } from './Media.g';
import { Case } from './Case.g';
import { Priority } from './Priority.g';
import { Person } from './Person.g';
import { User } from './User.g';

export interface CommunicationEvent extends SessionObject , Deletable, Commentable, UniquelyIdentifiable, Auditable {
        CommunicationEventState : CommunicationEventState;


        ScheduledStart : Date;


        ToParties : Party[];


        ContactMechanisms : ContactMechanism[];
        AddContactMechanism(value: ContactMechanism);
        RemoveContactMechanism(value: ContactMechanism);


        InvolvedParties : Party[];


        InitialScheduledStart : Date;


        EventPurposes : CommunicationEventPurpose[];
        AddEventPurpose(value: CommunicationEventPurpose);
        RemoveEventPurpose(value: CommunicationEventPurpose);


        ScheduledEnd : Date;


        ActualEnd : Date;


        WorkEfforts : WorkEffort[];
        AddWorkEffort(value: WorkEffort);
        RemoveWorkEffort(value: WorkEffort);


        Description : string;


        InitialScheduledEnd : Date;


        FromParties : Party[];


        Subject : string;


        Documents : Media[];
        AddDocument(value: Media);
        RemoveDocument(value: Media);


        Case : Case;


        Priority : Priority;


        Owner : Person;


        Note : string;


        ActualStart : Date;


        SendNotification : boolean;


        SendReminder : boolean;


        RemindAt : Date;


    CanExecuteCancel: boolean;
    Cancel: Method;

    CanExecuteClose: boolean;
    Close: Method;

    CanExecuteReopen: boolean;
    Reopen: Method;

    CanExecuteDelete: boolean;
    Delete: Method;

}