// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
import { SessionObject, Method } from "../../framework";

import { UniquelyIdentifiable } from './UniquelyIdentifiable.g';
import { Product } from './Product.g';
import { CostCenter } from './CostCenter.g';
import { GeneralLedgerAccountType } from './GeneralLedgerAccountType.g';
import { DebitCreditConstant } from './DebitCreditConstant.g';
import { InternalOrganisation } from './InternalOrganisation.g';
import { OrganisationGlAccount } from './OrganisationGlAccount.g';

export class GeneralLedgerAccount extends SessionObject implements UniquelyIdentifiable {
    get CanReadDefaultCostUnit(): boolean {
        return this.canRead('DefaultCostUnit');
    }

    get CanWriteDefaultCostUnit(): boolean {
        return this.canWrite('DefaultCostUnit');
    }

    get DefaultCostUnit(): Product {
        return this.get('DefaultCostUnit');
    }

    set DefaultCostUnit(value: Product) {
        this.set('DefaultCostUnit', value);
    }

    get CanReadDefaultCostCenter(): boolean {
        return this.canRead('DefaultCostCenter');
    }

    get CanWriteDefaultCostCenter(): boolean {
        return this.canWrite('DefaultCostCenter');
    }

    get DefaultCostCenter(): CostCenter {
        return this.get('DefaultCostCenter');
    }

    set DefaultCostCenter(value: CostCenter) {
        this.set('DefaultCostCenter', value);
    }

    get CanReadDescription(): boolean {
        return this.canRead('Description');
    }

    get CanWriteDescription(): boolean {
        return this.canWrite('Description');
    }

    get Description(): string {
        return this.get('Description');
    }

    set Description(value: string) {
        this.set('Description', value);
    }

    get CanReadGeneralLedgerAccountType(): boolean {
        return this.canRead('GeneralLedgerAccountType');
    }

    get CanWriteGeneralLedgerAccountType(): boolean {
        return this.canWrite('GeneralLedgerAccountType');
    }

    get GeneralLedgerAccountType(): GeneralLedgerAccountType {
        return this.get('GeneralLedgerAccountType');
    }

    set GeneralLedgerAccountType(value: GeneralLedgerAccountType) {
        this.set('GeneralLedgerAccountType', value);
    }

    get CanReadCashAccount(): boolean {
        return this.canRead('CashAccount');
    }

    get CanWriteCashAccount(): boolean {
        return this.canWrite('CashAccount');
    }

    get CashAccount(): boolean {
        return this.get('CashAccount');
    }

    set CashAccount(value: boolean) {
        this.set('CashAccount', value);
    }

    get CanReadCostCenterAccount(): boolean {
        return this.canRead('CostCenterAccount');
    }

    get CanWriteCostCenterAccount(): boolean {
        return this.canWrite('CostCenterAccount');
    }

    get CostCenterAccount(): boolean {
        return this.get('CostCenterAccount');
    }

    set CostCenterAccount(value: boolean) {
        this.set('CostCenterAccount', value);
    }

    get CanReadSide(): boolean {
        return this.canRead('Side');
    }

    get CanWriteSide(): boolean {
        return this.canWrite('Side');
    }

    get Side(): DebitCreditConstant {
        return this.get('Side');
    }

    set Side(value: DebitCreditConstant) {
        this.set('Side', value);
    }

    get CanReadBalanceSheetAccount(): boolean {
        return this.canRead('BalanceSheetAccount');
    }

    get CanWriteBalanceSheetAccount(): boolean {
        return this.canWrite('BalanceSheetAccount');
    }

    get BalanceSheetAccount(): boolean {
        return this.get('BalanceSheetAccount');
    }

    set BalanceSheetAccount(value: boolean) {
        this.set('BalanceSheetAccount', value);
    }

    get CanReadReconciliationAccount(): boolean {
        return this.canRead('ReconciliationAccount');
    }

    get CanWriteReconciliationAccount(): boolean {
        return this.canWrite('ReconciliationAccount');
    }

    get ReconciliationAccount(): boolean {
        return this.get('ReconciliationAccount');
    }

    set ReconciliationAccount(value: boolean) {
        this.set('ReconciliationAccount', value);
    }

    get CanReadName(): boolean {
        return this.canRead('Name');
    }

    get CanWriteName(): boolean {
        return this.canWrite('Name');
    }

    get Name(): string {
        return this.get('Name');
    }

    set Name(value: string) {
        this.set('Name', value);
    }

    get CanReadCostCenterRequired(): boolean {
        return this.canRead('CostCenterRequired');
    }

    get CanWriteCostCenterRequired(): boolean {
        return this.canWrite('CostCenterRequired');
    }

    get CostCenterRequired(): boolean {
        return this.get('CostCenterRequired');
    }

    set CostCenterRequired(value: boolean) {
        this.set('CostCenterRequired', value);
    }

    get CanReadCostUnitRequired(): boolean {
        return this.canRead('CostUnitRequired');
    }

    get CanWriteCostUnitRequired(): boolean {
        return this.canWrite('CostUnitRequired');
    }

    get CostUnitRequired(): boolean {
        return this.get('CostUnitRequired');
    }

    set CostUnitRequired(value: boolean) {
        this.set('CostUnitRequired', value);
    }

    get CanReadCostCentersAllowed(): boolean {
        return this.canRead('CostCentersAllowed');
    }

    get CanWriteCostCentersAllowed(): boolean {
        return this.canWrite('CostCentersAllowed');
    }

    get CostCentersAllowed(): CostCenter[] {
        return this.get('CostCentersAllowed');
    }

    AddCostCentersAllowed(value: CostCenter) {
        return this.add('CostCentersAllowed', value);
    }

    RemoveCostCentersAllowed(value: CostCenter) {
        return this.remove('CostCentersAllowed', value);
    }

    set CostCentersAllowed(value: CostCenter[]) {
        this.set('CostCentersAllowed', value);
    }

    get CanReadCostUnitAccount(): boolean {
        return this.canRead('CostUnitAccount');
    }

    get CanWriteCostUnitAccount(): boolean {
        return this.canWrite('CostUnitAccount');
    }

    get CostUnitAccount(): boolean {
        return this.get('CostUnitAccount');
    }

    set CostUnitAccount(value: boolean) {
        this.set('CostUnitAccount', value);
    }

    get CanReadAccountNumber(): boolean {
        return this.canRead('AccountNumber');
    }

    get CanWriteAccountNumber(): boolean {
        return this.canWrite('AccountNumber');
    }

    get AccountNumber(): string {
        return this.get('AccountNumber');
    }

    set AccountNumber(value: string) {
        this.set('AccountNumber', value);
    }

    get CanReadCostUnitsAllowed(): boolean {
        return this.canRead('CostUnitsAllowed');
    }

    get CanWriteCostUnitsAllowed(): boolean {
        return this.canWrite('CostUnitsAllowed');
    }

    get CostUnitsAllowed(): Product[] {
        return this.get('CostUnitsAllowed');
    }

    AddCostUnitsAllowed(value: Product) {
        return this.add('CostUnitsAllowed', value);
    }

    RemoveCostUnitsAllowed(value: Product) {
        return this.remove('CostUnitsAllowed', value);
    }

    set CostUnitsAllowed(value: Product[]) {
        this.set('CostUnitsAllowed', value);
    }

    get CanReadProtected(): boolean {
        return this.canRead('Protected');
    }

    get CanWriteProtected(): boolean {
        return this.canWrite('Protected');
    }

    get Protected(): boolean {
        return this.get('Protected');
    }

    set Protected(value: boolean) {
        this.set('Protected', value);
    }

    get CanReadUniqueId(): boolean {
        return this.canRead('UniqueId');
    }

    get CanWriteUniqueId(): boolean {
        return this.canWrite('UniqueId');
    }

    get UniqueId(): string {
        return this.get('UniqueId');
    }

    set UniqueId(value: string) {
        this.set('UniqueId', value);
    }


}
