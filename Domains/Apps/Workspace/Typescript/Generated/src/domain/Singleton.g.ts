// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
import { SessionObject, Method } from "@allors/base-domain";

import { Auditable } from './Auditable.g';
import { Locale } from './Locale.g';
import { User } from './User.g';
import { Currency } from './Currency.g';
import { Media } from './Media.g';
import { InternalOrganisation } from './InternalOrganisation.g';

export class Singleton extends SessionObject implements Auditable {
    get CanReadDefaultLocale(): boolean {
        return this.canRead('DefaultLocale');
    }

    get CanWriteDefaultLocale(): boolean {
        return this.canWrite('DefaultLocale');
    }

    get DefaultLocale(): Locale {
        return this.get('DefaultLocale');
    }

    set DefaultLocale(value: Locale) {
        this.set('DefaultLocale', value);
    }

    get CanReadLocales(): boolean {
        return this.canRead('Locales');
    }

    get CanWriteLocales(): boolean {
        return this.canWrite('Locales');
    }

    get Locales(): Locale[] {
        return this.get('Locales');
    }

    AddLocale(value: Locale) {
        return this.add('Locales', value);
    }

    RemoveLocale(value: Locale) {
        return this.remove('Locales', value);
    }

    set Locales(value: Locale[]) {
        this.set('Locales', value);
    }

    get CanReadGuest(): boolean {
        return this.canRead('Guest');
    }

    get CanWriteGuest(): boolean {
        return this.canWrite('Guest');
    }

    get Guest(): User {
        return this.get('Guest');
    }

    set Guest(value: User) {
        this.set('Guest', value);
    }

    get CanReadPreferredCurrency(): boolean {
        return this.canRead('PreferredCurrency');
    }

    get CanWritePreferredCurrency(): boolean {
        return this.canWrite('PreferredCurrency');
    }

    get PreferredCurrency(): Currency {
        return this.get('PreferredCurrency');
    }

    set PreferredCurrency(value: Currency) {
        this.set('PreferredCurrency', value);
    }

    get CanReadNoImageAvailableImage(): boolean {
        return this.canRead('NoImageAvailableImage');
    }

    get CanWriteNoImageAvailableImage(): boolean {
        return this.canWrite('NoImageAvailableImage');
    }

    get NoImageAvailableImage(): Media {
        return this.get('NoImageAvailableImage');
    }

    set NoImageAvailableImage(value: Media) {
        this.set('NoImageAvailableImage', value);
    }

    get CanReadInternalOrganisation(): boolean {
        return this.canRead('InternalOrganisation');
    }

    get CanWriteInternalOrganisation(): boolean {
        return this.canWrite('InternalOrganisation');
    }

    get InternalOrganisation(): InternalOrganisation {
        return this.get('InternalOrganisation');
    }

    set InternalOrganisation(value: InternalOrganisation) {
        this.set('InternalOrganisation', value);
    }

    get CanReadCreatedBy(): boolean {
        return this.canRead('CreatedBy');
    }

    get CanWriteCreatedBy(): boolean {
        return this.canWrite('CreatedBy');
    }

    get CreatedBy(): User {
        return this.get('CreatedBy');
    }

    set CreatedBy(value: User) {
        this.set('CreatedBy', value);
    }

    get CanReadLastModifiedBy(): boolean {
        return this.canRead('LastModifiedBy');
    }

    get CanWriteLastModifiedBy(): boolean {
        return this.canWrite('LastModifiedBy');
    }

    get LastModifiedBy(): User {
        return this.get('LastModifiedBy');
    }

    set LastModifiedBy(value: User) {
        this.set('LastModifiedBy', value);
    }

    get CanReadCreationDate(): boolean {
        return this.canRead('CreationDate');
    }

    get CanWriteCreationDate(): boolean {
        return this.canWrite('CreationDate');
    }

    get CreationDate(): Date {
        return this.get('CreationDate');
    }

    set CreationDate(value: Date) {
        this.set('CreationDate', value);
    }

    get CanReadLastModifiedDate(): boolean {
        return this.canRead('LastModifiedDate');
    }

    get CanWriteLastModifiedDate(): boolean {
        return this.canWrite('LastModifiedDate');
    }

    get LastModifiedDate(): Date {
        return this.get('LastModifiedDate');
    }

    set LastModifiedDate(value: Date) {
        this.set('LastModifiedDate', value);
    }


}
