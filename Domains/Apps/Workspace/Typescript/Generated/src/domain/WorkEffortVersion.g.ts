// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
import { SessionObject, Method } from "@allors/base-domain";

import { Version } from './Version.g';
import { Priority } from './Priority.g';
import { WorkEffortPurpose } from './WorkEffortPurpose.g';
import { WorkEffort } from './WorkEffort.g';
import { Facility } from './Facility.g';
import { Deliverable } from './Deliverable.g';
import { WorkEffortInventoryAssignment } from './WorkEffortInventoryAssignment.g';
import { WorkEffortType } from './WorkEffortType.g';
import { InventoryItem } from './InventoryItem.g';
import { Requirement } from './Requirement.g';

export interface WorkEffortVersion extends SessionObject , Version {
        Name : string;


        Description : string;


        Priority : Priority;


        WorkEffortPurposes : WorkEffortPurpose[];
        AddWorkEffortPurpose(value: WorkEffortPurpose);
        RemoveWorkEffortPurpose(value: WorkEffortPurpose);


        ActualCompletion : Date;


        ScheduledStart : Date;


        ScheduledCompletion : Date;


        ActualHours : number;


        EstimatedHours : number;


        Precendencies : WorkEffort[];
        AddPrecendency(value: WorkEffort);
        RemovePrecendency(value: WorkEffort);


        Facility : Facility;


        DeliverablesProduced : Deliverable[];
        AddDeliverablesProduced(value: Deliverable);
        RemoveDeliverablesProduced(value: Deliverable);


        ActualStart : Date;


        InventoryItemsNeeded : WorkEffortInventoryAssignment[];
        AddInventoryItemsNeeded(value: WorkEffortInventoryAssignment);
        RemoveInventoryItemsNeeded(value: WorkEffortInventoryAssignment);


        Children : WorkEffort[];
        AddChild(value: WorkEffort);
        RemoveChild(value: WorkEffort);


        WorkEffortType : WorkEffortType;


        InventoryItemsProduced : InventoryItem[];
        AddInventoryItemsProduced(value: InventoryItem);
        RemoveInventoryItemsProduced(value: InventoryItem);


        RequirementFulfillments : Requirement[];
        AddRequirementFulfillment(value: Requirement);
        RemoveRequirementFulfillment(value: Requirement);


        SpecialTerms : string;


        Concurrencies : WorkEffort[];
        AddConcurrency(value: WorkEffort);
        RemoveConcurrency(value: WorkEffort);


}