// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
import { SessionObject, Method } from "@allors/framework";

import { UniquelyIdentifiable } from './UniquelyIdentifiable.g';
import { ProductCharacteristic } from './ProductCharacteristic.g';
import { InventoryItemVersion } from './InventoryItemVersion.g';
import { InventoryItem } from './InventoryItem.g';

export class ProductType extends SessionObject implements UniquelyIdentifiable {
    get CanReadProductCharacteristics(): boolean {
        return this.canRead('ProductCharacteristics');
    }

    get CanWriteProductCharacteristics(): boolean {
        return this.canWrite('ProductCharacteristics');
    }

    get ProductCharacteristics(): ProductCharacteristic[] {
        return this.get('ProductCharacteristics');
    }

    AddProductCharacteristic(value: ProductCharacteristic) {
        return this.add('ProductCharacteristics', value);
    }

    RemoveProductCharacteristic(value: ProductCharacteristic) {
        return this.remove('ProductCharacteristics', value);
    }

    set ProductCharacteristics(value: ProductCharacteristic[]) {
        this.set('ProductCharacteristics', value);
    }

    get CanReadName(): boolean {
        return this.canRead('Name');
    }

    get CanWriteName(): boolean {
        return this.canWrite('Name');
    }

    get Name(): string {
        return this.get('Name');
    }

    set Name(value: string) {
        this.set('Name', value);
    }

    get CanReadUniqueId(): boolean {
        return this.canRead('UniqueId');
    }

    get CanWriteUniqueId(): boolean {
        return this.canWrite('UniqueId');
    }

    get UniqueId(): string {
        return this.get('UniqueId');
    }

    set UniqueId(value: string) {
        this.set('UniqueId', value);
    }


}
