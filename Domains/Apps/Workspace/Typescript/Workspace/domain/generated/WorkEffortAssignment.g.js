"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
const framework_1 = require("@allors/framework");
class WorkEffortAssignment extends framework_1.SessionObject {
    get CanReadProfessional() {
        return this.canRead('Professional');
    }
    get CanWriteProfessional() {
        return this.canWrite('Professional');
    }
    get Professional() {
        return this.get('Professional');
    }
    set Professional(value) {
        this.set('Professional', value);
    }
    get CanReadAssignment() {
        return this.canRead('Assignment');
    }
    get CanWriteAssignment() {
        return this.canWrite('Assignment');
    }
    get Assignment() {
        return this.get('Assignment');
    }
    set Assignment(value) {
        this.set('Assignment', value);
    }
    get CanReadFromDate() {
        return this.canRead('FromDate');
    }
    get CanWriteFromDate() {
        return this.canWrite('FromDate');
    }
    get FromDate() {
        return this.get('FromDate');
    }
    set FromDate(value) {
        this.set('FromDate', value);
    }
    get CanReadThroughDate() {
        return this.canRead('ThroughDate');
    }
    get CanWriteThroughDate() {
        return this.canWrite('ThroughDate');
    }
    get ThroughDate() {
        return this.get('ThroughDate');
    }
    set ThroughDate(value) {
        this.set('ThroughDate', value);
    }
    get CanReadComment() {
        return this.canRead('Comment');
    }
    get CanWriteComment() {
        return this.canWrite('Comment');
    }
    get Comment() {
        return this.get('Comment');
    }
    set Comment(value) {
        this.set('Comment', value);
    }
    get CanExecuteDelete() {
        return this.canExecute('Delete');
    }
    get Delete() {
        return new framework_1.Method(this, 'Delete');
    }
}
exports.WorkEffortAssignment = WorkEffortAssignment;
