import { SessionObject, Method } from "@allors/framework";
import { UniquelyIdentifiable } from './UniquelyIdentifiable.g';
import { Deletable } from './Deletable.g';
import { Package } from './Package.g';
import { LocalisedText } from './LocalisedText.g';
import { Media } from './Media.g';
import { CatScope } from './CatScope.g';
import { Product } from './Product.g';
export declare class ProductCategory extends SessionObject implements UniquelyIdentifiable, Deletable {
    readonly CanReadPackage: boolean;
    readonly CanWritePackage: boolean;
    Package: Package;
    readonly CanReadCode: boolean;
    readonly CanWriteCode: boolean;
    Code: string;
    readonly CanReadParents: boolean;
    readonly CanWriteParents: boolean;
    Parents: ProductCategory[];
    AddParent(value: ProductCategory): void;
    RemoveParent(value: ProductCategory): void;
    readonly CanReadChildren: boolean;
    readonly Children: ProductCategory[];
    readonly CanReadDescription: boolean;
    readonly Description: string;
    readonly CanReadName: boolean;
    readonly Name: string;
    readonly CanReadLocalisedNames: boolean;
    readonly CanWriteLocalisedNames: boolean;
    LocalisedNames: LocalisedText[];
    AddLocalisedName(value: LocalisedText): void;
    RemoveLocalisedName(value: LocalisedText): void;
    readonly CanReadLocalisedDescriptions: boolean;
    readonly CanWriteLocalisedDescriptions: boolean;
    LocalisedDescriptions: LocalisedText[];
    AddLocalisedDescription(value: LocalisedText): void;
    RemoveLocalisedDescription(value: LocalisedText): void;
    readonly CanReadCategoryImage: boolean;
    readonly CanWriteCategoryImage: boolean;
    CategoryImage: Media;
    readonly CanReadSuperJacent: boolean;
    readonly SuperJacent: ProductCategory[];
    readonly CanReadCatScope: boolean;
    readonly CanWriteCatScope: boolean;
    CatScope: CatScope;
    readonly CanReadAllProducts: boolean;
    readonly AllProducts: Product[];
    readonly CanReadUniqueId: boolean;
    readonly CanWriteUniqueId: boolean;
    UniqueId: string;
    readonly CanExecuteDelete: boolean;
    readonly Delete: Method;
}
