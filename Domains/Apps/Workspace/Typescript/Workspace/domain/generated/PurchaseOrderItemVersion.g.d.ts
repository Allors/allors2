import { SessionObject } from "@allors/framework";
import { OrderItemVersion } from './OrderItemVersion.g';
import { PurchaseOrder } from './PurchaseOrder.g';
import { QuoteItem } from './QuoteItem.g';
import { OrderTerm } from './OrderTerm.g';
import { OrderItem } from './OrderItem.g';
export declare class PurchaseOrderItemVersion extends SessionObject implements OrderItemVersion {
    readonly CanReadInternalComment: boolean;
    readonly CanWriteInternalComment: boolean;
    InternalComment: string;
    readonly CanReadQuantityOrdered: boolean;
    readonly CanWriteQuantityOrdered: boolean;
    QuantityOrdered: number;
    readonly CanReadDescription: boolean;
    readonly CanWriteDescription: boolean;
    Description: string;
    readonly CanReadCorrespondingPurchaseOrder: boolean;
    readonly CanWriteCorrespondingPurchaseOrder: boolean;
    CorrespondingPurchaseOrder: PurchaseOrder;
    readonly CanReadTotalOrderAdjustmentCustomerCurrency: boolean;
    readonly TotalOrderAdjustmentCustomerCurrency: number;
    readonly CanReadTotalOrderAdjustment: boolean;
    readonly TotalOrderAdjustment: number;
    readonly CanReadQuoteItem: boolean;
    readonly CanWriteQuoteItem: boolean;
    QuoteItem: QuoteItem;
    readonly CanReadAssignedDeliveryDate: boolean;
    readonly CanWriteAssignedDeliveryDate: boolean;
    AssignedDeliveryDate: Date;
    readonly CanReadDeliveryDate: boolean;
    readonly DeliveryDate: Date;
    readonly CanReadOrderTerms: boolean;
    readonly CanWriteOrderTerms: boolean;
    OrderTerms: OrderTerm[];
    AddOrderTerm(value: OrderTerm): void;
    RemoveOrderTerm(value: OrderTerm): void;
    readonly CanReadShippingInstruction: boolean;
    readonly CanWriteShippingInstruction: boolean;
    ShippingInstruction: string;
    readonly CanReadAssociations: boolean;
    readonly CanWriteAssociations: boolean;
    Associations: OrderItem[];
    AddAssociation(value: OrderItem): void;
    RemoveAssociation(value: OrderItem): void;
    readonly CanReadMessage: boolean;
    readonly CanWriteMessage: boolean;
    Message: string;
    readonly CanReadDerivationTimeStamp: boolean;
    readonly CanWriteDerivationTimeStamp: boolean;
    DerivationTimeStamp: Date;
}
