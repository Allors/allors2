import { SessionObject, Method } from "@allors/framework";
import { Enumeration } from './Enumeration.g';
import { ProductFeature } from './ProductFeature.g';
import { LocalisedText } from './LocalisedText.g';
import { EstimatedProductCost } from './EstimatedProductCost.g';
import { PriceComponent } from './PriceComponent.g';
import { VatRate } from './VatRate.g';
export declare class ServiceFeature extends SessionObject implements Enumeration, ProductFeature {
    readonly CanReadLocalisedNames: boolean;
    readonly CanWriteLocalisedNames: boolean;
    LocalisedNames: LocalisedText[];
    AddLocalisedName(value: LocalisedText): void;
    RemoveLocalisedName(value: LocalisedText): void;
    readonly CanReadName: boolean;
    readonly CanWriteName: boolean;
    Name: string;
    readonly CanReadIsActive: boolean;
    readonly CanWriteIsActive: boolean;
    IsActive: boolean;
    readonly CanReadUniqueId: boolean;
    readonly CanWriteUniqueId: boolean;
    UniqueId: string;
    readonly CanReadEstimatedProductCosts: boolean;
    readonly CanWriteEstimatedProductCosts: boolean;
    EstimatedProductCosts: EstimatedProductCost[];
    AddEstimatedProductCost(value: EstimatedProductCost): void;
    RemoveEstimatedProductCost(value: EstimatedProductCost): void;
    readonly CanReadBasePrices: boolean;
    readonly BasePrices: PriceComponent[];
    readonly CanReadDescription: boolean;
    readonly CanWriteDescription: boolean;
    Description: string;
    readonly CanReadDependentFeatures: boolean;
    readonly CanWriteDependentFeatures: boolean;
    DependentFeatures: ProductFeature[];
    AddDependentFeature(value: ProductFeature): void;
    RemoveDependentFeature(value: ProductFeature): void;
    readonly CanReadIncompatibleFeatures: boolean;
    readonly CanWriteIncompatibleFeatures: boolean;
    IncompatibleFeatures: ProductFeature[];
    AddIncompatibleFeature(value: ProductFeature): void;
    RemoveIncompatibleFeature(value: ProductFeature): void;
    readonly CanReadVatRate: boolean;
    readonly CanWriteVatRate: boolean;
    VatRate: VatRate;
    readonly CanExecuteDelete: boolean;
    readonly Delete: Method;
}
