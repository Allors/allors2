"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
const framework_1 = require("@allors/framework");
class WorkTask extends framework_1.SessionObject {
    get CanReadSendNotification() {
        return this.canRead('SendNotification');
    }
    get CanWriteSendNotification() {
        return this.canWrite('SendNotification');
    }
    get SendNotification() {
        return this.get('SendNotification');
    }
    set SendNotification(value) {
        this.set('SendNotification', value);
    }
    get CanReadSendReminder() {
        return this.canRead('SendReminder');
    }
    get CanWriteSendReminder() {
        return this.canWrite('SendReminder');
    }
    get SendReminder() {
        return this.get('SendReminder');
    }
    set SendReminder(value) {
        this.set('SendReminder', value);
    }
    get CanReadRemindAt() {
        return this.canRead('RemindAt');
    }
    get CanWriteRemindAt() {
        return this.canWrite('RemindAt');
    }
    get RemindAt() {
        return this.get('RemindAt');
    }
    set RemindAt(value) {
        this.set('RemindAt', value);
    }
    get CanReadCurrentVersion() {
        return this.canRead('CurrentVersion');
    }
    get CanWriteCurrentVersion() {
        return this.canWrite('CurrentVersion');
    }
    get CurrentVersion() {
        return this.get('CurrentVersion');
    }
    set CurrentVersion(value) {
        this.set('CurrentVersion', value);
    }
    get CanReadAllVersions() {
        return this.canRead('AllVersions');
    }
    get CanWriteAllVersions() {
        return this.canWrite('AllVersions');
    }
    get AllVersions() {
        return this.get('AllVersions');
    }
    AddAllVersion(value) {
        return this.add('AllVersions', value);
    }
    RemoveAllVersion(value) {
        return this.remove('AllVersions', value);
    }
    set AllVersions(value) {
        this.set('AllVersions', value);
    }
    get CanReadWorkEffortState() {
        return this.canRead('WorkEffortState');
    }
    get CanWriteWorkEffortState() {
        return this.canWrite('WorkEffortState');
    }
    get WorkEffortState() {
        return this.get('WorkEffortState');
    }
    set WorkEffortState(value) {
        this.set('WorkEffortState', value);
    }
    get CanReadOwner() {
        return this.canRead('Owner');
    }
    get CanWriteOwner() {
        return this.canWrite('Owner');
    }
    get Owner() {
        return this.get('Owner');
    }
    set Owner(value) {
        this.set('Owner', value);
    }
    get CanReadName() {
        return this.canRead('Name');
    }
    get CanWriteName() {
        return this.canWrite('Name');
    }
    get Name() {
        return this.get('Name');
    }
    set Name(value) {
        this.set('Name', value);
    }
    get CanReadDescription() {
        return this.canRead('Description');
    }
    get CanWriteDescription() {
        return this.canWrite('Description');
    }
    get Description() {
        return this.get('Description');
    }
    set Description(value) {
        this.set('Description', value);
    }
    get CanReadPriority() {
        return this.canRead('Priority');
    }
    get CanWritePriority() {
        return this.canWrite('Priority');
    }
    get Priority() {
        return this.get('Priority');
    }
    set Priority(value) {
        this.set('Priority', value);
    }
    get CanReadWorkEffortPurposes() {
        return this.canRead('WorkEffortPurposes');
    }
    get CanWriteWorkEffortPurposes() {
        return this.canWrite('WorkEffortPurposes');
    }
    get WorkEffortPurposes() {
        return this.get('WorkEffortPurposes');
    }
    AddWorkEffortPurpose(value) {
        return this.add('WorkEffortPurposes', value);
    }
    RemoveWorkEffortPurpose(value) {
        return this.remove('WorkEffortPurposes', value);
    }
    set WorkEffortPurposes(value) {
        this.set('WorkEffortPurposes', value);
    }
    get CanReadActualCompletion() {
        return this.canRead('ActualCompletion');
    }
    get CanWriteActualCompletion() {
        return this.canWrite('ActualCompletion');
    }
    get ActualCompletion() {
        return this.get('ActualCompletion');
    }
    set ActualCompletion(value) {
        this.set('ActualCompletion', value);
    }
    get CanReadScheduledStart() {
        return this.canRead('ScheduledStart');
    }
    get CanWriteScheduledStart() {
        return this.canWrite('ScheduledStart');
    }
    get ScheduledStart() {
        return this.get('ScheduledStart');
    }
    set ScheduledStart(value) {
        this.set('ScheduledStart', value);
    }
    get CanReadScheduledCompletion() {
        return this.canRead('ScheduledCompletion');
    }
    get CanWriteScheduledCompletion() {
        return this.canWrite('ScheduledCompletion');
    }
    get ScheduledCompletion() {
        return this.get('ScheduledCompletion');
    }
    set ScheduledCompletion(value) {
        this.set('ScheduledCompletion', value);
    }
    get CanReadActualHours() {
        return this.canRead('ActualHours');
    }
    get CanWriteActualHours() {
        return this.canWrite('ActualHours');
    }
    get ActualHours() {
        return this.get('ActualHours');
    }
    set ActualHours(value) {
        this.set('ActualHours', value);
    }
    get CanReadEstimatedHours() {
        return this.canRead('EstimatedHours');
    }
    get CanWriteEstimatedHours() {
        return this.canWrite('EstimatedHours');
    }
    get EstimatedHours() {
        return this.get('EstimatedHours');
    }
    set EstimatedHours(value) {
        this.set('EstimatedHours', value);
    }
    get CanReadPrecendencies() {
        return this.canRead('Precendencies');
    }
    get CanWritePrecendencies() {
        return this.canWrite('Precendencies');
    }
    get Precendencies() {
        return this.get('Precendencies');
    }
    AddPrecendency(value) {
        return this.add('Precendencies', value);
    }
    RemovePrecendency(value) {
        return this.remove('Precendencies', value);
    }
    set Precendencies(value) {
        this.set('Precendencies', value);
    }
    get CanReadFacility() {
        return this.canRead('Facility');
    }
    get CanWriteFacility() {
        return this.canWrite('Facility');
    }
    get Facility() {
        return this.get('Facility');
    }
    set Facility(value) {
        this.set('Facility', value);
    }
    get CanReadDeliverablesProduced() {
        return this.canRead('DeliverablesProduced');
    }
    get CanWriteDeliverablesProduced() {
        return this.canWrite('DeliverablesProduced');
    }
    get DeliverablesProduced() {
        return this.get('DeliverablesProduced');
    }
    AddDeliverablesProduced(value) {
        return this.add('DeliverablesProduced', value);
    }
    RemoveDeliverablesProduced(value) {
        return this.remove('DeliverablesProduced', value);
    }
    set DeliverablesProduced(value) {
        this.set('DeliverablesProduced', value);
    }
    get CanReadActualStart() {
        return this.canRead('ActualStart');
    }
    get CanWriteActualStart() {
        return this.canWrite('ActualStart');
    }
    get ActualStart() {
        return this.get('ActualStart');
    }
    set ActualStart(value) {
        this.set('ActualStart', value);
    }
    get CanReadInventoryItemsNeeded() {
        return this.canRead('InventoryItemsNeeded');
    }
    get CanWriteInventoryItemsNeeded() {
        return this.canWrite('InventoryItemsNeeded');
    }
    get InventoryItemsNeeded() {
        return this.get('InventoryItemsNeeded');
    }
    AddInventoryItemsNeeded(value) {
        return this.add('InventoryItemsNeeded', value);
    }
    RemoveInventoryItemsNeeded(value) {
        return this.remove('InventoryItemsNeeded', value);
    }
    set InventoryItemsNeeded(value) {
        this.set('InventoryItemsNeeded', value);
    }
    get CanReadChildren() {
        return this.canRead('Children');
    }
    get CanWriteChildren() {
        return this.canWrite('Children');
    }
    get Children() {
        return this.get('Children');
    }
    AddChild(value) {
        return this.add('Children', value);
    }
    RemoveChild(value) {
        return this.remove('Children', value);
    }
    set Children(value) {
        this.set('Children', value);
    }
    get CanReadWorkEffortType() {
        return this.canRead('WorkEffortType');
    }
    get CanWriteWorkEffortType() {
        return this.canWrite('WorkEffortType');
    }
    get WorkEffortType() {
        return this.get('WorkEffortType');
    }
    set WorkEffortType(value) {
        this.set('WorkEffortType', value);
    }
    get CanReadInventoryItemsProduced() {
        return this.canRead('InventoryItemsProduced');
    }
    get CanWriteInventoryItemsProduced() {
        return this.canWrite('InventoryItemsProduced');
    }
    get InventoryItemsProduced() {
        return this.get('InventoryItemsProduced');
    }
    AddInventoryItemsProduced(value) {
        return this.add('InventoryItemsProduced', value);
    }
    RemoveInventoryItemsProduced(value) {
        return this.remove('InventoryItemsProduced', value);
    }
    set InventoryItemsProduced(value) {
        this.set('InventoryItemsProduced', value);
    }
    get CanReadRequirementFulfillments() {
        return this.canRead('RequirementFulfillments');
    }
    get CanWriteRequirementFulfillments() {
        return this.canWrite('RequirementFulfillments');
    }
    get RequirementFulfillments() {
        return this.get('RequirementFulfillments');
    }
    AddRequirementFulfillment(value) {
        return this.add('RequirementFulfillments', value);
    }
    RemoveRequirementFulfillment(value) {
        return this.remove('RequirementFulfillments', value);
    }
    set RequirementFulfillments(value) {
        this.set('RequirementFulfillments', value);
    }
    get CanReadSpecialTerms() {
        return this.canRead('SpecialTerms');
    }
    get CanWriteSpecialTerms() {
        return this.canWrite('SpecialTerms');
    }
    get SpecialTerms() {
        return this.get('SpecialTerms');
    }
    set SpecialTerms(value) {
        this.set('SpecialTerms', value);
    }
    get CanReadConcurrencies() {
        return this.canRead('Concurrencies');
    }
    get CanWriteConcurrencies() {
        return this.canWrite('Concurrencies');
    }
    get Concurrencies() {
        return this.get('Concurrencies');
    }
    AddConcurrency(value) {
        return this.add('Concurrencies', value);
    }
    RemoveConcurrency(value) {
        return this.remove('Concurrencies', value);
    }
    set Concurrencies(value) {
        this.set('Concurrencies', value);
    }
    get CanReadUniqueId() {
        return this.canRead('UniqueId');
    }
    get CanWriteUniqueId() {
        return this.canWrite('UniqueId');
    }
    get UniqueId() {
        return this.get('UniqueId');
    }
    set UniqueId(value) {
        this.set('UniqueId', value);
    }
    get CanReadCreatedBy() {
        return this.canRead('CreatedBy');
    }
    get CanWriteCreatedBy() {
        return this.canWrite('CreatedBy');
    }
    get CreatedBy() {
        return this.get('CreatedBy');
    }
    set CreatedBy(value) {
        this.set('CreatedBy', value);
    }
    get CanReadLastModifiedBy() {
        return this.canRead('LastModifiedBy');
    }
    get CanWriteLastModifiedBy() {
        return this.canWrite('LastModifiedBy');
    }
    get LastModifiedBy() {
        return this.get('LastModifiedBy');
    }
    set LastModifiedBy(value) {
        this.set('LastModifiedBy', value);
    }
    get CanReadCreationDate() {
        return this.canRead('CreationDate');
    }
    get CanWriteCreationDate() {
        return this.canWrite('CreationDate');
    }
    get CreationDate() {
        return this.get('CreationDate');
    }
    set CreationDate(value) {
        this.set('CreationDate', value);
    }
    get CanReadLastModifiedDate() {
        return this.canRead('LastModifiedDate');
    }
    get CanWriteLastModifiedDate() {
        return this.canWrite('LastModifiedDate');
    }
    get LastModifiedDate() {
        return this.get('LastModifiedDate');
    }
    set LastModifiedDate(value) {
        this.set('LastModifiedDate', value);
    }
    get CanExecuteConfirm() {
        return this.canExecute('Confirm');
    }
    get Confirm() {
        return new framework_1.Method(this, 'Confirm');
    }
    get CanExecuteFinish() {
        return this.canExecute('Finish');
    }
    get Finish() {
        return new framework_1.Method(this, 'Finish');
    }
    get CanExecuteCancel() {
        return this.canExecute('Cancel');
    }
    get Cancel() {
        return new framework_1.Method(this, 'Cancel');
    }
    get CanExecuteReopen() {
        return this.canExecute('Reopen');
    }
    get Reopen() {
        return new framework_1.Method(this, 'Reopen');
    }
    get CanExecuteDelete() {
        return this.canExecute('Delete');
    }
    get Delete() {
        return new framework_1.Method(this, 'Delete');
    }
}
exports.WorkTask = WorkTask;
