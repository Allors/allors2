import { SessionObject } from "@allors/framework";
import { Version } from './Version.g';
import { CommunicationEventState } from './CommunicationEventState.g';
import { User } from './User.g';
import { Party } from './Party.g';
import { ContactMechanism } from './ContactMechanism.g';
import { CommunicationEventPurpose } from './CommunicationEventPurpose.g';
import { WorkEffort } from './WorkEffort.g';
import { Media } from './Media.g';
import { Case } from './Case.g';
import { Priority } from './Priority.g';
import { Person } from './Person.g';
export interface CommunicationEventVersion extends SessionObject, Version {
    CommunicationEventState: CommunicationEventState;
    Comment: string;
    CreatedBy: User;
    LastModifiedBy: User;
    CreationDate: Date;
    LastModifiedDate: Date;
    ScheduledStart: Date;
    ToParties: Party[];
    ContactMechanisms: ContactMechanism[];
    AddContactMechanism(value: ContactMechanism): any;
    RemoveContactMechanism(value: ContactMechanism): any;
    InvolvedParties: Party[];
    InitialScheduledStart: Date;
    EventPurposes: CommunicationEventPurpose[];
    AddEventPurpose(value: CommunicationEventPurpose): any;
    RemoveEventPurpose(value: CommunicationEventPurpose): any;
    ScheduledEnd: Date;
    ActualEnd: Date;
    WorkEfforts: WorkEffort[];
    AddWorkEffort(value: WorkEffort): any;
    RemoveWorkEffort(value: WorkEffort): any;
    Description: string;
    InitialScheduledEnd: Date;
    FromParties: Party[];
    Subject: string;
    Documents: Media[];
    AddDocument(value: Media): any;
    RemoveDocument(value: Media): any;
    Case: Case;
    Priority: Priority;
    Owner: Person;
    Note: string;
    ActualStart: Date;
    SendNotification: boolean;
    SendReminder: boolean;
    RemindAt: Date;
}
