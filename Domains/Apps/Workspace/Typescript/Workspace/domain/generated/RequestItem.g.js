"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
const framework_1 = require("@allors/framework");
class RequestItem extends framework_1.SessionObject {
    get CanReadRequestItemState() {
        return this.canRead('RequestItemState');
    }
    get CanWriteRequestItemState() {
        return this.canWrite('RequestItemState');
    }
    get RequestItemState() {
        return this.get('RequestItemState');
    }
    set RequestItemState(value) {
        this.set('RequestItemState', value);
    }
    get CanReadCurrentVersion() {
        return this.canRead('CurrentVersion');
    }
    get CanWriteCurrentVersion() {
        return this.canWrite('CurrentVersion');
    }
    get CurrentVersion() {
        return this.get('CurrentVersion');
    }
    set CurrentVersion(value) {
        this.set('CurrentVersion', value);
    }
    get CanReadAllVersions() {
        return this.canRead('AllVersions');
    }
    get CanWriteAllVersions() {
        return this.canWrite('AllVersions');
    }
    get AllVersions() {
        return this.get('AllVersions');
    }
    AddAllVersion(value) {
        return this.add('AllVersions', value);
    }
    RemoveAllVersion(value) {
        return this.remove('AllVersions', value);
    }
    set AllVersions(value) {
        this.set('AllVersions', value);
    }
    get CanReadInternalComment() {
        return this.canRead('InternalComment');
    }
    get CanWriteInternalComment() {
        return this.canWrite('InternalComment');
    }
    get InternalComment() {
        return this.get('InternalComment');
    }
    set InternalComment(value) {
        this.set('InternalComment', value);
    }
    get CanReadDescription() {
        return this.canRead('Description');
    }
    get CanWriteDescription() {
        return this.canWrite('Description');
    }
    get Description() {
        return this.get('Description');
    }
    set Description(value) {
        this.set('Description', value);
    }
    get CanReadQuantity() {
        return this.canRead('Quantity');
    }
    get CanWriteQuantity() {
        return this.canWrite('Quantity');
    }
    get Quantity() {
        return this.get('Quantity');
    }
    set Quantity(value) {
        this.set('Quantity', value);
    }
    get CanReadUnitOfMeasure() {
        return this.canRead('UnitOfMeasure');
    }
    get CanWriteUnitOfMeasure() {
        return this.canWrite('UnitOfMeasure');
    }
    get UnitOfMeasure() {
        return this.get('UnitOfMeasure');
    }
    set UnitOfMeasure(value) {
        this.set('UnitOfMeasure', value);
    }
    get CanReadRequirements() {
        return this.canRead('Requirements');
    }
    get CanWriteRequirements() {
        return this.canWrite('Requirements');
    }
    get Requirements() {
        return this.get('Requirements');
    }
    AddRequirement(value) {
        return this.add('Requirements', value);
    }
    RemoveRequirement(value) {
        return this.remove('Requirements', value);
    }
    set Requirements(value) {
        this.set('Requirements', value);
    }
    get CanReadDeliverable() {
        return this.canRead('Deliverable');
    }
    get CanWriteDeliverable() {
        return this.canWrite('Deliverable');
    }
    get Deliverable() {
        return this.get('Deliverable');
    }
    set Deliverable(value) {
        this.set('Deliverable', value);
    }
    get CanReadProductFeature() {
        return this.canRead('ProductFeature');
    }
    get CanWriteProductFeature() {
        return this.canWrite('ProductFeature');
    }
    get ProductFeature() {
        return this.get('ProductFeature');
    }
    set ProductFeature(value) {
        this.set('ProductFeature', value);
    }
    get CanReadNeededSkill() {
        return this.canRead('NeededSkill');
    }
    get CanWriteNeededSkill() {
        return this.canWrite('NeededSkill');
    }
    get NeededSkill() {
        return this.get('NeededSkill');
    }
    set NeededSkill(value) {
        this.set('NeededSkill', value);
    }
    get CanReadProduct() {
        return this.canRead('Product');
    }
    get CanWriteProduct() {
        return this.canWrite('Product');
    }
    get Product() {
        return this.get('Product');
    }
    set Product(value) {
        this.set('Product', value);
    }
    get CanReadMaximumAllowedPrice() {
        return this.canRead('MaximumAllowedPrice');
    }
    get CanWriteMaximumAllowedPrice() {
        return this.canWrite('MaximumAllowedPrice');
    }
    get MaximumAllowedPrice() {
        return this.get('MaximumAllowedPrice');
    }
    set MaximumAllowedPrice(value) {
        this.set('MaximumAllowedPrice', value);
    }
    get CanReadRequiredByDate() {
        return this.canRead('RequiredByDate');
    }
    get CanWriteRequiredByDate() {
        return this.canWrite('RequiredByDate');
    }
    get RequiredByDate() {
        return this.get('RequiredByDate');
    }
    set RequiredByDate(value) {
        this.set('RequiredByDate', value);
    }
    get CanReadComment() {
        return this.canRead('Comment');
    }
    get CanWriteComment() {
        return this.canWrite('Comment');
    }
    get Comment() {
        return this.get('Comment');
    }
    set Comment(value) {
        this.set('Comment', value);
    }
    get CanExecuteCancel() {
        return this.canExecute('Cancel');
    }
    get Cancel() {
        return new framework_1.Method(this, 'Cancel');
    }
    get CanExecuteSubmit() {
        return this.canExecute('Submit');
    }
    get Submit() {
        return new framework_1.Method(this, 'Submit');
    }
    get CanExecuteHold() {
        return this.canExecute('Hold');
    }
    get Hold() {
        return new framework_1.Method(this, 'Hold');
    }
    get CanExecuteDelete() {
        return this.canExecute('Delete');
    }
    get Delete() {
        return new framework_1.Method(this, 'Delete');
    }
}
exports.RequestItem = RequestItem;
