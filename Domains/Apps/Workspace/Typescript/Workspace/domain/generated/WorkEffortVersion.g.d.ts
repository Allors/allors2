import { SessionObject } from "@allors/framework";
import { Version } from './Version.g';
import { Priority } from './Priority.g';
import { WorkEffortPurpose } from './WorkEffortPurpose.g';
import { WorkEffort } from './WorkEffort.g';
import { Facility } from './Facility.g';
import { Deliverable } from './Deliverable.g';
import { WorkEffortInventoryAssignment } from './WorkEffortInventoryAssignment.g';
import { WorkEffortType } from './WorkEffortType.g';
import { InventoryItem } from './InventoryItem.g';
import { Requirement } from './Requirement.g';
export interface WorkEffortVersion extends SessionObject, Version {
    Name: string;
    Description: string;
    Priority: Priority;
    WorkEffortPurposes: WorkEffortPurpose[];
    AddWorkEffortPurpose(value: WorkEffortPurpose): any;
    RemoveWorkEffortPurpose(value: WorkEffortPurpose): any;
    ActualCompletion: Date;
    ScheduledStart: Date;
    ScheduledCompletion: Date;
    ActualHours: number;
    EstimatedHours: number;
    Precendencies: WorkEffort[];
    AddPrecendency(value: WorkEffort): any;
    RemovePrecendency(value: WorkEffort): any;
    Facility: Facility;
    DeliverablesProduced: Deliverable[];
    AddDeliverablesProduced(value: Deliverable): any;
    RemoveDeliverablesProduced(value: Deliverable): any;
    ActualStart: Date;
    InventoryItemsNeeded: WorkEffortInventoryAssignment[];
    AddInventoryItemsNeeded(value: WorkEffortInventoryAssignment): any;
    RemoveInventoryItemsNeeded(value: WorkEffortInventoryAssignment): any;
    Children: WorkEffort[];
    AddChild(value: WorkEffort): any;
    RemoveChild(value: WorkEffort): any;
    WorkEffortType: WorkEffortType;
    InventoryItemsProduced: InventoryItem[];
    AddInventoryItemsProduced(value: InventoryItem): any;
    RemoveInventoryItemsProduced(value: InventoryItem): any;
    RequirementFulfillments: Requirement[];
    AddRequirementFulfillment(value: Requirement): any;
    RemoveRequirementFulfillment(value: Requirement): any;
    SpecialTerms: string;
    Concurrencies: WorkEffort[];
    AddConcurrency(value: WorkEffort): any;
    RemoveConcurrency(value: WorkEffort): any;
}
