import { SessionObject } from "@allors/framework";
import { InventoryItemVersion } from './InventoryItemVersion.g';
import { NonSerialisedInventoryItemState } from './NonSerialisedInventoryItemState.g';
import { ProductCharacteristicValue } from './ProductCharacteristicValue.g';
import { InventoryItemVariance } from './InventoryItemVariance.g';
import { Part } from './Part.g';
import { Lot } from './Lot.g';
import { UnitOfMeasure } from './UnitOfMeasure.g';
import { Good } from './Good.g';
import { ProductType } from './ProductType.g';
import { Facility } from './Facility.g';
export declare class NonSerialisedInventoryItemVersion extends SessionObject implements InventoryItemVersion {
    readonly CanReadNonSerialisedInventoryItemState: boolean;
    readonly CanWriteNonSerialisedInventoryItemState: boolean;
    NonSerialisedInventoryItemState: NonSerialisedInventoryItemState;
    readonly CanReadQuantityCommittedOut: boolean;
    readonly QuantityCommittedOut: number;
    readonly CanReadQuantityOnHand: boolean;
    readonly QuantityOnHand: number;
    readonly CanReadPreviousQuantityOnHand: boolean;
    readonly PreviousQuantityOnHand: number;
    readonly CanReadAvailableToPromise: boolean;
    readonly CanWriteAvailableToPromise: boolean;
    AvailableToPromise: number;
    readonly CanReadQuantityExpectedIn: boolean;
    readonly QuantityExpectedIn: number;
    readonly CanReadProductCharacteristicValues: boolean;
    readonly CanWriteProductCharacteristicValues: boolean;
    ProductCharacteristicValues: ProductCharacteristicValue[];
    AddProductCharacteristicValue(value: ProductCharacteristicValue): void;
    RemoveProductCharacteristicValue(value: ProductCharacteristicValue): void;
    readonly CanReadInventoryItemVariances: boolean;
    readonly CanWriteInventoryItemVariances: boolean;
    InventoryItemVariances: InventoryItemVariance[];
    AddInventoryItemVariance(value: InventoryItemVariance): void;
    RemoveInventoryItemVariance(value: InventoryItemVariance): void;
    readonly CanReadPart: boolean;
    readonly CanWritePart: boolean;
    Part: Part;
    readonly CanReadName: boolean;
    readonly Name: string;
    readonly CanReadLot: boolean;
    readonly CanWriteLot: boolean;
    Lot: Lot;
    readonly CanReadSku: boolean;
    readonly Sku: string;
    readonly CanReadUnitOfMeasure: boolean;
    readonly UnitOfMeasure: UnitOfMeasure;
    readonly CanReadGood: boolean;
    readonly CanWriteGood: boolean;
    Good: Good;
    readonly CanReadProductType: boolean;
    readonly CanWriteProductType: boolean;
    ProductType: ProductType;
    readonly CanReadFacility: boolean;
    readonly CanWriteFacility: boolean;
    Facility: Facility;
    readonly CanReadDerivationTimeStamp: boolean;
    readonly CanWriteDerivationTimeStamp: boolean;
    DerivationTimeStamp: Date;
}
