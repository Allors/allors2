import { SessionObject, Method } from "@allors/framework";
import { Commentable } from './Commentable.g';
import { Deletable } from './Deletable.g';
import { RequestItemState } from './RequestItemState.g';
import { RequestItemVersion } from './RequestItemVersion.g';
import { UnitOfMeasure } from './UnitOfMeasure.g';
import { Requirement } from './Requirement.g';
import { Deliverable } from './Deliverable.g';
import { ProductFeature } from './ProductFeature.g';
import { NeededSkill } from './NeededSkill.g';
import { Product } from './Product.g';
export declare class RequestItem extends SessionObject implements Commentable, Deletable {
    readonly CanReadRequestItemState: boolean;
    readonly CanWriteRequestItemState: boolean;
    RequestItemState: RequestItemState;
    readonly CanReadCurrentVersion: boolean;
    readonly CanWriteCurrentVersion: boolean;
    CurrentVersion: RequestItemVersion;
    readonly CanReadAllVersions: boolean;
    readonly CanWriteAllVersions: boolean;
    AllVersions: RequestItemVersion[];
    AddAllVersion(value: RequestItemVersion): void;
    RemoveAllVersion(value: RequestItemVersion): void;
    readonly CanReadInternalComment: boolean;
    readonly CanWriteInternalComment: boolean;
    InternalComment: string;
    readonly CanReadDescription: boolean;
    readonly CanWriteDescription: boolean;
    Description: string;
    readonly CanReadQuantity: boolean;
    readonly CanWriteQuantity: boolean;
    Quantity: number;
    readonly CanReadUnitOfMeasure: boolean;
    readonly CanWriteUnitOfMeasure: boolean;
    UnitOfMeasure: UnitOfMeasure;
    readonly CanReadRequirements: boolean;
    readonly CanWriteRequirements: boolean;
    Requirements: Requirement[];
    AddRequirement(value: Requirement): void;
    RemoveRequirement(value: Requirement): void;
    readonly CanReadDeliverable: boolean;
    readonly CanWriteDeliverable: boolean;
    Deliverable: Deliverable;
    readonly CanReadProductFeature: boolean;
    readonly CanWriteProductFeature: boolean;
    ProductFeature: ProductFeature;
    readonly CanReadNeededSkill: boolean;
    readonly CanWriteNeededSkill: boolean;
    NeededSkill: NeededSkill;
    readonly CanReadProduct: boolean;
    readonly CanWriteProduct: boolean;
    Product: Product;
    readonly CanReadMaximumAllowedPrice: boolean;
    readonly CanWriteMaximumAllowedPrice: boolean;
    MaximumAllowedPrice: number;
    readonly CanReadRequiredByDate: boolean;
    readonly CanWriteRequiredByDate: boolean;
    RequiredByDate: Date;
    readonly CanReadComment: boolean;
    readonly CanWriteComment: boolean;
    Comment: string;
    readonly CanExecuteCancel: boolean;
    readonly Cancel: Method;
    readonly CanExecuteSubmit: boolean;
    readonly Submit: Method;
    readonly CanExecuteHold: boolean;
    readonly Hold: Method;
    readonly CanExecuteDelete: boolean;
    readonly Delete: Method;
}
