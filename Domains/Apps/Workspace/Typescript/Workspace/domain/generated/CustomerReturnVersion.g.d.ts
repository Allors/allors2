import { SessionObject } from "@allors/framework";
import { ShipmentVersion } from './ShipmentVersion.g';
import { CustomerReturnState } from './CustomerReturnState.g';
import { ShipmentMethod } from './ShipmentMethod.g';
import { ContactMechanism } from './ContactMechanism.g';
import { ShipmentPackage } from './ShipmentPackage.g';
import { Document } from './Document.g';
import { Party } from './Party.g';
import { ShipmentItem } from './ShipmentItem.g';
import { PostalAddress } from './PostalAddress.g';
import { Carrier } from './Carrier.g';
import { Store } from './Store.g';
import { ShipmentRouteSegment } from './ShipmentRouteSegment.g';
export declare class CustomerReturnVersion extends SessionObject implements ShipmentVersion {
    readonly CanReadCustomerReturnState: boolean;
    readonly CanWriteCustomerReturnState: boolean;
    CustomerReturnState: CustomerReturnState;
    readonly CanReadShipmentMethod: boolean;
    readonly CanWriteShipmentMethod: boolean;
    ShipmentMethod: ShipmentMethod;
    readonly CanReadBillToContactMechanism: boolean;
    readonly CanWriteBillToContactMechanism: boolean;
    BillToContactMechanism: ContactMechanism;
    readonly CanReadShipmentPackages: boolean;
    readonly CanWriteShipmentPackages: boolean;
    ShipmentPackages: ShipmentPackage[];
    AddShipmentPackage(value: ShipmentPackage): void;
    RemoveShipmentPackage(value: ShipmentPackage): void;
    readonly CanReadShipmentNumber: boolean;
    readonly CanWriteShipmentNumber: boolean;
    ShipmentNumber: string;
    readonly CanReadDocuments: boolean;
    readonly CanWriteDocuments: boolean;
    Documents: Document[];
    AddDocument(value: Document): void;
    RemoveDocument(value: Document): void;
    readonly CanReadBillToParty: boolean;
    readonly CanWriteBillToParty: boolean;
    BillToParty: Party;
    readonly CanReadShipToParty: boolean;
    readonly CanWriteShipToParty: boolean;
    ShipToParty: Party;
    readonly CanReadShipmentItems: boolean;
    readonly CanWriteShipmentItems: boolean;
    ShipmentItems: ShipmentItem[];
    AddShipmentItem(value: ShipmentItem): void;
    RemoveShipmentItem(value: ShipmentItem): void;
    readonly CanReadReceiverContactMechanism: boolean;
    readonly CanWriteReceiverContactMechanism: boolean;
    ReceiverContactMechanism: ContactMechanism;
    readonly CanReadShipToAddress: boolean;
    readonly CanWriteShipToAddress: boolean;
    ShipToAddress: PostalAddress;
    readonly CanReadEstimatedShipCost: boolean;
    readonly CanWriteEstimatedShipCost: boolean;
    EstimatedShipCost: number;
    readonly CanReadEstimatedShipDate: boolean;
    readonly CanWriteEstimatedShipDate: boolean;
    EstimatedShipDate: Date;
    readonly CanReadLatestCancelDate: boolean;
    readonly CanWriteLatestCancelDate: boolean;
    LatestCancelDate: Date;
    readonly CanReadCarrier: boolean;
    readonly CanWriteCarrier: boolean;
    Carrier: Carrier;
    readonly CanReadInquireAboutContactMechanism: boolean;
    readonly CanWriteInquireAboutContactMechanism: boolean;
    InquireAboutContactMechanism: ContactMechanism;
    readonly CanReadEstimatedReadyDate: boolean;
    readonly CanWriteEstimatedReadyDate: boolean;
    EstimatedReadyDate: Date;
    readonly CanReadShipFromAddress: boolean;
    readonly CanWriteShipFromAddress: boolean;
    ShipFromAddress: PostalAddress;
    readonly CanReadBillFromContactMechanism: boolean;
    readonly BillFromContactMechanism: ContactMechanism;
    readonly CanReadHandlingInstruction: boolean;
    readonly CanWriteHandlingInstruction: boolean;
    HandlingInstruction: string;
    readonly CanReadStore: boolean;
    readonly CanWriteStore: boolean;
    Store: Store;
    readonly CanReadShipFromParty: boolean;
    readonly CanWriteShipFromParty: boolean;
    ShipFromParty: Party;
    readonly CanReadShipmentRouteSegments: boolean;
    readonly CanWriteShipmentRouteSegments: boolean;
    ShipmentRouteSegments: ShipmentRouteSegment[];
    AddShipmentRouteSegment(value: ShipmentRouteSegment): void;
    RemoveShipmentRouteSegment(value: ShipmentRouteSegment): void;
    readonly CanReadEstimatedArrivalDate: boolean;
    readonly CanWriteEstimatedArrivalDate: boolean;
    EstimatedArrivalDate: Date;
    readonly CanReadDerivationTimeStamp: boolean;
    readonly CanWriteDerivationTimeStamp: boolean;
    DerivationTimeStamp: Date;
}
