import { SessionObject, Method } from "@allors/framework";
import { Commentable } from './Commentable.g';
import { Auditable } from './Auditable.g';
import { Period } from './Period.g';
import { Deletable } from './Deletable.g';
import { ContactMechanismPurpose } from './ContactMechanismPurpose.g';
import { ContactMechanism } from './ContactMechanism.g';
import { User } from './User.g';
export declare class PartyContactMechanism extends SessionObject implements Commentable, Auditable, Period, Deletable {
    readonly CanReadContactPurposes: boolean;
    readonly CanWriteContactPurposes: boolean;
    ContactPurposes: ContactMechanismPurpose[];
    AddContactPurpose(value: ContactMechanismPurpose): void;
    RemoveContactPurpose(value: ContactMechanismPurpose): void;
    readonly CanReadContactMechanism: boolean;
    readonly CanWriteContactMechanism: boolean;
    ContactMechanism: ContactMechanism;
    readonly CanReadUseAsDefault: boolean;
    readonly CanWriteUseAsDefault: boolean;
    UseAsDefault: boolean;
    readonly CanReadNonSolicitationIndicator: boolean;
    readonly CanWriteNonSolicitationIndicator: boolean;
    NonSolicitationIndicator: boolean;
    readonly CanReadComment: boolean;
    readonly CanWriteComment: boolean;
    Comment: string;
    readonly CanReadCreatedBy: boolean;
    readonly CanWriteCreatedBy: boolean;
    CreatedBy: User;
    readonly CanReadLastModifiedBy: boolean;
    readonly CanWriteLastModifiedBy: boolean;
    LastModifiedBy: User;
    readonly CanReadCreationDate: boolean;
    readonly CanWriteCreationDate: boolean;
    CreationDate: Date;
    readonly CanReadLastModifiedDate: boolean;
    readonly CanWriteLastModifiedDate: boolean;
    LastModifiedDate: Date;
    readonly CanReadFromDate: boolean;
    readonly CanWriteFromDate: boolean;
    FromDate: Date;
    readonly CanReadThroughDate: boolean;
    readonly CanWriteThroughDate: boolean;
    ThroughDate: Date;
    readonly CanExecuteDelete: boolean;
    readonly Delete: Method;
}
