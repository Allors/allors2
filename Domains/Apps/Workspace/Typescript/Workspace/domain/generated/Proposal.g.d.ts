import { SessionObject, Method } from "@allors/framework";
import { Quote } from './Quote.g';
import { ProposalVersion } from './ProposalVersion.g';
import { QuoteState } from './QuoteState.g';
import { QuoteTerm } from './QuoteTerm.g';
import { Party } from './Party.g';
import { ContactMechanism } from './ContactMechanism.g';
import { Currency } from './Currency.g';
import { QuoteItem } from './QuoteItem.g';
import { Request } from './Request.g';
import { Person } from './Person.g';
import { User } from './User.g';
export declare class Proposal extends SessionObject implements Quote {
    readonly CanReadCurrentVersion: boolean;
    readonly CanWriteCurrentVersion: boolean;
    CurrentVersion: ProposalVersion;
    readonly CanReadAllVersions: boolean;
    readonly CanWriteAllVersions: boolean;
    AllVersions: ProposalVersion[];
    AddAllVersion(value: ProposalVersion): void;
    RemoveAllVersion(value: ProposalVersion): void;
    readonly CanReadQuoteState: boolean;
    readonly CanWriteQuoteState: boolean;
    QuoteState: QuoteState;
    readonly CanReadInternalComment: boolean;
    readonly CanWriteInternalComment: boolean;
    InternalComment: string;
    readonly CanReadRequiredResponseDate: boolean;
    readonly CanWriteRequiredResponseDate: boolean;
    RequiredResponseDate: Date;
    readonly CanReadValidFromDate: boolean;
    readonly CanWriteValidFromDate: boolean;
    ValidFromDate: Date;
    readonly CanReadQuoteTerms: boolean;
    readonly CanWriteQuoteTerms: boolean;
    QuoteTerms: QuoteTerm[];
    AddQuoteTerm(value: QuoteTerm): void;
    RemoveQuoteTerm(value: QuoteTerm): void;
    readonly CanReadValidThroughDate: boolean;
    readonly CanWriteValidThroughDate: boolean;
    ValidThroughDate: Date;
    readonly CanReadDescription: boolean;
    readonly CanWriteDescription: boolean;
    Description: string;
    readonly CanReadReceiver: boolean;
    readonly CanWriteReceiver: boolean;
    Receiver: Party;
    readonly CanReadFullfillContactMechanism: boolean;
    readonly CanWriteFullfillContactMechanism: boolean;
    FullfillContactMechanism: ContactMechanism;
    readonly CanReadPrice: boolean;
    readonly Price: number;
    readonly CanReadCurrency: boolean;
    readonly CanWriteCurrency: boolean;
    Currency: Currency;
    readonly CanReadIssueDate: boolean;
    readonly CanWriteIssueDate: boolean;
    IssueDate: Date;
    readonly CanReadQuoteItems: boolean;
    readonly CanWriteQuoteItems: boolean;
    QuoteItems: QuoteItem[];
    AddQuoteItem(value: QuoteItem): void;
    RemoveQuoteItem(value: QuoteItem): void;
    readonly CanReadQuoteNumber: boolean;
    readonly CanWriteQuoteNumber: boolean;
    QuoteNumber: string;
    readonly CanReadRequest: boolean;
    readonly CanWriteRequest: boolean;
    Request: Request;
    readonly CanReadContactPerson: boolean;
    readonly CanWriteContactPerson: boolean;
    ContactPerson: Person;
    readonly CanReadPrintContent: boolean;
    readonly CanWritePrintContent: boolean;
    PrintContent: string;
    readonly CanReadCreatedBy: boolean;
    readonly CanWriteCreatedBy: boolean;
    CreatedBy: User;
    readonly CanReadLastModifiedBy: boolean;
    readonly CanWriteLastModifiedBy: boolean;
    LastModifiedBy: User;
    readonly CanReadCreationDate: boolean;
    readonly CanWriteCreationDate: boolean;
    CreationDate: Date;
    readonly CanReadLastModifiedDate: boolean;
    readonly CanWriteLastModifiedDate: boolean;
    LastModifiedDate: Date;
    readonly CanReadComment: boolean;
    readonly CanWriteComment: boolean;
    Comment: string;
    readonly CanExecuteApprove: boolean;
    readonly Approve: Method;
    readonly CanExecuteReject: boolean;
    readonly Reject: Method;
}
