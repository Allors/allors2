import { SessionObject } from "@allors/framework";
import { InvoiceItemVersion } from './InvoiceItemVersion.g';
import { SalesInvoiceItemState } from './SalesInvoiceItemState.g';
import { ProductFeature } from './ProductFeature.g';
import { Product } from './Product.g';
import { SalesOrderItem } from './SalesOrderItem.g';
import { SalesInvoiceItemType } from './SalesInvoiceItemType.g';
import { Person } from './Person.g';
import { AgreementTerm } from './AgreementTerm.g';
import { InvoiceVatRateItem } from './InvoiceVatRateItem.g';
import { InvoiceItem } from './InvoiceItem.g';
export declare class SalesInvoiceItemVersion extends SessionObject implements InvoiceItemVersion {
    readonly CanReadSalesInvoiceItemState: boolean;
    readonly CanWriteSalesInvoiceItemState: boolean;
    SalesInvoiceItemState: SalesInvoiceItemState;
    readonly CanReadProductFeature: boolean;
    readonly CanWriteProductFeature: boolean;
    ProductFeature: ProductFeature;
    readonly CanReadRequiredProfitMargin: boolean;
    readonly CanWriteRequiredProfitMargin: boolean;
    RequiredProfitMargin: number;
    readonly CanReadInitialMarkupPercentage: boolean;
    readonly InitialMarkupPercentage: number;
    readonly CanReadMaintainedMarkupPercentage: boolean;
    readonly MaintainedMarkupPercentage: number;
    readonly CanReadProduct: boolean;
    readonly CanWriteProduct: boolean;
    Product: Product;
    readonly CanReadUnitPurchasePrice: boolean;
    readonly UnitPurchasePrice: number;
    readonly CanReadSalesOrderItem: boolean;
    readonly SalesOrderItem: SalesOrderItem;
    readonly CanReadSalesInvoiceItemType: boolean;
    readonly CanWriteSalesInvoiceItemType: boolean;
    SalesInvoiceItemType: SalesInvoiceItemType;
    readonly CanReadSalesRep: boolean;
    readonly CanWriteSalesRep: boolean;
    SalesRep: Person;
    readonly CanReadInitialProfitMargin: boolean;
    readonly InitialProfitMargin: number;
    readonly CanReadMaintainedProfitMargin: boolean;
    readonly MaintainedProfitMargin: number;
    readonly CanReadRequiredMarkupPercentage: boolean;
    readonly CanWriteRequiredMarkupPercentage: boolean;
    RequiredMarkupPercentage: number;
    readonly CanReadInternalComment: boolean;
    readonly CanWriteInternalComment: boolean;
    InternalComment: string;
    readonly CanReadInvoiceTerms: boolean;
    readonly CanWriteInvoiceTerms: boolean;
    InvoiceTerms: AgreementTerm[];
    AddInvoiceTerm(value: AgreementTerm): void;
    RemoveInvoiceTerm(value: AgreementTerm): void;
    readonly CanReadTotalInvoiceAdjustment: boolean;
    readonly TotalInvoiceAdjustment: number;
    readonly CanReadInvoiceVatRateItems: boolean;
    readonly CanWriteInvoiceVatRateItems: boolean;
    InvoiceVatRateItems: InvoiceVatRateItem[];
    AddInvoiceVatRateItem(value: InvoiceVatRateItem): void;
    RemoveInvoiceVatRateItem(value: InvoiceVatRateItem): void;
    readonly CanReadAdjustmentFor: boolean;
    readonly CanWriteAdjustmentFor: boolean;
    AdjustmentFor: InvoiceItem;
    readonly CanReadMessage: boolean;
    readonly CanWriteMessage: boolean;
    Message: string;
    readonly CanReadTotalInvoiceAdjustmentCustomerCurrency: boolean;
    readonly TotalInvoiceAdjustmentCustomerCurrency: number;
    readonly CanReadAmountPaid: boolean;
    readonly AmountPaid: number;
    readonly CanReadQuantity: boolean;
    readonly CanWriteQuantity: boolean;
    Quantity: number;
    readonly CanReadDescription: boolean;
    readonly CanWriteDescription: boolean;
    Description: string;
    readonly CanReadDerivationTimeStamp: boolean;
    readonly CanWriteDerivationTimeStamp: boolean;
    DerivationTimeStamp: Date;
}
