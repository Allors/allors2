import { SessionObject } from "@allors/framework";
import { InvoiceItemVersion } from './InvoiceItemVersion.g';
import { AgreementTerm } from './AgreementTerm.g';
import { InvoiceVatRateItem } from './InvoiceVatRateItem.g';
import { InvoiceItem } from './InvoiceItem.g';
export declare class PurchaseInvoiceItemVersion extends SessionObject implements InvoiceItemVersion {
    readonly CanReadInternalComment: boolean;
    readonly CanWriteInternalComment: boolean;
    InternalComment: string;
    readonly CanReadInvoiceTerms: boolean;
    readonly CanWriteInvoiceTerms: boolean;
    InvoiceTerms: AgreementTerm[];
    AddInvoiceTerm(value: AgreementTerm): void;
    RemoveInvoiceTerm(value: AgreementTerm): void;
    readonly CanReadTotalInvoiceAdjustment: boolean;
    readonly TotalInvoiceAdjustment: number;
    readonly CanReadInvoiceVatRateItems: boolean;
    readonly CanWriteInvoiceVatRateItems: boolean;
    InvoiceVatRateItems: InvoiceVatRateItem[];
    AddInvoiceVatRateItem(value: InvoiceVatRateItem): void;
    RemoveInvoiceVatRateItem(value: InvoiceVatRateItem): void;
    readonly CanReadAdjustmentFor: boolean;
    readonly CanWriteAdjustmentFor: boolean;
    AdjustmentFor: InvoiceItem;
    readonly CanReadMessage: boolean;
    readonly CanWriteMessage: boolean;
    Message: string;
    readonly CanReadTotalInvoiceAdjustmentCustomerCurrency: boolean;
    readonly TotalInvoiceAdjustmentCustomerCurrency: number;
    readonly CanReadAmountPaid: boolean;
    readonly AmountPaid: number;
    readonly CanReadQuantity: boolean;
    readonly CanWriteQuantity: boolean;
    Quantity: number;
    readonly CanReadDescription: boolean;
    readonly CanWriteDescription: boolean;
    Description: string;
    readonly CanReadDerivationTimeStamp: boolean;
    readonly CanWriteDerivationTimeStamp: boolean;
    DerivationTimeStamp: Date;
}
