import { SessionObject, Method } from "@allors/framework";
import { OrderItem } from './OrderItem.g';
import { PurchaseOrderItemState } from './PurchaseOrderItemState.g';
import { PurchaseOrderItemVersion } from './PurchaseOrderItemVersion.g';
import { PurchaseOrder } from './PurchaseOrder.g';
import { QuoteItem } from './QuoteItem.g';
import { OrderTerm } from './OrderTerm.g';
import { DiscountAdjustment } from './DiscountAdjustment.g';
import { VatRegime } from './VatRegime.g';
import { VatRate } from './VatRate.g';
import { SurchargeAdjustment } from './SurchargeAdjustment.g';
export declare class PurchaseOrderItem extends SessionObject implements OrderItem {
    readonly CanReadPurchaseOrderItemState: boolean;
    readonly CanWritePurchaseOrderItemState: boolean;
    PurchaseOrderItemState: PurchaseOrderItemState;
    readonly CanReadCurrentVersion: boolean;
    readonly CanWriteCurrentVersion: boolean;
    CurrentVersion: PurchaseOrderItemVersion;
    readonly CanReadAllVersions: boolean;
    readonly CanWriteAllVersions: boolean;
    AllVersions: PurchaseOrderItemVersion[];
    AddAllVersion(value: PurchaseOrderItemVersion): void;
    RemoveAllVersion(value: PurchaseOrderItemVersion): void;
    readonly CanReadInternalComment: boolean;
    readonly CanWriteInternalComment: boolean;
    InternalComment: string;
    readonly CanReadQuantityOrdered: boolean;
    readonly CanWriteQuantityOrdered: boolean;
    QuantityOrdered: number;
    readonly CanReadDescription: boolean;
    readonly CanWriteDescription: boolean;
    Description: string;
    readonly CanReadCorrespondingPurchaseOrder: boolean;
    readonly CanWriteCorrespondingPurchaseOrder: boolean;
    CorrespondingPurchaseOrder: PurchaseOrder;
    readonly CanReadTotalOrderAdjustmentCustomerCurrency: boolean;
    readonly TotalOrderAdjustmentCustomerCurrency: number;
    readonly CanReadTotalOrderAdjustment: boolean;
    readonly TotalOrderAdjustment: number;
    readonly CanReadQuoteItem: boolean;
    readonly CanWriteQuoteItem: boolean;
    QuoteItem: QuoteItem;
    readonly CanReadAssignedDeliveryDate: boolean;
    readonly CanWriteAssignedDeliveryDate: boolean;
    AssignedDeliveryDate: Date;
    readonly CanReadDeliveryDate: boolean;
    readonly DeliveryDate: Date;
    readonly CanReadOrderTerms: boolean;
    readonly CanWriteOrderTerms: boolean;
    OrderTerms: OrderTerm[];
    AddOrderTerm(value: OrderTerm): void;
    RemoveOrderTerm(value: OrderTerm): void;
    readonly CanReadShippingInstruction: boolean;
    readonly CanWriteShippingInstruction: boolean;
    ShippingInstruction: string;
    readonly CanReadAssociations: boolean;
    readonly CanWriteAssociations: boolean;
    Associations: OrderItem[];
    AddAssociation(value: OrderItem): void;
    RemoveAssociation(value: OrderItem): void;
    readonly CanReadMessage: boolean;
    readonly CanWriteMessage: boolean;
    Message: string;
    readonly CanReadTotalDiscountAsPercentage: boolean;
    readonly TotalDiscountAsPercentage: number;
    readonly CanReadDiscountAdjustment: boolean;
    readonly CanWriteDiscountAdjustment: boolean;
    DiscountAdjustment: DiscountAdjustment;
    readonly CanReadUnitVat: boolean;
    readonly UnitVat: number;
    readonly CanReadTotalVatCustomerCurrency: boolean;
    readonly TotalVatCustomerCurrency: number;
    readonly CanReadVatRegime: boolean;
    readonly VatRegime: VatRegime;
    readonly CanReadTotalVat: boolean;
    readonly TotalVat: number;
    readonly CanReadUnitSurcharge: boolean;
    readonly UnitSurcharge: number;
    readonly CanReadUnitDiscount: boolean;
    readonly UnitDiscount: number;
    readonly CanReadTotalExVatCustomerCurrency: boolean;
    readonly TotalExVatCustomerCurrency: number;
    readonly CanReadDerivedVatRate: boolean;
    readonly DerivedVatRate: VatRate;
    readonly CanReadActualUnitPrice: boolean;
    readonly CanWriteActualUnitPrice: boolean;
    ActualUnitPrice: number;
    readonly CanReadTotalIncVatCustomerCurrency: boolean;
    readonly TotalIncVatCustomerCurrency: number;
    readonly CanReadUnitBasePrice: boolean;
    readonly UnitBasePrice: number;
    readonly CanReadCalculatedUnitPrice: boolean;
    readonly CalculatedUnitPrice: number;
    readonly CanReadTotalSurchargeCustomerCurrency: boolean;
    readonly TotalSurchargeCustomerCurrency: number;
    readonly CanReadTotalIncVat: boolean;
    readonly TotalIncVat: number;
    readonly CanReadTotalSurchargeAsPercentage: boolean;
    readonly TotalSurchargeAsPercentage: number;
    readonly CanReadTotalDiscountCustomerCurrency: boolean;
    readonly TotalDiscountCustomerCurrency: number;
    readonly CanReadTotalDiscount: boolean;
    readonly TotalDiscount: number;
    readonly CanReadTotalSurcharge: boolean;
    readonly TotalSurcharge: number;
    readonly CanReadAssignedVatRegime: boolean;
    readonly CanWriteAssignedVatRegime: boolean;
    AssignedVatRegime: VatRegime;
    readonly CanReadTotalBasePrice: boolean;
    readonly TotalBasePrice: number;
    readonly CanReadTotalExVat: boolean;
    readonly TotalExVat: number;
    readonly CanReadTotalBasePriceCustomerCurrency: boolean;
    readonly TotalBasePriceCustomerCurrency: number;
    readonly CanReadSurchargeAdjustment: boolean;
    readonly CanWriteSurchargeAdjustment: boolean;
    SurchargeAdjustment: SurchargeAdjustment;
    readonly CanReadComment: boolean;
    readonly CanWriteComment: boolean;
    Comment: string;
    readonly CanExecuteCancel: boolean;
    readonly Cancel: Method;
    readonly CanExecuteReject: boolean;
    readonly Reject: Method;
    readonly CanExecuteConfirm: boolean;
    readonly Confirm: Method;
    readonly CanExecuteApprove: boolean;
    readonly Approve: Method;
    readonly CanExecuteDelete: boolean;
    readonly Delete: Method;
}
