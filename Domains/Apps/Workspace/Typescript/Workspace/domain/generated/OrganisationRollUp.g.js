"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Allors generated file.
// Do not edit this file, changes will be overwritten.
/* tslint:disable */
const framework_1 = require("@allors/framework");
class OrganisationRollUp extends framework_1.SessionObject {
    get CanReadParent() {
        return this.canRead('Parent');
    }
    get CanWriteParent() {
        return this.canWrite('Parent');
    }
    get Parent() {
        return this.get('Parent');
    }
    set Parent(value) {
        this.set('Parent', value);
    }
    get CanReadRollupKind() {
        return this.canRead('RollupKind');
    }
    get CanWriteRollupKind() {
        return this.canWrite('RollupKind');
    }
    get RollupKind() {
        return this.get('RollupKind');
    }
    set RollupKind(value) {
        this.set('RollupKind', value);
    }
    get CanReadChild() {
        return this.canRead('Child');
    }
    get CanWriteChild() {
        return this.canWrite('Child');
    }
    get Child() {
        return this.get('Child');
    }
    set Child(value) {
        this.set('Child', value);
    }
    get CanReadParties() {
        return this.canRead('Parties');
    }
    get Parties() {
        return this.get('Parties');
    }
    get CanReadFromDate() {
        return this.canRead('FromDate');
    }
    get CanWriteFromDate() {
        return this.canWrite('FromDate');
    }
    get FromDate() {
        return this.get('FromDate');
    }
    set FromDate(value) {
        this.set('FromDate', value);
    }
    get CanReadThroughDate() {
        return this.canRead('ThroughDate');
    }
    get CanWriteThroughDate() {
        return this.canWrite('ThroughDate');
    }
    get ThroughDate() {
        return this.get('ThroughDate');
    }
    set ThroughDate(value) {
        this.set('ThroughDate', value);
    }
    get CanExecuteDelete() {
        return this.canExecute('Delete');
    }
    get Delete() {
        return new framework_1.Method(this, 'Delete');
    }
}
exports.OrganisationRollUp = OrganisationRollUp;
