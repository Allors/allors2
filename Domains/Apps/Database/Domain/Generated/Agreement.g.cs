// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface Agreement :  AccessControlledObject,UniquelyIdentifiable,Period, Allors.IObject
	{


		global::System.DateTime? AgreementDate 
		{
			get;
			set;
		}

		bool ExistAgreementDate{get;}

		void RemoveAgreementDate();


		global::Allors.Extent<Addendum> Addenda
		{ 
			get;
			set;
		}

		void AddAddenda (Addendum value);

		void RemoveAddenda (Addendum value);

		bool ExistAddenda
		{
			get;
		}

		void RemoveAddenda();


		global::System.String Description 
		{
			get;
			set;
		}

		bool ExistDescription{get;}

		void RemoveDescription();


		global::Allors.Extent<AgreementTerm> AgreementTerms
		{ 
			get;
			set;
		}

		void AddAgreementTerm (AgreementTerm value);

		void RemoveAgreementTerm (AgreementTerm value);

		bool ExistAgreementTerms
		{
			get;
		}

		void RemoveAgreementTerms();


		global::System.String Text 
		{
			get;
			set;
		}

		bool ExistText{get;}

		void RemoveText();


		global::Allors.Extent<AgreementItem> AgreementItems
		{ 
			get;
			set;
		}

		void AddAgreementItem (AgreementItem value);

		void RemoveAgreementItem (AgreementItem value);

		bool ExistAgreementItems
		{
			get;
		}

		void RemoveAgreementItems();


		global::System.String AgreementNumber 
		{
			get;
			set;
		}

		bool ExistAgreementNumber{get;}

		void RemoveAgreementNumber();



		global::Allors.Extent<Engagement> EngagementsWhereAgreement
		{ 
			get;
		}

		bool ExistEngagementsWhereAgreement
		{
			get;
		}


		PartyVersion PartyVersionWhereAgreement
		{
			get;
		}

		bool ExistPartyVersionWhereAgreement
		{
			get;
		}


		Party PartyWhereAgreement
		{
			get;
		}

		bool ExistPartyWhereAgreement
		{
			get;
		}

	}

	public partial interface AgreementBuilder : AccessControlledObjectBuilder ,UniquelyIdentifiableBuilder ,PeriodBuilder , global::System.IDisposable
	{	
		global::System.DateTime? AgreementDate {get;}
		


		global::System.Collections.Generic.List<Addendum> Addenda {get;}		

		

		global::System.String Description {get;}
		


		global::System.Collections.Generic.List<AgreementTerm> AgreementTerms {get;}		

		

		global::System.String Text {get;}
		


		global::System.Collections.Generic.List<AgreementItem> AgreementItems {get;}		

		

		global::System.String AgreementNumber {get;}
		

	}

	public partial class Agreements : global::Allors.ObjectsBase<Agreement>
	{
		public Agreements(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaAgreement Meta
		{
			get
			{
				return Allors.Meta.MetaAgreement.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}