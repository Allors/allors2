// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface PaymentMethod :  AccessControlledObject,UniquelyIdentifiable, Allors.IObject
	{


		global::System.Decimal? BalanceLimit 
		{
			get;
			set;
		}

		bool ExistBalanceLimit{get;}

		void RemoveBalanceLimit();


		global::System.Decimal CurrentBalance 
		{
			get;
			set;
		}

		bool ExistCurrentBalance{get;}

		void RemoveCurrentBalance();


		Journal Journal
		{ 
			get;
			set;
		}

		bool ExistJournal
		{
			get;
		}

		void RemoveJournal();


		global::System.String Description 
		{
			get;
			set;
		}

		bool ExistDescription{get;}

		void RemoveDescription();


		OrganisationGlAccount GlPaymentInTransit
		{ 
			get;
			set;
		}

		bool ExistGlPaymentInTransit
		{
			get;
		}

		void RemoveGlPaymentInTransit();


		global::System.String Remarks 
		{
			get;
			set;
		}

		bool ExistRemarks{get;}

		void RemoveRemarks();


		OrganisationGlAccount GeneralLedgerAccount
		{ 
			get;
			set;
		}

		bool ExistGeneralLedgerAccount
		{
			get;
		}

		void RemoveGeneralLedgerAccount();


		global::System.Boolean IsActive 
		{
			get;
			set;
		}

		bool ExistIsActive{get;}

		void RemoveIsActive();



		global::Allors.Extent<AmountDue> AmountDuesWherePaymentMethod
		{ 
			get;
		}

		bool ExistAmountDuesWherePaymentMethod
		{
			get;
		}


		global::Allors.Extent<CustomerShipment> CustomerShipmentsWherePaymentMethod
		{ 
			get;
		}

		bool ExistCustomerShipmentsWherePaymentMethod
		{
			get;
		}


		global::Allors.Extent<CustomerShipmentVersion> CustomerShipmentVersionsWherePaymentMethod
		{ 
			get;
		}

		bool ExistCustomerShipmentVersionsWherePaymentMethod
		{
			get;
		}


		InternalOrganisation InternalOrganisationWhereActivePaymentMethod
		{
			get;
		}

		bool ExistInternalOrganisationWhereActivePaymentMethod
		{
			get;
		}


		InternalOrganisation InternalOrganisationWhereDefaultPaymentMethod
		{
			get;
		}

		bool ExistInternalOrganisationWhereDefaultPaymentMethod
		{
			get;
		}


		global::Allors.Extent<SalesInvoiceVersion> SalesInvoiceVersionsWherePaymentMethod
		{ 
			get;
		}

		bool ExistSalesInvoiceVersionsWherePaymentMethod
		{
			get;
		}


		global::Allors.Extent<SalesOrderVersion> SalesOrderVersionsWherePaymentMethod
		{ 
			get;
		}

		bool ExistSalesOrderVersionsWherePaymentMethod
		{
			get;
		}


		global::Allors.Extent<PayrollPreference> PayrollPreferencesWherePaymentMethod
		{ 
			get;
		}

		bool ExistPayrollPreferencesWherePaymentMethod
		{
			get;
		}


		global::Allors.Extent<SalesInvoice> SalesInvoicesWherePaymentMethod
		{ 
			get;
		}

		bool ExistSalesInvoicesWherePaymentMethod
		{
			get;
		}


		global::Allors.Extent<SalesOrder> SalesOrdersWherePaymentMethod
		{ 
			get;
		}

		bool ExistSalesOrdersWherePaymentMethod
		{
			get;
		}


		global::Allors.Extent<Store> StoresWhereDefaultPaymentMethod
		{ 
			get;
		}

		bool ExistStoresWhereDefaultPaymentMethod
		{
			get;
		}


		global::Allors.Extent<Store> StoresWherePaymentMethod
		{ 
			get;
		}

		bool ExistStoresWherePaymentMethod
		{
			get;
		}


		global::Allors.Extent<PartyVersion> PartyVersionsWhereDefaultPaymentMethod
		{ 
			get;
		}

		bool ExistPartyVersionsWhereDefaultPaymentMethod
		{
			get;
		}


		global::Allors.Extent<Party> PartiesWhereDefaultPaymentMethod
		{ 
			get;
		}

		bool ExistPartiesWhereDefaultPaymentMethod
		{
			get;
		}


		global::Allors.Extent<Payment> PaymentsWherePaymentMethod
		{ 
			get;
		}

		bool ExistPaymentsWherePaymentMethod
		{
			get;
		}

	}

	public partial interface PaymentMethodBuilder : AccessControlledObjectBuilder ,UniquelyIdentifiableBuilder , global::System.IDisposable
	{	
		global::System.Decimal? BalanceLimit {get;}
		

		Journal Journal {get;}

		

		global::System.String Description {get;}
		

		OrganisationGlAccount GlPaymentInTransit {get;}

		

		global::System.String Remarks {get;}
		

		OrganisationGlAccount GeneralLedgerAccount {get;}

		

		global::System.Boolean? IsActive {get;}
		

	}

	public partial class PaymentMethods : global::Allors.ObjectsBase<PaymentMethod>
	{
		public PaymentMethods(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaPaymentMethod Meta
		{
			get
			{
				return Allors.Meta.MetaPaymentMethod.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}