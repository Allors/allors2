// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class QuoteReject : Allors.Meta.Method
	{
		protected QuoteReject(Quote @object) : base(@object)
		{
		}
	}

	public partial class ProductQuoteReject : QuoteReject
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteRejectMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuote.ObjectType, Allors.Meta.M.ProductQuote.Reject); 

		public ProductQuoteReject(Quote @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteRejectMethodInvocation;
			}
		}
	}public partial class ProposalReject : QuoteReject
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalRejectMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Proposal.ObjectType, Allors.Meta.M.Proposal.Reject); 

		public ProposalReject(Quote @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalRejectMethodInvocation;
			}
		}
	}public partial class StatementOfWorkReject : QuoteReject
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkRejectMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWork.ObjectType, Allors.Meta.M.StatementOfWork.Reject); 

		public StatementOfWorkReject(Quote @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkRejectMethodInvocation;
			}
		}
	}
}