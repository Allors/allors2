// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class QuoteApprove : Allors.Meta.Method
	{
		protected QuoteApprove(Quote @object) : base(@object)
		{
		}
	}

	public partial class ProductQuoteApprove : QuoteApprove
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteApproveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuote.ObjectType, Allors.Meta.M.ProductQuote.Approve); 

		public ProductQuoteApprove(Quote @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteApproveMethodInvocation;
			}
		}
	}public partial class ProposalApprove : QuoteApprove
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalApproveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Proposal.ObjectType, Allors.Meta.M.Proposal.Approve); 

		public ProposalApprove(Quote @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalApproveMethodInvocation;
			}
		}
	}public partial class StatementOfWorkApprove : QuoteApprove
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkApproveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWork.ObjectType, Allors.Meta.M.StatementOfWork.Approve); 

		public StatementOfWorkApprove(Quote @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkApproveMethodInvocation;
			}
		}
	}
}