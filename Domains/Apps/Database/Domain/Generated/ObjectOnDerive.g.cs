// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnDerive : Allors.Meta.Method
	{
		protected ObjectOnDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class EmailMessageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnDerive); 

		public EmailMessageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnDeriveMethodInvocation;
			}
		}
	}public partial class EventOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Event.ObjectType, Allors.Meta.M.Event.OnDerive); 

		public EventOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventOnDeriveMethodInvocation;
			}
		}
	}public partial class EventRegistrationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventRegistrationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EventRegistration.ObjectType, Allors.Meta.M.EventRegistration.OnDerive); 

		public EventRegistrationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventRegistrationOnDeriveMethodInvocation;
			}
		}
	}public partial class FiscalYearInvoiceNumberOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FiscalYearInvoiceNumberOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FiscalYearInvoiceNumber.ObjectType, Allors.Meta.M.FiscalYearInvoiceNumber.OnDerive); 

		public FiscalYearInvoiceNumberOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FiscalYearInvoiceNumberOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderItemBillingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderItemBillingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderItemBilling.ObjectType, Allors.Meta.M.OrderItemBilling.OnDerive); 

		public OrderItemBillingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderItemBillingOnDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryBillingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryBillingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceEntryBilling.ObjectType, Allors.Meta.M.ServiceEntryBilling.OnDerive); 

		public ServiceEntryBillingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryBillingOnDeriveMethodInvocation;
			}
		}
	}public partial class TransitionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Transition.ObjectType, Allors.Meta.M.Transition.OnDerive); 

		public TransitionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortBillingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortBillingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortBilling.ObjectType, Allors.Meta.M.WorkEffortBilling.OnDerive); 

		public WorkEffortBillingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortBillingOnDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnDerive); 

		public AccessControlOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnDerive); 

		public MediaOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnDerive); 

		public MediaContentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnDerive); 

		public LoginOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnDerive); 

		public PermissionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnDerive); 

		public SecurityTokenOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnDeriveMethodInvocation;
			}
		}
	}public partial class NotificationListOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnDerive); 

		public NotificationListOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnDerive); 

		public PersonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnDeriveMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnDerive); 

		public TaskAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class TaskListOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnDerive); 

		public TaskListOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnDeriveMethodInvocation;
			}
		}
	}public partial class BasePriceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BasePrice.ObjectType, Allors.Meta.M.BasePrice.OnDerive); 

		public BasePriceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerRelationship.ObjectType, Allors.Meta.M.CustomerRelationship.OnDerive); 

		public CustomerRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Employment.ObjectType, Allors.Meta.M.Employment.OnDerive); 

		public EmploymentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentOnDeriveMethodInvocation;
			}
		}
	}public partial class GoodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Good.ObjectType, Allors.Meta.M.Good.OnDerive); 

		public GoodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOnDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InternalOrganisationRevenue.ObjectType, Allors.Meta.M.InternalOrganisationRevenue.OnDerive); 

		public InternalOrganisationRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class ItemIssuanceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ItemIssuance.ObjectType, Allors.Meta.M.ItemIssuance.OnDerive); 

		public ItemIssuanceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderShipmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderShipment.ObjectType, Allors.Meta.M.OrderShipment.OnDerive); 

		public OrderShipmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnDerive); 

		public OrganisationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnDeriveMethodInvocation;
			}
		}
	}public partial class PackageRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackageRevenue.ObjectType, Allors.Meta.M.PackageRevenue.OnDerive); 

		public PackageRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyContactMechanismOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyContactMechanismOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyContactMechanism.ObjectType, Allors.Meta.M.PartyContactMechanism.OnDerive); 

		public PartyContactMechanismOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyContactMechanismOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyPackageRevenue.ObjectType, Allors.Meta.M.PartyPackageRevenue.OnDerive); 

		public PartyPackageRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyProductCategoryRevenue.ObjectType, Allors.Meta.M.PartyProductCategoryRevenue.OnDerive); 

		public PartyProductCategoryRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyProductRevenue.ObjectType, Allors.Meta.M.PartyProductRevenue.OnDerive); 

		public PartyProductRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyRevenue.ObjectType, Allors.Meta.M.PartyRevenue.OnDerive); 

		public PartyRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class PickListItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListItem.ObjectType, Allors.Meta.M.PickListItem.OnDerive); 

		public PickListItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemOnDeriveMethodInvocation;
			}
		}
	}public partial class PostalBoundaryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalBoundaryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalBoundary.ObjectType, Allors.Meta.M.PostalBoundary.OnDerive); 

		public PostalBoundaryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalBoundaryOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCategoryRevenue.ObjectType, Allors.Meta.M.ProductCategoryRevenue.OnDerive); 

		public ProductCategoryRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductCharacteristicValueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCharacteristicValueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCharacteristicValue.ObjectType, Allors.Meta.M.ProductCharacteristicValue.OnDerive); 

		public ProductCharacteristicValueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCharacteristicValueOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductRevenue.ObjectType, Allors.Meta.M.ProductRevenue.OnDerive); 

		public ProductRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItem.ObjectType, Allors.Meta.M.QuoteItem.OnDerive); 

		public QuoteItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItem.ObjectType, Allors.Meta.M.RequestItem.OnDerive); 

		public RequestItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesChannelRevenue.ObjectType, Allors.Meta.M.SalesChannelRevenue.OnDerive); 

		public SalesChannelRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepPartyProductCategoryRevenue.ObjectType, Allors.Meta.M.SalesRepPartyProductCategoryRevenue.OnDerive); 

		public SalesRepPartyProductCategoryRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepPartyRevenue.ObjectType, Allors.Meta.M.SalesRepPartyRevenue.OnDerive); 

		public SalesRepPartyRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepProductCategoryRevenue.ObjectType, Allors.Meta.M.SalesRepProductCategoryRevenue.OnDerive); 

		public SalesRepProductCategoryRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepRevenue.ObjectType, Allors.Meta.M.SalesRepRevenue.OnDerive); 

		public SalesRepRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentItem.ObjectType, Allors.Meta.M.ShipmentItem.OnDerive); 

		public ShipmentItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemOnDeriveMethodInvocation;
			}
		}
	}public partial class StoreRevenueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StoreRevenue.ObjectType, Allors.Meta.M.StoreRevenue.OnDerive); 

		public StoreRevenueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueOnDeriveMethodInvocation;
			}
		}
	}public partial class SupplierRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SupplierRelationship.ObjectType, Allors.Meta.M.SupplierRelationship.OnDerive); 

		public SupplierRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortAssignment.ObjectType, Allors.Meta.M.WorkEffortAssignment.OnDerive); 

		public WorkEffortAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class EmailCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailCommunication.ObjectType, Allors.Meta.M.EmailCommunication.OnDerive); 

		public EmailCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaceToFaceCommunication.ObjectType, Allors.Meta.M.FaceToFaceCommunication.OnDerive); 

		public FaceToFaceCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class FaxCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaxCommunication.ObjectType, Allors.Meta.M.FaxCommunication.OnDerive); 

		public FaxCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LetterCorrespondence.ObjectType, Allors.Meta.M.LetterCorrespondence.OnDerive); 

		public LetterCorrespondenceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceOnDeriveMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PhoneCommunication.ObjectType, Allors.Meta.M.PhoneCommunication.OnDerive); 

		public PhoneCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebSiteCommunication.ObjectType, Allors.Meta.M.WebSiteCommunication.OnDerive); 

		public WebSiteCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class PostalAddressOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalAddressOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalAddress.ObjectType, Allors.Meta.M.PostalAddress.OnDerive); 

		public PostalAddressOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalAddressOnDeriveMethodInvocation;
			}
		}
	}public partial class TelecommunicationsNumberOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TelecommunicationsNumberOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TelecommunicationsNumber.ObjectType, Allors.Meta.M.TelecommunicationsNumber.OnDerive); 

		public TelecommunicationsNumberOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TelecommunicationsNumberOnDeriveMethodInvocation;
			}
		}
	}public partial class EmailAddressOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailAddressOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailAddress.ObjectType, Allors.Meta.M.EmailAddress.OnDerive); 

		public EmailAddressOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailAddressOnDeriveMethodInvocation;
			}
		}
	}public partial class WebAddressOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebAddressOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebAddress.ObjectType, Allors.Meta.M.WebAddress.OnDerive); 

		public WebAddressOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebAddressOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItem.ObjectType, Allors.Meta.M.PurchaseInvoiceItem.OnDerive); 

		public PurchaseInvoiceItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItem.ObjectType, Allors.Meta.M.SalesInvoiceItem.OnDerive); 

		public SalesInvoiceItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationContactRelationship.ObjectType, Allors.Meta.M.OrganisationContactRelationship.OnDerive); 

		public OrganisationContactRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationRollUpOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRollUpOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationRollUp.ObjectType, Allors.Meta.M.OrganisationRollUp.OnDerive); 

		public OrganisationRollUpOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRollUpOnDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalServicesRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalServicesRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalServicesRelationship.ObjectType, Allors.Meta.M.ProfessionalServicesRelationship.OnDerive); 

		public ProfessionalServicesRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalServicesRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepRelationship.ObjectType, Allors.Meta.M.SalesRepRelationship.OnDerive); 

		public SalesRepRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubContractorRelationship.ObjectType, Allors.Meta.M.SubContractorRelationship.OnDerive); 

		public SubContractorRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItem.ObjectType, Allors.Meta.M.PurchaseOrderItem.OnDerive); 

		public PurchaseOrderItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItem.ObjectType, Allors.Meta.M.SalesOrderItem.OnDerive); 

		public SalesOrderItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkTaskOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkTaskOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkTask.ObjectType, Allors.Meta.M.WorkTask.OnDerive); 

		public WorkTaskOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkTaskOnDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnDerive); 

		public CounterOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnDerive); 

		public RoleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnDerive); 

		public UserGroupOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnDeriveMethodInvocation;
			}
		}
	}public partial class CarrierOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CarrierOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Carrier.ObjectType, Allors.Meta.M.Carrier.OnDerive); 

		public CarrierOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CarrierOnDeriveMethodInvocation;
			}
		}
	}public partial class CaseOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Case.ObjectType, Allors.Meta.M.Case.OnDerive); 

		public CaseOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseOnDeriveMethodInvocation;
			}
		}
	}public partial class CatalogueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CatalogueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Catalogue.ObjectType, Allors.Meta.M.Catalogue.OnDerive); 

		public CatalogueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CatalogueOnDeriveMethodInvocation;
			}
		}
	}public partial class ChartOfAccountsOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ChartOfAccountsOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ChartOfAccounts.ObjectType, Allors.Meta.M.ChartOfAccounts.OnDerive); 

		public ChartOfAccountsOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ChartOfAccountsOnDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenter.ObjectType, Allors.Meta.M.CostCenter.OnDerive); 

		public CostCenterOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterOnDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterCategoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterCategoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenterCategory.ObjectType, Allors.Meta.M.CostCenterCategory.OnDerive); 

		public CostCenterCategoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterCategoryOnDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccount.ObjectType, Allors.Meta.M.GeneralLedgerAccount.OnDerive); 

		public GeneralLedgerAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InternalOrganisation.ObjectType, Allors.Meta.M.InternalOrganisation.OnDerive); 

		public InternalOrganisationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderKindOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderKindOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderKind.ObjectType, Allors.Meta.M.OrderKind.OnDerive); 

		public OrderKindOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderKindOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactKindOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactKindOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationContactKind.ObjectType, Allors.Meta.M.OrganisationContactKind.OnDerive); 

		public OrganisationContactKindOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactKindOnDeriveMethodInvocation;
			}
		}
	}public partial class PackageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Package.ObjectType, Allors.Meta.M.Package.OnDerive); 

		public PackageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageOnDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecification.ObjectType, Allors.Meta.M.PartSpecification.OnDerive); 

		public PartSpecificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCategory.ObjectType, Allors.Meta.M.ProductCategory.OnDerive); 

		public ProductCategoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductType.ObjectType, Allors.Meta.M.ProductType.OnDerive); 

		public ProductTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class RequirementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Requirement.ObjectType, Allors.Meta.M.Requirement.OnDerive); 

		public RequirementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentPackageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentPackageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentPackage.ObjectType, Allors.Meta.M.ShipmentPackage.OnDerive); 

		public ShipmentPackageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentPackageOnDeriveMethodInvocation;
			}
		}
	}public partial class StoreOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Store.ObjectType, Allors.Meta.M.Store.OnDerive); 

		public StoreOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreOnDeriveMethodInvocation;
			}
		}
	}public partial class StringTemplateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StringTemplate.ObjectType, Allors.Meta.M.StringTemplate.OnDerive); 

		public StringTemplateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionType.ObjectType, Allors.Meta.M.AccountingTransactionType.OnDerive); 

		public AccountingTransactionTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class AssetAssignmentStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AssetAssignmentStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AssetAssignmentStatus.ObjectType, Allors.Meta.M.AssetAssignmentStatus.OnDerive); 

		public AssetAssignmentStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AssetAssignmentStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class CatScopeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CatScopeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CatScope.ObjectType, Allors.Meta.M.CatScope.OnDerive); 

		public CatScopeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CatScopeOnDeriveMethodInvocation;
			}
		}
	}public partial class ColourOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ColourOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Colour.ObjectType, Allors.Meta.M.Colour.OnDerive); 

		public ColourOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ColourOnDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventPurposeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventPurposeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CommunicationEventPurpose.ObjectType, Allors.Meta.M.CommunicationEventPurpose.OnDerive); 

		public CommunicationEventPurposeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventPurposeOnDeriveMethodInvocation;
			}
		}
	}public partial class ContactMechanismPurposeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismPurposeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ContactMechanismPurpose.ObjectType, Allors.Meta.M.ContactMechanismPurpose.OnDerive); 

		public ContactMechanismPurposeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismPurposeOnDeriveMethodInvocation;
			}
		}
	}public partial class ContactMechanismTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ContactMechanismType.ObjectType, Allors.Meta.M.ContactMechanismType.OnDerive); 

		public ContactMechanismTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterSplitMethodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterSplitMethodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenterSplitMethod.ObjectType, Allors.Meta.M.CostCenterSplitMethod.OnDerive); 

		public CostCenterSplitMethodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterSplitMethodOnDeriveMethodInvocation;
			}
		}
	}public partial class CostOfGoodsSoldMethodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostOfGoodsSoldMethodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostOfGoodsSoldMethod.ObjectType, Allors.Meta.M.CostOfGoodsSoldMethod.OnDerive); 

		public CostOfGoodsSoldMethodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostOfGoodsSoldMethodOnDeriveMethodInvocation;
			}
		}
	}public partial class DebitCreditConstantOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DebitCreditConstantOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DebitCreditConstant.ObjectType, Allors.Meta.M.DebitCreditConstant.OnDerive); 

		public DebitCreditConstantOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DebitCreditConstantOnDeriveMethodInvocation;
			}
		}
	}public partial class DeductionTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeductionType.ObjectType, Allors.Meta.M.DeductionType.OnDerive); 

		public DeductionTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableType.ObjectType, Allors.Meta.M.DeliverableType.OnDerive); 

		public DeliverableTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class DunningTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DunningTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DunningType.ObjectType, Allors.Meta.M.DunningType.OnDerive); 

		public DunningTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DunningTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationSourceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationSourceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplicationSource.ObjectType, Allors.Meta.M.EmploymentApplicationSource.OnDerive); 

		public EmploymentApplicationSourceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationSourceOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplicationStatus.ObjectType, Allors.Meta.M.EmploymentApplicationStatus.OnDerive); 

		public EmploymentApplicationStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentTermination.ObjectType, Allors.Meta.M.EmploymentTermination.OnDerive); 

		public EmploymentTerminationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationReasonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationReasonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentTerminationReason.ObjectType, Allors.Meta.M.EmploymentTerminationReason.OnDerive); 

		public EmploymentTerminationReasonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationReasonOnDeriveMethodInvocation;
			}
		}
	}public partial class EuSalesListTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EuSalesListTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EuSalesListType.ObjectType, Allors.Meta.M.EuSalesListType.OnDerive); 

		public EuSalesListTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EuSalesListTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class FacilityTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FacilityTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FacilityType.ObjectType, Allors.Meta.M.FacilityType.OnDerive); 

		public FacilityTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FacilityTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class GenderTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GenderType.ObjectType, Allors.Meta.M.GenderType.OnDerive); 

		public GenderTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class HobbyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HobbyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Hobby.ObjectType, Allors.Meta.M.Hobby.OnDerive); 

		public HobbyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HobbyOnDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemKindOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemKindOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InventoryItemKind.ObjectType, Allors.Meta.M.InventoryItemKind.OnDerive); 

		public InventoryItemKindOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemKindOnDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceSequenceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceSequenceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceSequence.ObjectType, Allors.Meta.M.InvoiceSequence.OnDerive); 

		public InvoiceSequenceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceSequenceOnDeriveMethodInvocation;
			}
		}
	}public partial class JournalTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalType.ObjectType, Allors.Meta.M.JournalType.OnDerive); 

		public JournalTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class MaritalStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaritalStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MaritalStatus.ObjectType, Allors.Meta.M.MaritalStatus.OnDerive); 

		public MaritalStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaritalStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class ModelOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ModelOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Model.ObjectType, Allors.Meta.M.Model.OnDerive); 

		public ModelOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ModelOnDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationType.ObjectType, Allors.Meta.M.PartSpecificationType.OnDerive); 

		public PartSpecificationTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class OwnershipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnershipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Ownership.ObjectType, Allors.Meta.M.Ownership.OnDerive); 

		public OwnershipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnershipOnDeriveMethodInvocation;
			}
		}
	}public partial class ProcessFlowOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProcessFlowOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProcessFlow.ObjectType, Allors.Meta.M.ProcessFlow.OnDerive); 

		public ProcessFlowOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProcessFlowOnDeriveMethodInvocation;
			}
		}
	}public partial class OrdinalOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrdinalOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Ordinal.ObjectType, Allors.Meta.M.Ordinal.OnDerive); 

		public OrdinalOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrdinalOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationRoleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRoleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationRole.ObjectType, Allors.Meta.M.OrganisationRole.OnDerive); 

		public OrganisationRoleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRoleOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationUnitOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationUnitOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationUnit.ObjectType, Allors.Meta.M.OrganisationUnit.OnDerive); 

		public OrganisationUnitOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationUnitOnDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReviewItemType.ObjectType, Allors.Meta.M.PerformanceReviewItemType.OnDerive); 

		public PerformanceReviewItemTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonalTitleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonalTitleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonalTitle.ObjectType, Allors.Meta.M.PersonalTitle.OnDerive); 

		public PersonalTitleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonalTitleOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonRoleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonRoleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonRole.ObjectType, Allors.Meta.M.PersonRole.OnDerive); 

		public PersonRoleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonRoleOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionStatus.ObjectType, Allors.Meta.M.PositionStatus.OnDerive); 

		public PositionStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class PriorityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PriorityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Priority.ObjectType, Allors.Meta.M.Priority.OnDerive); 

		public PriorityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PriorityOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductCharacteristicOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCharacteristicOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCharacteristic.ObjectType, Allors.Meta.M.ProductCharacteristic.OnDerive); 

		public ProductCharacteristicOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCharacteristicOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductQualityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQualityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuality.ObjectType, Allors.Meta.M.ProductQuality.OnDerive); 

		public ProductQualityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQualityOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemType.ObjectType, Allors.Meta.M.PurchaseInvoiceItemType.OnDerive); 

		public PurchaseInvoiceItemTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceType.ObjectType, Allors.Meta.M.PurchaseInvoiceType.OnDerive); 

		public PurchaseInvoiceTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class QualificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QualificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Qualification.ObjectType, Allors.Meta.M.Qualification.OnDerive); 

		public QualificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QualificationOnDeriveMethodInvocation;
			}
		}
	}public partial class RateTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RateTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RateType.ObjectType, Allors.Meta.M.RateType.OnDerive); 

		public RateTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RateTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class RatingTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RatingTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RatingType.ObjectType, Allors.Meta.M.RatingType.OnDerive); 

		public RatingTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RatingTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesChannel.ObjectType, Allors.Meta.M.SalesChannel.OnDerive); 

		public SalesChannelOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemType.ObjectType, Allors.Meta.M.SalesInvoiceItemType.OnDerive); 

		public SalesInvoiceItemTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceType.ObjectType, Allors.Meta.M.SalesInvoiceType.OnDerive); 

		public SalesInvoiceTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class SalutationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalutationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Salutation.ObjectType, Allors.Meta.M.Salutation.OnDerive); 

		public SalutationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalutationOnDeriveMethodInvocation;
			}
		}
	}public partial class ServiceFeatureOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceFeatureOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceFeature.ObjectType, Allors.Meta.M.ServiceFeature.OnDerive); 

		public ServiceFeatureOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceFeatureOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentMethodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentMethodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentMethod.ObjectType, Allors.Meta.M.ShipmentMethod.OnDerive); 

		public ShipmentMethodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentMethodOnDeriveMethodInvocation;
			}
		}
	}public partial class SizeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SizeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Size.ObjectType, Allors.Meta.M.Size.OnDerive); 

		public SizeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SizeOnDeriveMethodInvocation;
			}
		}
	}public partial class SkillOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Skill.ObjectType, Allors.Meta.M.Skill.OnDerive); 

		public SkillOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillOnDeriveMethodInvocation;
			}
		}
	}public partial class SkillLevelOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillLevelOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SkillLevel.ObjectType, Allors.Meta.M.SkillLevel.OnDerive); 

		public SkillLevelOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillLevelOnDeriveMethodInvocation;
			}
		}
	}public partial class SkillRatingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillRatingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SkillRating.ObjectType, Allors.Meta.M.SkillRating.OnDerive); 

		public SkillRatingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillRatingOnDeriveMethodInvocation;
			}
		}
	}public partial class SoftwareFeatureOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SoftwareFeatureOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SoftwareFeature.ObjectType, Allors.Meta.M.SoftwareFeature.OnDerive); 

		public SoftwareFeatureOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SoftwareFeatureOnDeriveMethodInvocation;
			}
		}
	}public partial class RequirementTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementType.ObjectType, Allors.Meta.M.RequirementType.OnDerive); 

		public RequirementTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class TimeFrequencyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeFrequencyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeFrequency.ObjectType, Allors.Meta.M.TimeFrequency.OnDerive); 

		public TimeFrequencyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeFrequencyOnDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitOfMeasure.ObjectType, Allors.Meta.M.UnitOfMeasure.OnDerive); 

		public UnitOfMeasureOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureOnDeriveMethodInvocation;
			}
		}
	}public partial class VarianceReasonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VarianceReasonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VarianceReason.ObjectType, Allors.Meta.M.VarianceReason.OnDerive); 

		public VarianceReasonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VarianceReasonOnDeriveMethodInvocation;
			}
		}
	}public partial class VatCalculationMethodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatCalculationMethodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatCalculationMethod.ObjectType, Allors.Meta.M.VatCalculationMethod.OnDerive); 

		public VatCalculationMethodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatCalculationMethodOnDeriveMethodInvocation;
			}
		}
	}public partial class VatRatePurchaseKindOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRatePurchaseKindOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRatePurchaseKind.ObjectType, Allors.Meta.M.VatRatePurchaseKind.OnDerive); 

		public VatRatePurchaseKindOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRatePurchaseKindOnDeriveMethodInvocation;
			}
		}
	}public partial class VatRateUsageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateUsageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRateUsage.ObjectType, Allors.Meta.M.VatRateUsage.OnDerive); 

		public VatRateUsageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateUsageOnDeriveMethodInvocation;
			}
		}
	}public partial class VatRegimeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRegimeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRegime.ObjectType, Allors.Meta.M.VatRegime.OnDerive); 

		public VatRegimeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRegimeOnDeriveMethodInvocation;
			}
		}
	}public partial class VatTariffOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatTariffOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatTariff.ObjectType, Allors.Meta.M.VatTariff.OnDerive); 

		public VatTariffOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatTariffOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPurposeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPurposeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPurpose.ObjectType, Allors.Meta.M.WorkEffortPurpose.OnDerive); 

		public WorkEffortPurposeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPurposeOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeKindOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeKindOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortTypeKind.ObjectType, Allors.Meta.M.WorkEffortTypeKind.OnDerive); 

		public WorkEffortTypeKindOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeKindOnDeriveMethodInvocation;
			}
		}
	}public partial class IncoTermTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncoTermTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IncoTermType.ObjectType, Allors.Meta.M.IncoTermType.OnDerive); 

		public IncoTermTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncoTermTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceTermTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceTermType.ObjectType, Allors.Meta.M.InvoiceTermType.OnDerive); 

		public InvoiceTermTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetState.ObjectType, Allors.Meta.M.BudgetState.OnDerive); 

		public BudgetStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetStateOnDeriveMethodInvocation;
			}
		}
	}public partial class CaseStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CaseState.ObjectType, Allors.Meta.M.CaseState.OnDerive); 

		public CaseStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseStateOnDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CommunicationEventState.ObjectType, Allors.Meta.M.CommunicationEventState.OnDerive); 

		public CommunicationEventStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventStateOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturnState.ObjectType, Allors.Meta.M.CustomerReturnState.OnDerive); 

		public CustomerReturnStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnStateOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipmentState.ObjectType, Allors.Meta.M.CustomerShipmentState.OnDerive); 

		public CustomerShipmentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipmentState.ObjectType, Allors.Meta.M.DropShipmentState.OnDerive); 

		public DropShipmentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChangeObjectState.ObjectType, Allors.Meta.M.EngineeringChangeObjectState.OnDerive); 

		public EngineeringChangeObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItemState.ObjectType, Allors.Meta.M.NonSerialisedInventoryItemState.OnDerive); 

		public NonSerialisedInventoryItemStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemStateOnDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerializedInventoryItemObjectState.ObjectType, Allors.Meta.M.NonSerializedInventoryItemObjectState.OnDerive); 

		public NonSerializedInventoryItemObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderPaymentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderPaymentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderPaymentState.ObjectType, Allors.Meta.M.PurchaseOrderPaymentState.OnDerive); 

		public PurchaseOrderPaymentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderPaymentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderShipmentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderShipmentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderShipmentState.ObjectType, Allors.Meta.M.PurchaseOrderShipmentState.OnDerive); 

		public PurchaseOrderShipmentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderShipmentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemShipmentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemShipmentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemShipmentState.ObjectType, Allors.Meta.M.SalesOrderItemShipmentState.OnDerive); 

		public SalesOrderItemShipmentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemShipmentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemPaymentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemPaymentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemPaymentState.ObjectType, Allors.Meta.M.SalesOrderItemPaymentState.OnDerive); 

		public SalesOrderItemPaymentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemPaymentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderPaymentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderPaymentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderPaymentState.ObjectType, Allors.Meta.M.SalesOrderPaymentState.OnDerive); 

		public SalesOrderPaymentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderPaymentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderShipmentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderShipmentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderShipmentState.ObjectType, Allors.Meta.M.SalesOrderShipmentState.OnDerive); 

		public SalesOrderShipmentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderShipmentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationState.ObjectType, Allors.Meta.M.PartSpecificationState.OnDerive); 

		public PartSpecificationStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PickListStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListState.ObjectType, Allors.Meta.M.PickListState.OnDerive); 

		public PickListStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemState.ObjectType, Allors.Meta.M.PurchaseInvoiceItemState.OnDerive); 

		public PurchaseInvoiceItemStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceState.ObjectType, Allors.Meta.M.PurchaseInvoiceState.OnDerive); 

		public PurchaseInvoiceStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItemState.ObjectType, Allors.Meta.M.PurchaseOrderItemState.OnDerive); 

		public PurchaseOrderItemStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderState.ObjectType, Allors.Meta.M.PurchaseOrderState.OnDerive); 

		public PurchaseOrderStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturnState.ObjectType, Allors.Meta.M.PurchaseReturnState.OnDerive); 

		public PurchaseReturnStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnStateOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipmentState.ObjectType, Allors.Meta.M.PurchaseShipmentState.OnDerive); 

		public PurchaseShipmentStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentStateOnDeriveMethodInvocation;
			}
		}
	}public partial class QuoteStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteState.ObjectType, Allors.Meta.M.QuoteState.OnDerive); 

		public QuoteStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteStateOnDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItemState.ObjectType, Allors.Meta.M.QuoteItemState.OnDerive); 

		public QuoteItemStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemStateOnDeriveMethodInvocation;
			}
		}
	}public partial class RequirementStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementState.ObjectType, Allors.Meta.M.RequirementState.OnDerive); 

		public RequirementStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemState.ObjectType, Allors.Meta.M.SalesInvoiceItemState.OnDerive); 

		public SalesInvoiceItemStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceState.ObjectType, Allors.Meta.M.SalesInvoiceState.OnDerive); 

		public SalesInvoiceStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceStateOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItemState.ObjectType, Allors.Meta.M.RequestItemState.OnDerive); 

		public RequestItemStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemState.ObjectType, Allors.Meta.M.SalesOrderItemState.OnDerive); 

		public SalesOrderItemStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemStateOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestState.ObjectType, Allors.Meta.M.RequestState.OnDerive); 

		public RequestStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderState.ObjectType, Allors.Meta.M.SalesOrderState.OnDerive); 

		public SalesOrderStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItemState.ObjectType, Allors.Meta.M.SerialisedInventoryItemState.OnDerive); 

		public SerialisedInventoryItemStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemStateOnDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemObjectStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemObjectStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerializedInventoryItemObjectState.ObjectType, Allors.Meta.M.SerializedInventoryItemObjectState.OnDerive); 

		public SerializedInventoryItemObjectStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemObjectStateOnDeriveMethodInvocation;
			}
		}
	}public partial class TransferStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TransferState.ObjectType, Allors.Meta.M.TransferState.OnDerive); 

		public TransferStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferStateOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortStateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortStateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortState.ObjectType, Allors.Meta.M.WorkEffortState.OnDerive); 

		public WorkEffortStateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortStateOnDeriveMethodInvocation;
			}
		}
	}public partial class ClientAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClientAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ClientAgreement.ObjectType, Allors.Meta.M.ClientAgreement.OnDerive); 

		public ClientAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentAgreement.ObjectType, Allors.Meta.M.EmploymentAgreement.OnDerive); 

		public EmploymentAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseAgreement.ObjectType, Allors.Meta.M.PurchaseAgreement.OnDerive); 

		public PurchaseAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesAgreement.ObjectType, Allors.Meta.M.SalesAgreement.OnDerive); 

		public SalesAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubContractorAgreement.ObjectType, Allors.Meta.M.SubContractorAgreement.OnDerive); 

		public SubContractorAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class AccountingPeriodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriod.ObjectType, Allors.Meta.M.AccountingPeriod.OnDerive); 

		public AccountingPeriodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodOnDeriveMethodInvocation;
			}
		}
	}public partial class CapitalBudgetOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudget.ObjectType, Allors.Meta.M.CapitalBudget.OnDerive); 

		public CapitalBudgetOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetOnDeriveMethodInvocation;
			}
		}
	}public partial class OperatingBudgetOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudget.ObjectType, Allors.Meta.M.OperatingBudget.OnDerive); 

		public OperatingBudgetOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetOnDeriveMethodInvocation;
			}
		}
	}public partial class FacilityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FacilityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Facility.ObjectType, Allors.Meta.M.Facility.OnDerive); 

		public FacilityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FacilityOnDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnDerive); 

		public CountryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnDeriveMethodInvocation;
			}
		}
	}public partial class CityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.City.ObjectType, Allors.Meta.M.City.OnDerive); 

		public CityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CityOnDeriveMethodInvocation;
			}
		}
	}public partial class CountyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.County.ObjectType, Allors.Meta.M.County.OnDerive); 

		public CountyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountyOnDeriveMethodInvocation;
			}
		}
	}public partial class PostalCodeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalCodeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalCode.ObjectType, Allors.Meta.M.PostalCode.OnDerive); 

		public PostalCodeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalCodeOnDeriveMethodInvocation;
			}
		}
	}public partial class ProvinceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProvinceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Province.ObjectType, Allors.Meta.M.Province.OnDerive); 

		public ProvinceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProvinceOnDeriveMethodInvocation;
			}
		}
	}public partial class StateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.State.ObjectType, Allors.Meta.M.State.OnDerive); 

		public StateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StateOnDeriveMethodInvocation;
			}
		}
	}public partial class TerritoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TerritoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Territory.ObjectType, Allors.Meta.M.Territory.OnDerive); 

		public TerritoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TerritoryOnDeriveMethodInvocation;
			}
		}
	}public partial class RegionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RegionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Region.ObjectType, Allors.Meta.M.Region.OnDerive); 

		public RegionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RegionOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesTerritoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesTerritoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesTerritory.ObjectType, Allors.Meta.M.SalesTerritory.OnDerive); 

		public SalesTerritoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesTerritoryOnDeriveMethodInvocation;
			}
		}
	}public partial class ServiceTerritoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceTerritoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceTerritory.ObjectType, Allors.Meta.M.ServiceTerritory.OnDerive); 

		public ServiceTerritoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceTerritoryOnDeriveMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItem.ObjectType, Allors.Meta.M.NonSerialisedInventoryItem.OnDerive); 

		public NonSerialisedInventoryItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemOnDeriveMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItem.ObjectType, Allors.Meta.M.SerialisedInventoryItem.OnDerive); 

		public SerialisedInventoryItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemOnDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnDerive); 

		public CurrencyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnDeriveMethodInvocation;
			}
		}
	}public partial class FinishedGoodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinishedGoodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinishedGood.ObjectType, Allors.Meta.M.FinishedGood.OnDerive); 

		public FinishedGoodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinishedGoodOnDeriveMethodInvocation;
			}
		}
	}public partial class RawMaterialOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RawMaterialOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RawMaterial.ObjectType, Allors.Meta.M.RawMaterial.OnDerive); 

		public RawMaterialOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RawMaterialOnDeriveMethodInvocation;
			}
		}
	}public partial class SubAssemblyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAssemblyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubAssembly.ObjectType, Allors.Meta.M.SubAssembly.OnDerive); 

		public SubAssemblyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAssemblyOnDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnDerive); 

		public AutomatedAgentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Disbursement.ObjectType, Allors.Meta.M.Disbursement.OnDerive); 

		public DisbursementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementOnDeriveMethodInvocation;
			}
		}
	}public partial class PayCheckOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayCheckOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayCheck.ObjectType, Allors.Meta.M.PayCheck.OnDerive); 

		public PayCheckOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayCheckOnDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Receipt.ObjectType, Allors.Meta.M.Receipt.OnDerive); 

		public ReceiptOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptOnDeriveMethodInvocation;
			}
		}
	}public partial class CashOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CashOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Cash.ObjectType, Allors.Meta.M.Cash.OnDerive); 

		public CashOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CashOnDeriveMethodInvocation;
			}
		}
	}public partial class OwnBankAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnBankAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OwnBankAccount.ObjectType, Allors.Meta.M.OwnBankAccount.OnDerive); 

		public OwnBankAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnBankAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class OwnCreditCardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnCreditCardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OwnCreditCard.ObjectType, Allors.Meta.M.OwnCreditCard.OnDerive); 

		public OwnCreditCardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnCreditCardOnDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableBasedServiceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableBasedServiceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableBasedService.ObjectType, Allors.Meta.M.DeliverableBasedService.OnDerive); 

		public DeliverableBasedServiceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableBasedServiceOnDeriveMethodInvocation;
			}
		}
	}public partial class TimeAndMaterialsServiceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeAndMaterialsServiceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeAndMaterialsService.ObjectType, Allors.Meta.M.TimeAndMaterialsService.OnDerive); 

		public TimeAndMaterialsServiceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeAndMaterialsServiceOnDeriveMethodInvocation;
			}
		}
	}public partial class BrandOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BrandOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Brand.ObjectType, Allors.Meta.M.Brand.OnDerive); 

		public BrandOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BrandOnDeriveMethodInvocation;
			}
		}
	}public partial class DimensionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DimensionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dimension.ObjectType, Allors.Meta.M.Dimension.OnDerive); 

		public DimensionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DimensionOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturn.ObjectType, Allors.Meta.M.CustomerReturn.OnDerive); 

		public CustomerReturnOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipment.ObjectType, Allors.Meta.M.CustomerShipment.OnDerive); 

		public CustomerShipmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentOnDeriveMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountAdjustment.ObjectType, Allors.Meta.M.DiscountAdjustment.OnDerive); 

		public DiscountAdjustmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentOnDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipment.ObjectType, Allors.Meta.M.DropShipment.OnDerive); 

		public DropShipmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentOnDeriveMethodInvocation;
			}
		}
	}public partial class PickListOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickList.ObjectType, Allors.Meta.M.PickList.OnDerive); 

		public PickListOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductQuoteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuote.ObjectType, Allors.Meta.M.ProductQuote.OnDerive); 

		public ProductQuoteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteOnDeriveMethodInvocation;
			}
		}
	}public partial class ProposalOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Proposal.ObjectType, Allors.Meta.M.Proposal.OnDerive); 

		public ProposalOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoice.ObjectType, Allors.Meta.M.PurchaseInvoice.OnDerive); 

		public PurchaseInvoiceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrder.ObjectType, Allors.Meta.M.PurchaseOrder.OnDerive); 

		public PurchaseOrderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturn.ObjectType, Allors.Meta.M.PurchaseReturn.OnDerive); 

		public PurchaseReturnOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipment.ObjectType, Allors.Meta.M.PurchaseShipment.OnDerive); 

		public PurchaseShipmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestForInformationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForInformation.ObjectType, Allors.Meta.M.RequestForInformation.OnDerive); 

		public RequestForInformationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestForProposalOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForProposal.ObjectType, Allors.Meta.M.RequestForProposal.OnDerive); 

		public RequestForProposalOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestForQuoteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForQuote.ObjectType, Allors.Meta.M.RequestForQuote.OnDerive); 

		public RequestForQuoteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoice.ObjectType, Allors.Meta.M.SalesInvoice.OnDerive); 

		public SalesInvoiceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrder.ObjectType, Allors.Meta.M.SalesOrder.OnDerive); 

		public SalesOrderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderOnDeriveMethodInvocation;
			}
		}
	}public partial class StatementOfWorkOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWork.ObjectType, Allors.Meta.M.StatementOfWork.OnDerive); 

		public StatementOfWorkOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkOnDeriveMethodInvocation;
			}
		}
	}public partial class TransferOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Transfer.ObjectType, Allors.Meta.M.Transfer.OnDerive); 

		public TransferOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferOnDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnDerive); 

		public LocalisedTextOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnDerive); 

		public LanguageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnDerive); 

		public LocaleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnDeriveMethodInvocation;
			}
		}
	}public partial class NotificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnDerive); 

		public NotificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionDetailOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionDetailOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionDetail.ObjectType, Allors.Meta.M.AccountingTransactionDetail.OnDerive); 

		public AccountingTransactionDetailOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionDetailOnDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionNumberOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionNumberOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionNumber.ObjectType, Allors.Meta.M.AccountingTransactionNumber.OnDerive); 

		public AccountingTransactionNumberOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionNumberOnDeriveMethodInvocation;
			}
		}
	}public partial class AddendumOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AddendumOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Addendum.ObjectType, Allors.Meta.M.Addendum.OnDerive); 

		public AddendumOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AddendumOnDeriveMethodInvocation;
			}
		}
	}public partial class AmountDueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmountDueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AmountDue.ObjectType, Allors.Meta.M.AmountDue.OnDerive); 

		public AmountDueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmountDueOnDeriveMethodInvocation;
			}
		}
	}public partial class BankOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Bank.ObjectType, Allors.Meta.M.Bank.OnDerive); 

		public BankOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankOnDeriveMethodInvocation;
			}
		}
	}public partial class BenefitOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BenefitOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Benefit.ObjectType, Allors.Meta.M.Benefit.OnDerive); 

		public BenefitOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BenefitOnDeriveMethodInvocation;
			}
		}
	}public partial class BillingAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillingAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BillingAccount.ObjectType, Allors.Meta.M.BillingAccount.OnDerive); 

		public BillingAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillingAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetItem.ObjectType, Allors.Meta.M.BudgetItem.OnDerive); 

		public BudgetItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetItemOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetReviewOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetReviewOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetReview.ObjectType, Allors.Meta.M.BudgetReview.OnDerive); 

		public BudgetReviewOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetReviewOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetRevision.ObjectType, Allors.Meta.M.BudgetRevision.OnDerive); 

		public BudgetRevisionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionOnDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionImpactOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionImpactOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetRevisionImpact.ObjectType, Allors.Meta.M.BudgetRevisionImpact.OnDerive); 

		public BudgetRevisionImpactOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionImpactOnDeriveMethodInvocation;
			}
		}
	}public partial class CitizenshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CitizenshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Citizenship.ObjectType, Allors.Meta.M.Citizenship.OnDerive); 

		public CitizenshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CitizenshipOnDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardCompanyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardCompanyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditCardCompany.ObjectType, Allors.Meta.M.CreditCardCompany.OnDerive); 

		public CreditCardCompanyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardCompanyOnDeriveMethodInvocation;
			}
		}
	}public partial class DeductionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deduction.ObjectType, Allors.Meta.M.Deduction.OnDerive); 

		public DeductionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionOnDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deliverable.ObjectType, Allors.Meta.M.Deliverable.OnDerive); 

		public DeliverableOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOnDeriveMethodInvocation;
			}
		}
	}public partial class DeploymentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeploymentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deployment.ObjectType, Allors.Meta.M.Deployment.OnDerive); 

		public DeploymentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeploymentOnDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationMethodOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationMethodOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DepreciationMethod.ObjectType, Allors.Meta.M.DepreciationMethod.OnDerive); 

		public DepreciationMethodOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationMethodOnDeriveMethodInvocation;
			}
		}
	}public partial class DesiredProductFeatureOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DesiredProductFeatureOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DesiredProductFeature.ObjectType, Allors.Meta.M.DesiredProductFeature.OnDerive); 

		public DesiredProductFeatureOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DesiredProductFeatureOnDeriveMethodInvocation;
			}
		}
	}public partial class EmailTemplateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailTemplateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailTemplate.ObjectType, Allors.Meta.M.EmailTemplate.OnDerive); 

		public EmailTemplateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailTemplateOnDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplication.ObjectType, Allors.Meta.M.EmploymentApplication.OnDerive); 

		public EmploymentApplicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationOnDeriveMethodInvocation;
			}
		}
	}public partial class EngagementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Engagement.ObjectType, Allors.Meta.M.Engagement.OnDerive); 

		public EngagementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementOnDeriveMethodInvocation;
			}
		}
	}public partial class EngagementRateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementRateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngagementRate.ObjectType, Allors.Meta.M.EngagementRate.OnDerive); 

		public EngagementRateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementRateOnDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChangeStatus.ObjectType, Allors.Meta.M.EngineeringChangeStatus.OnDerive); 

		public EngineeringChangeStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountGroupOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountGroupOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccountGroup.ObjectType, Allors.Meta.M.GeneralLedgerAccountGroup.OnDerive); 

		public GeneralLedgerAccountGroupOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountGroupOnDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccountType.ObjectType, Allors.Meta.M.GeneralLedgerAccountType.OnDerive); 

		public GeneralLedgerAccountTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class GlBudgetAllocationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GlBudgetAllocationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GlBudgetAllocation.ObjectType, Allors.Meta.M.GlBudgetAllocation.OnDerive); 

		public GlBudgetAllocationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GlBudgetAllocationOnDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemVarianceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemVarianceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InventoryItemVariance.ObjectType, Allors.Meta.M.InventoryItemVariance.OnDerive); 

		public InventoryItemVarianceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemVarianceOnDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceVatRateItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceVatRateItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceVatRateItem.ObjectType, Allors.Meta.M.InvoiceVatRateItem.OnDerive); 

		public InvoiceVatRateItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceVatRateItemOnDeriveMethodInvocation;
			}
		}
	}public partial class JournalOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Journal.ObjectType, Allors.Meta.M.Journal.OnDerive); 

		public JournalOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalOnDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntry.ObjectType, Allors.Meta.M.JournalEntry.OnDerive); 

		public JournalEntryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryOnDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryDetailOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryDetailOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntryDetail.ObjectType, Allors.Meta.M.JournalEntryDetail.OnDerive); 

		public JournalEntryDetailOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryDetailOnDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryNumberOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryNumberOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntryNumber.ObjectType, Allors.Meta.M.JournalEntryNumber.OnDerive); 

		public JournalEntryNumberOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryNumberOnDeriveMethodInvocation;
			}
		}
	}public partial class LegalFormOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalFormOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LegalForm.ObjectType, Allors.Meta.M.LegalForm.OnDerive); 

		public LegalFormOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalFormOnDeriveMethodInvocation;
			}
		}
	}public partial class LotOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LotOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Lot.ObjectType, Allors.Meta.M.Lot.OnDerive); 

		public LotOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LotOnDeriveMethodInvocation;
			}
		}
	}public partial class NeededSkillOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NeededSkillOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NeededSkill.ObjectType, Allors.Meta.M.NeededSkill.OnDerive); 

		public NeededSkillOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NeededSkillOnDeriveMethodInvocation;
			}
		}
	}public partial class NewsItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NewsItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NewsItem.ObjectType, Allors.Meta.M.NewsItem.OnDerive); 

		public NewsItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NewsItemOnDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerializedInventoryItemStatus.ObjectType, Allors.Meta.M.NonSerializedInventoryItemStatus.OnDerive); 

		public NonSerializedInventoryItemStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderQuantityBreakOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderQuantityBreakOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderQuantityBreak.ObjectType, Allors.Meta.M.OrderQuantityBreak.OnDerive); 

		public OrderQuantityBreakOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderQuantityBreakOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderRequirementCommitmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderRequirementCommitmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderRequirementCommitment.ObjectType, Allors.Meta.M.OrderRequirementCommitment.OnDerive); 

		public OrderRequirementCommitmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderRequirementCommitmentOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderTerm.ObjectType, Allors.Meta.M.OrderTerm.OnDerive); 

		public OrderTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderTermOnDeriveMethodInvocation;
			}
		}
	}public partial class OrderValueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderValueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderValue.ObjectType, Allors.Meta.M.OrderValue.OnDerive); 

		public OrderValueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderValueOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationGlAccount.ObjectType, Allors.Meta.M.OrganisationGlAccount.OnDerive); 

		public OrganisationGlAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountBalanceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountBalanceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationGlAccountBalance.ObjectType, Allors.Meta.M.OrganisationGlAccountBalance.OnDerive); 

		public OrganisationGlAccountBalanceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountBalanceOnDeriveMethodInvocation;
			}
		}
	}public partial class PackageQuantityBreakOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageQuantityBreakOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackageQuantityBreak.ObjectType, Allors.Meta.M.PackageQuantityBreak.OnDerive); 

		public PackageQuantityBreakOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageQuantityBreakOnDeriveMethodInvocation;
			}
		}
	}public partial class PackagingContentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingContentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackagingContent.ObjectType, Allors.Meta.M.PackagingContent.OnDerive); 

		public PackagingContentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingContentOnDeriveMethodInvocation;
			}
		}
	}public partial class PartBillOfMaterialSubstituteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartBillOfMaterialSubstituteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartBillOfMaterialSubstitute.ObjectType, Allors.Meta.M.PartBillOfMaterialSubstitute.OnDerive); 

		public PartBillOfMaterialSubstituteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartBillOfMaterialSubstituteOnDeriveMethodInvocation;
			}
		}
	}public partial class PartRevisionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartRevisionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartRevision.ObjectType, Allors.Meta.M.PartRevision.OnDerive); 

		public PartRevisionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartRevisionOnDeriveMethodInvocation;
			}
		}
	}public partial class PartSubstituteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSubstituteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSubstitute.ObjectType, Allors.Meta.M.PartSubstitute.OnDerive); 

		public PartSubstituteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSubstituteOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyBenefitOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyBenefitOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyBenefit.ObjectType, Allors.Meta.M.PartyBenefit.OnDerive); 

		public PartyBenefitOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyBenefitOnDeriveMethodInvocation;
			}
		}
	}public partial class PartyFixedAssetAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyFixedAssetAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyFixedAssetAssignment.ObjectType, Allors.Meta.M.PartyFixedAssetAssignment.OnDerive); 

		public PartyFixedAssetAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyFixedAssetAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class PartySkillOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartySkillOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartySkill.ObjectType, Allors.Meta.M.PartySkill.OnDerive); 

		public PartySkillOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartySkillOnDeriveMethodInvocation;
			}
		}
	}public partial class PassportOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PassportOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Passport.ObjectType, Allors.Meta.M.Passport.OnDerive); 

		public PassportOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PassportOnDeriveMethodInvocation;
			}
		}
	}public partial class PayGradeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayGradeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayGrade.ObjectType, Allors.Meta.M.PayGrade.OnDerive); 

		public PayGradeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayGradeOnDeriveMethodInvocation;
			}
		}
	}public partial class PayHistoryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayHistoryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayHistory.ObjectType, Allors.Meta.M.PayHistory.OnDerive); 

		public PayHistoryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayHistoryOnDeriveMethodInvocation;
			}
		}
	}public partial class PaymentApplicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentApplicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentApplication.ObjectType, Allors.Meta.M.PaymentApplication.OnDerive); 

		public PaymentApplicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentApplicationOnDeriveMethodInvocation;
			}
		}
	}public partial class PaymentBudgetAllocationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentBudgetAllocationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentBudgetAllocation.ObjectType, Allors.Meta.M.PaymentBudgetAllocation.OnDerive); 

		public PaymentBudgetAllocationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentBudgetAllocationOnDeriveMethodInvocation;
			}
		}
	}public partial class PayrollPreferenceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayrollPreferenceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayrollPreference.ObjectType, Allors.Meta.M.PayrollPreference.OnDerive); 

		public PayrollPreferenceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayrollPreferenceOnDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceNoteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceNoteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceNote.ObjectType, Allors.Meta.M.PerformanceNote.OnDerive); 

		public PerformanceNoteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceNoteOnDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReview.ObjectType, Allors.Meta.M.PerformanceReview.OnDerive); 

		public PerformanceReviewOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewOnDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReviewItem.ObjectType, Allors.Meta.M.PerformanceReviewItem.OnDerive); 

		public PerformanceReviewItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonTrainingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonTrainingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonTraining.ObjectType, Allors.Meta.M.PersonTraining.OnDerive); 

		public PersonTrainingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonTrainingOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Position.ObjectType, Allors.Meta.M.Position.OnDerive); 

		public PositionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionFulfillmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionFulfillmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionFulfillment.ObjectType, Allors.Meta.M.PositionFulfillment.OnDerive); 

		public PositionFulfillmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionFulfillmentOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionReportingStructureOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionReportingStructureOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionReportingStructure.ObjectType, Allors.Meta.M.PositionReportingStructure.OnDerive); 

		public PositionReportingStructureOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionReportingStructureOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionResponsibilityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionResponsibilityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionResponsibility.ObjectType, Allors.Meta.M.PositionResponsibility.OnDerive); 

		public PositionResponsibilityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionResponsibilityOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionType.ObjectType, Allors.Meta.M.PositionType.OnDerive); 

		public PositionTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeRateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeRateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionTypeRate.ObjectType, Allors.Meta.M.PositionTypeRate.OnDerive); 

		public PositionTypeRateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeRateOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductDeliverySkillRequirementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDeliverySkillRequirementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductDeliverySkillRequirement.ObjectType, Allors.Meta.M.ProductDeliverySkillRequirement.OnDerive); 

		public ProductDeliverySkillRequirementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDeliverySkillRequirementOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductFeatureApplicabilityRelationshipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductFeatureApplicabilityRelationshipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductFeatureApplicabilityRelationship.ObjectType, Allors.Meta.M.ProductFeatureApplicabilityRelationship.OnDerive); 

		public ProductFeatureApplicabilityRelationshipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductFeatureApplicabilityRelationshipOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductPurchasePriceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductPurchasePriceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductPurchasePrice.ObjectType, Allors.Meta.M.ProductPurchasePrice.OnDerive); 

		public ProductPurchasePriceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductPurchasePriceOnDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalAssignment.ObjectType, Allors.Meta.M.ProfessionalAssignment.OnDerive); 

		public ProfessionalAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class QuoteTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteTerm.ObjectType, Allors.Meta.M.QuoteTerm.OnDerive); 

		public QuoteTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteTermOnDeriveMethodInvocation;
			}
		}
	}public partial class RequirementBudgetAllocationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementBudgetAllocationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementBudgetAllocation.ObjectType, Allors.Meta.M.RequirementBudgetAllocation.OnDerive); 

		public RequirementBudgetAllocationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementBudgetAllocationOnDeriveMethodInvocation;
			}
		}
	}public partial class RequirementCommunicationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementCommunicationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementCommunication.ObjectType, Allors.Meta.M.RequirementCommunication.OnDerive); 

		public RequirementCommunicationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementCommunicationOnDeriveMethodInvocation;
			}
		}
	}public partial class RespondingPartyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RespondingPartyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RespondingParty.ObjectType, Allors.Meta.M.RespondingParty.OnDerive); 

		public RespondingPartyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RespondingPartyOnDeriveMethodInvocation;
			}
		}
	}public partial class ResponsibilityOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResponsibilityOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Responsibility.ObjectType, Allors.Meta.M.Responsibility.OnDerive); 

		public ResponsibilityOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResponsibilityOnDeriveMethodInvocation;
			}
		}
	}public partial class ResumeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResumeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Resume.ObjectType, Allors.Meta.M.Resume.OnDerive); 

		public ResumeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResumeOnDeriveMethodInvocation;
			}
		}
	}public partial class RevenueQuantityBreakOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueQuantityBreakOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RevenueQuantityBreak.ObjectType, Allors.Meta.M.RevenueQuantityBreak.OnDerive); 

		public RevenueQuantityBreakOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueQuantityBreakOnDeriveMethodInvocation;
			}
		}
	}public partial class RevenueValueBreakOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueValueBreakOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RevenueValueBreak.ObjectType, Allors.Meta.M.RevenueValueBreak.OnDerive); 

		public RevenueValueBreakOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueValueBreakOnDeriveMethodInvocation;
			}
		}
	}public partial class SalaryStepOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalaryStepOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalaryStep.ObjectType, Allors.Meta.M.SalaryStep.OnDerive); 

		public SalaryStepOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalaryStepOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepCommissionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepCommissionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepCommission.ObjectType, Allors.Meta.M.SalesRepCommission.OnDerive); 

		public SalesRepCommissionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepCommissionOnDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemStatusOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemStatusOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerializedInventoryItemStatus.ObjectType, Allors.Meta.M.SerializedInventoryItemStatus.OnDerive); 

		public SerializedInventoryItemStatusOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemStatusOnDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryHeaderOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryHeaderOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceEntryHeader.ObjectType, Allors.Meta.M.ServiceEntryHeader.OnDerive); 

		public ServiceEntryHeaderOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryHeaderOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentReceiptOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentReceiptOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentReceipt.ObjectType, Allors.Meta.M.ShipmentReceipt.OnDerive); 

		public ShipmentReceiptOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentReceiptOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentRouteSegmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentRouteSegmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentRouteSegment.ObjectType, Allors.Meta.M.ShipmentRouteSegment.OnDerive); 

		public ShipmentRouteSegmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentRouteSegmentOnDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentValueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentValueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentValue.ObjectType, Allors.Meta.M.ShipmentValue.OnDerive); 

		public ShipmentValueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentValueOnDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingComponentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingComponentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShippingAndHandlingComponent.ObjectType, Allors.Meta.M.ShippingAndHandlingComponent.OnDerive); 

		public ShippingAndHandlingComponentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingComponentOnDeriveMethodInvocation;
			}
		}
	}public partial class SupplierOfferingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierOfferingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SupplierOffering.ObjectType, Allors.Meta.M.SupplierOffering.OnDerive); 

		public SupplierOfferingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierOfferingOnDeriveMethodInvocation;
			}
		}
	}public partial class TrainingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TrainingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Training.ObjectType, Allors.Meta.M.Training.OnDerive); 

		public TrainingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TrainingOnDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureConversionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureConversionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitOfMeasureConversion.ObjectType, Allors.Meta.M.UnitOfMeasureConversion.OnDerive); 

		public UnitOfMeasureConversionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureConversionOnDeriveMethodInvocation;
			}
		}
	}public partial class VatFormOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatFormOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatForm.ObjectType, Allors.Meta.M.VatForm.OnDerive); 

		public VatFormOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatFormOnDeriveMethodInvocation;
			}
		}
	}public partial class VatRateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRate.ObjectType, Allors.Meta.M.VatRate.OnDerive); 

		public VatRateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateOnDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatReturnBox.ObjectType, Allors.Meta.M.VatReturnBox.OnDerive); 

		public VatReturnBoxOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxOnDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatReturnBoxType.ObjectType, Allors.Meta.M.VatReturnBoxType.OnDerive); 

		public VatReturnBoxTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentRateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentRateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortAssignmentRate.ObjectType, Allors.Meta.M.WorkEffortAssignmentRate.OnDerive); 

		public WorkEffortAssignmentRateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentRateOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortFixedAssetAssignment.ObjectType, Allors.Meta.M.WorkEffortFixedAssetAssignment.OnDerive); 

		public WorkEffortFixedAssetAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetStandardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetStandardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortFixedAssetStandard.ObjectType, Allors.Meta.M.WorkEffortFixedAssetStandard.OnDerive); 

		public WorkEffortFixedAssetStandardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetStandardOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortGoodStandardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortGoodStandardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortGoodStandard.ObjectType, Allors.Meta.M.WorkEffortGoodStandard.OnDerive); 

		public WorkEffortGoodStandardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortGoodStandardOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortInventoryAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortInventoryAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortInventoryAssignment.ObjectType, Allors.Meta.M.WorkEffortInventoryAssignment.OnDerive); 

		public WorkEffortInventoryAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortInventoryAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartStandardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartStandardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPartStandard.ObjectType, Allors.Meta.M.WorkEffortPartStandard.OnDerive); 

		public WorkEffortPartStandardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartStandardOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartyAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartyAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPartyAssignment.ObjectType, Allors.Meta.M.WorkEffortPartyAssignment.OnDerive); 

		public WorkEffortPartyAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartyAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortSkillStandardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortSkillStandardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortSkillStandard.ObjectType, Allors.Meta.M.WorkEffortSkillStandard.OnDerive); 

		public WorkEffortSkillStandardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortSkillStandardOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortType.ObjectType, Allors.Meta.M.WorkEffortType.OnDerive); 

		public WorkEffortTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class CaseVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CaseVersion.ObjectType, Allors.Meta.M.CaseVersion.OnDerive); 

		public CaseVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationVersion.ObjectType, Allors.Meta.M.PartSpecificationVersion.OnDerive); 

		public PartSpecificationVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class PickListVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListVersion.ObjectType, Allors.Meta.M.PickListVersion.OnDerive); 

		public PickListVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItemVersion.ObjectType, Allors.Meta.M.QuoteItemVersion.OnDerive); 

		public QuoteItemVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItemVersion.ObjectType, Allors.Meta.M.RequestItemVersion.OnDerive); 

		public RequestItemVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class RequirementVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementVersion.ObjectType, Allors.Meta.M.RequirementVersion.OnDerive); 

		public RequirementVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class AccountingPeriodVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriodVersion.ObjectType, Allors.Meta.M.AccountingPeriodVersion.OnDerive); 

		public AccountingPeriodVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class CapitalBudgetVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudgetVersion.ObjectType, Allors.Meta.M.CapitalBudgetVersion.OnDerive); 

		public CapitalBudgetVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class OperatingBudgetVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudgetVersion.ObjectType, Allors.Meta.M.OperatingBudgetVersion.OnDerive); 

		public OperatingBudgetVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class EmailCommunicationVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailCommunicationVersion.ObjectType, Allors.Meta.M.EmailCommunicationVersion.OnDerive); 

		public EmailCommunicationVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaceToFaceCommunicationVersion.ObjectType, Allors.Meta.M.FaceToFaceCommunicationVersion.OnDerive); 

		public FaceToFaceCommunicationVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class FaxCommunicationVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaxCommunicationVersion.ObjectType, Allors.Meta.M.FaxCommunicationVersion.OnDerive); 

		public FaxCommunicationVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LetterCorrespondenceVersion.ObjectType, Allors.Meta.M.LetterCorrespondenceVersion.OnDerive); 

		public LetterCorrespondenceVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PhoneCommunicationVersion.ObjectType, Allors.Meta.M.PhoneCommunicationVersion.OnDerive); 

		public PhoneCommunicationVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebSiteCommunicationVersion.ObjectType, Allors.Meta.M.WebSiteCommunicationVersion.OnDerive); 

		public WebSiteCommunicationVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItemVersion.ObjectType, Allors.Meta.M.NonSerialisedInventoryItemVersion.OnDerive); 

		public NonSerialisedInventoryItemVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItemVersion.ObjectType, Allors.Meta.M.SerialisedInventoryItemVersion.OnDerive); 

		public SerialisedInventoryItemVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceVersion.ObjectType, Allors.Meta.M.PurchaseInvoiceVersion.OnDerive); 

		public PurchaseInvoiceVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceVersion.ObjectType, Allors.Meta.M.SalesInvoiceVersion.OnDerive); 

		public SalesInvoiceVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountAdjustmentVersion.ObjectType, Allors.Meta.M.DiscountAdjustmentVersion.OnDerive); 

		public DiscountAdjustmentVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderVersion.ObjectType, Allors.Meta.M.PurchaseOrderVersion.OnDerive); 

		public PurchaseOrderVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderVersion.ObjectType, Allors.Meta.M.SalesOrderVersion.OnDerive); 

		public SalesOrderVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgentVersion.ObjectType, Allors.Meta.M.AutomatedAgentVersion.OnDerive); 

		public AutomatedAgentVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationVersion.ObjectType, Allors.Meta.M.OrganisationVersion.OnDerive); 

		public OrganisationVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonVersion.ObjectType, Allors.Meta.M.PersonVersion.OnDerive); 

		public PersonVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemVersion.ObjectType, Allors.Meta.M.PurchaseInvoiceItemVersion.OnDerive); 

		public PurchaseInvoiceItemVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemVersion.ObjectType, Allors.Meta.M.SalesInvoiceItemVersion.OnDerive); 

		public SalesInvoiceItemVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItemVersion.ObjectType, Allors.Meta.M.PurchaseOrderItemVersion.OnDerive); 

		public PurchaseOrderItemVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemVersion.ObjectType, Allors.Meta.M.SalesOrderItemVersion.OnDerive); 

		public SalesOrderItemVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductQuoteVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuoteVersion.ObjectType, Allors.Meta.M.ProductQuoteVersion.OnDerive); 

		public ProductQuoteVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class ProposalVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProposalVersion.ObjectType, Allors.Meta.M.ProposalVersion.OnDerive); 

		public ProposalVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class StatementOfWorkVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWorkVersion.ObjectType, Allors.Meta.M.StatementOfWorkVersion.OnDerive); 

		public StatementOfWorkVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestForInformationVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForInformationVersion.ObjectType, Allors.Meta.M.RequestForInformationVersion.OnDerive); 

		public RequestForInformationVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestForProposalVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForProposalVersion.ObjectType, Allors.Meta.M.RequestForProposalVersion.OnDerive); 

		public RequestForProposalVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class RequestForQuoteVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForQuoteVersion.ObjectType, Allors.Meta.M.RequestForQuoteVersion.OnDerive); 

		public RequestForQuoteVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturnVersion.ObjectType, Allors.Meta.M.CustomerReturnVersion.OnDerive); 

		public CustomerReturnVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipmentVersion.ObjectType, Allors.Meta.M.CustomerShipmentVersion.OnDerive); 

		public CustomerShipmentVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipmentVersion.ObjectType, Allors.Meta.M.DropShipmentVersion.OnDerive); 

		public DropShipmentVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturnVersion.ObjectType, Allors.Meta.M.PurchaseReturnVersion.OnDerive); 

		public PurchaseReturnVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipmentVersion.ObjectType, Allors.Meta.M.PurchaseShipmentVersion.OnDerive); 

		public PurchaseShipmentVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class TransferVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TransferVersion.ObjectType, Allors.Meta.M.TransferVersion.OnDerive); 

		public TransferVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class WorkTaskVersionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkTaskVersionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkTaskVersion.ObjectType, Allors.Meta.M.WorkTaskVersion.OnDerive); 

		public WorkTaskVersionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkTaskVersionOnDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChange.ObjectType, Allors.Meta.M.EngineeringChange.OnDerive); 

		public EngineeringChangeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeOnDeriveMethodInvocation;
			}
		}
	}public partial class ItemVarianceAccountingTransactionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemVarianceAccountingTransactionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ItemVarianceAccountingTransaction.ObjectType, Allors.Meta.M.ItemVarianceAccountingTransaction.OnDerive); 

		public ItemVarianceAccountingTransactionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemVarianceAccountingTransactionOnDeriveMethodInvocation;
			}
		}
	}public partial class CreditLineOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditLineOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditLine.ObjectType, Allors.Meta.M.CreditLine.OnDerive); 

		public CreditLineOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditLineOnDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementAccountingTransactionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementAccountingTransactionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DisbursementAccountingTransaction.ObjectType, Allors.Meta.M.DisbursementAccountingTransaction.OnDerive); 

		public DisbursementAccountingTransactionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementAccountingTransactionOnDeriveMethodInvocation;
			}
		}
	}public partial class NoteOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NoteOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Note.ObjectType, Allors.Meta.M.Note.OnDerive); 

		public NoteOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NoteOnDeriveMethodInvocation;
			}
		}
	}public partial class ObligationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ObligationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Obligation.ObjectType, Allors.Meta.M.Obligation.OnDerive); 

		public ObligationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ObligationOnDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptAccountingTransactionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptAccountingTransactionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ReceiptAccountingTransaction.ObjectType, Allors.Meta.M.ReceiptAccountingTransaction.OnDerive); 

		public ReceiptAccountingTransactionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptAccountingTransactionOnDeriveMethodInvocation;
			}
		}
	}public partial class SalesAccountingTransactionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAccountingTransactionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesAccountingTransaction.ObjectType, Allors.Meta.M.SalesAccountingTransaction.OnDerive); 

		public SalesAccountingTransactionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAccountingTransactionOnDeriveMethodInvocation;
			}
		}
	}public partial class TaxDueOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDueOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaxDue.ObjectType, Allors.Meta.M.TaxDue.OnDerive); 

		public TaxDueOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDueOnDeriveMethodInvocation;
			}
		}
	}public partial class AmortizationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmortizationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Amortization.ObjectType, Allors.Meta.M.Amortization.OnDerive); 

		public AmortizationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmortizationOnDeriveMethodInvocation;
			}
		}
	}public partial class CapitalizationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalizationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Capitalization.ObjectType, Allors.Meta.M.Capitalization.OnDerive); 

		public CapitalizationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalizationOnDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Depreciation.ObjectType, Allors.Meta.M.Depreciation.OnDerive); 

		public DepreciationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationOnDeriveMethodInvocation;
			}
		}
	}public partial class AgreementExhibitOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementExhibitOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementExhibit.ObjectType, Allors.Meta.M.AgreementExhibit.OnDerive); 

		public AgreementExhibitOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementExhibitOnDeriveMethodInvocation;
			}
		}
	}public partial class AgreementPricingProgramOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementPricingProgramOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementPricingProgram.ObjectType, Allors.Meta.M.AgreementPricingProgram.OnDerive); 

		public AgreementPricingProgramOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementPricingProgramOnDeriveMethodInvocation;
			}
		}
	}public partial class AgreementSectionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementSectionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementSection.ObjectType, Allors.Meta.M.AgreementSection.OnDerive); 

		public AgreementSectionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementSectionOnDeriveMethodInvocation;
			}
		}
	}public partial class SubAgreementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAgreementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubAgreement.ObjectType, Allors.Meta.M.SubAgreement.OnDerive); 

		public SubAgreementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAgreementOnDeriveMethodInvocation;
			}
		}
	}public partial class FinancialTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinancialTerm.ObjectType, Allors.Meta.M.FinancialTerm.OnDerive); 

		public FinancialTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialTermOnDeriveMethodInvocation;
			}
		}
	}public partial class IncentiveOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncentiveOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Incentive.ObjectType, Allors.Meta.M.Incentive.OnDerive); 

		public IncentiveOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncentiveOnDeriveMethodInvocation;
			}
		}
	}public partial class IncoTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncoTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IncoTerm.ObjectType, Allors.Meta.M.IncoTerm.OnDerive); 

		public IncoTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncoTermOnDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceTerm.ObjectType, Allors.Meta.M.InvoiceTerm.OnDerive); 

		public InvoiceTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermOnDeriveMethodInvocation;
			}
		}
	}public partial class LegalTermOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalTermOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LegalTerm.ObjectType, Allors.Meta.M.LegalTerm.OnDerive); 

		public LegalTermOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalTermOnDeriveMethodInvocation;
			}
		}
	}public partial class ThresholdOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThresholdOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Threshold.ObjectType, Allors.Meta.M.Threshold.OnDerive); 

		public ThresholdOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThresholdOnDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnDerive); 

		public SingletonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnDeriveMethodInvocation;
			}
		}
	}public partial class ActivityUsageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityUsageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ActivityUsage.ObjectType, Allors.Meta.M.ActivityUsage.OnDerive); 

		public ActivityUsageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityUsageOnDeriveMethodInvocation;
			}
		}
	}public partial class TimePeriodUsageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimePeriodUsageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimePeriodUsage.ObjectType, Allors.Meta.M.TimePeriodUsage.OnDerive); 

		public TimePeriodUsageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimePeriodUsageOnDeriveMethodInvocation;
			}
		}
	}public partial class VolumeUsageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VolumeUsageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VolumeUsage.ObjectType, Allors.Meta.M.VolumeUsage.OnDerive); 

		public VolumeUsageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VolumeUsageOnDeriveMethodInvocation;
			}
		}
	}public partial class BillOfLadingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillOfLadingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BillOfLading.ObjectType, Allors.Meta.M.BillOfLading.OnDerive); 

		public BillOfLadingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillOfLadingOnDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringDocumentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringDocumentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringDocument.ObjectType, Allors.Meta.M.EngineeringDocument.OnDerive); 

		public EngineeringDocumentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringDocumentOnDeriveMethodInvocation;
			}
		}
	}public partial class ExportDocumentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExportDocumentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ExportDocument.ObjectType, Allors.Meta.M.ExportDocument.OnDerive); 

		public ExportDocumentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExportDocumentOnDeriveMethodInvocation;
			}
		}
	}public partial class HazardousMaterialsDocumentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HazardousMaterialsDocumentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.HazardousMaterialsDocument.ObjectType, Allors.Meta.M.HazardousMaterialsDocument.OnDerive); 

		public HazardousMaterialsDocumentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HazardousMaterialsDocumentOnDeriveMethodInvocation;
			}
		}
	}public partial class ManifestOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManifestOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Manifest.ObjectType, Allors.Meta.M.Manifest.OnDerive); 

		public ManifestOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManifestOnDeriveMethodInvocation;
			}
		}
	}public partial class MarketingMaterialOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingMaterialOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MarketingMaterial.ObjectType, Allors.Meta.M.MarketingMaterial.OnDerive); 

		public MarketingMaterialOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingMaterialOnDeriveMethodInvocation;
			}
		}
	}public partial class PackagingSlipOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingSlipOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackagingSlip.ObjectType, Allors.Meta.M.PackagingSlip.OnDerive); 

		public PackagingSlipOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingSlipOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductDrawingOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDrawingOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductDrawing.ObjectType, Allors.Meta.M.ProductDrawing.OnDerive); 

		public ProductDrawingOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDrawingOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductModelOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductModelOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductModel.ObjectType, Allors.Meta.M.ProductModel.OnDerive); 

		public ProductModelOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductModelOnDeriveMethodInvocation;
			}
		}
	}public partial class TaxDocumentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDocumentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaxDocument.ObjectType, Allors.Meta.M.TaxDocument.OnDerive); 

		public TaxDocumentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDocumentOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomEngagementItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomEngagementItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomEngagementItem.ObjectType, Allors.Meta.M.CustomEngagementItem.OnDerive); 

		public CustomEngagementItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomEngagementItemOnDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOrderItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOrderItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableOrderItem.ObjectType, Allors.Meta.M.DeliverableOrderItem.OnDerive); 

		public DeliverableOrderItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOrderItemOnDeriveMethodInvocation;
			}
		}
	}public partial class GoodOrderItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOrderItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GoodOrderItem.ObjectType, Allors.Meta.M.GoodOrderItem.OnDerive); 

		public GoodOrderItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOrderItemOnDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalPlacementOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalPlacementOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalPlacement.ObjectType, Allors.Meta.M.ProfessionalPlacement.OnDerive); 

		public ProfessionalPlacementOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalPlacementOnDeriveMethodInvocation;
			}
		}
	}public partial class StandardServiceOrderItemOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StandardServiceOrderItemOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StandardServiceOrderItem.ObjectType, Allors.Meta.M.StandardServiceOrderItem.OnDerive); 

		public StandardServiceOrderItemOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StandardServiceOrderItemOnDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedLaborCostOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedLaborCostOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedLaborCost.ObjectType, Allors.Meta.M.EstimatedLaborCost.OnDerive); 

		public EstimatedLaborCostOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedLaborCostOnDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedMaterialCostOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedMaterialCostOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedMaterialCost.ObjectType, Allors.Meta.M.EstimatedMaterialCost.OnDerive); 

		public EstimatedMaterialCostOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedMaterialCostOnDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedOtherCostOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedOtherCostOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedOtherCost.ObjectType, Allors.Meta.M.EstimatedOtherCost.OnDerive); 

		public EstimatedOtherCostOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedOtherCostOnDeriveMethodInvocation;
			}
		}
	}public partial class BankAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BankAccount.ObjectType, Allors.Meta.M.BankAccount.OnDerive); 

		public BankAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditCard.ObjectType, Allors.Meta.M.CreditCard.OnDerive); 

		public CreditCardOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardOnDeriveMethodInvocation;
			}
		}
	}public partial class InvestmentAccountOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvestmentAccountOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvestmentAccount.ObjectType, Allors.Meta.M.InvestmentAccount.OnDerive); 

		public InvestmentAccountOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvestmentAccountOnDeriveMethodInvocation;
			}
		}
	}public partial class AccountAdjustmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountAdjustmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountAdjustment.ObjectType, Allors.Meta.M.AccountAdjustment.OnDerive); 

		public AccountAdjustmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountAdjustmentOnDeriveMethodInvocation;
			}
		}
	}public partial class DepositOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepositOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deposit.ObjectType, Allors.Meta.M.Deposit.OnDerive); 

		public DepositOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepositOnDeriveMethodInvocation;
			}
		}
	}public partial class FinancialAccountAdjustmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialAccountAdjustmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinancialAccountAdjustment.ObjectType, Allors.Meta.M.FinancialAccountAdjustment.OnDerive); 

		public FinancialAccountAdjustmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialAccountAdjustmentOnDeriveMethodInvocation;
			}
		}
	}public partial class WithdrawalOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WithdrawalOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Withdrawal.ObjectType, Allors.Meta.M.Withdrawal.OnDerive); 

		public WithdrawalOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WithdrawalOnDeriveMethodInvocation;
			}
		}
	}public partial class EquipmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EquipmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Equipment.ObjectType, Allors.Meta.M.Equipment.OnDerive); 

		public EquipmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EquipmentOnDeriveMethodInvocation;
			}
		}
	}public partial class PropertyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PropertyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Property.ObjectType, Allors.Meta.M.Property.OnDerive); 

		public PropertyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PropertyOnDeriveMethodInvocation;
			}
		}
	}public partial class VehicleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VehicleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Vehicle.ObjectType, Allors.Meta.M.Vehicle.OnDerive); 

		public VehicleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VehicleOnDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingConfigurationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingConfigurationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturingConfiguration.ObjectType, Allors.Meta.M.ManufacturingConfiguration.OnDerive); 

		public ManufacturingConfigurationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingConfigurationOnDeriveMethodInvocation;
			}
		}
	}public partial class ServiceConfigurationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceConfigurationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceConfiguration.ObjectType, Allors.Meta.M.ServiceConfiguration.OnDerive); 

		public ServiceConfigurationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceConfigurationOnDeriveMethodInvocation;
			}
		}
	}public partial class FeeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FeeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Fee.ObjectType, Allors.Meta.M.Fee.OnDerive); 

		public FeeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FeeOnDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingChargeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingChargeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShippingAndHandlingCharge.ObjectType, Allors.Meta.M.ShippingAndHandlingCharge.OnDerive); 

		public ShippingAndHandlingChargeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingChargeOnDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeAdjustmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeAdjustmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SurchargeAdjustment.ObjectType, Allors.Meta.M.SurchargeAdjustment.OnDerive); 

		public SurchargeAdjustmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeAdjustmentOnDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringBomOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringBomOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringBom.ObjectType, Allors.Meta.M.EngineeringBom.OnDerive); 

		public EngineeringBomOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringBomOnDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingBomOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingBomOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturingBom.ObjectType, Allors.Meta.M.ManufacturingBom.OnDerive); 

		public ManufacturingBomOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingBomOnDeriveMethodInvocation;
			}
		}
	}public partial class CustomOrganisationClassificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomOrganisationClassificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomOrganisationClassification.ObjectType, Allors.Meta.M.CustomOrganisationClassification.OnDerive); 

		public CustomOrganisationClassificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomOrganisationClassificationOnDeriveMethodInvocation;
			}
		}
	}public partial class IndustryClassificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IndustryClassificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IndustryClassification.ObjectType, Allors.Meta.M.IndustryClassification.OnDerive); 

		public IndustryClassificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IndustryClassificationOnDeriveMethodInvocation;
			}
		}
	}public partial class DiscountComponentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountComponentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountComponent.ObjectType, Allors.Meta.M.DiscountComponent.OnDerive); 

		public DiscountComponentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountComponentOnDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturerSuggestedRetailPriceOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturerSuggestedRetailPriceOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturerSuggestedRetailPrice.ObjectType, Allors.Meta.M.ManufacturerSuggestedRetailPrice.OnDerive); 

		public ManufacturerSuggestedRetailPriceOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturerSuggestedRetailPriceOnDeriveMethodInvocation;
			}
		}
	}public partial class OneTimeChargeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneTimeChargeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OneTimeCharge.ObjectType, Allors.Meta.M.OneTimeCharge.OnDerive); 

		public OneTimeChargeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneTimeChargeOnDeriveMethodInvocation;
			}
		}
	}public partial class RecurringChargeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RecurringChargeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RecurringCharge.ObjectType, Allors.Meta.M.RecurringCharge.OnDerive); 

		public RecurringChargeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RecurringChargeOnDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeComponentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeComponentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SurchargeComponent.ObjectType, Allors.Meta.M.SurchargeComponent.OnDerive); 

		public SurchargeComponentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeComponentOnDeriveMethodInvocation;
			}
		}
	}public partial class UtilizationChargeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UtilizationChargeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UtilizationCharge.ObjectType, Allors.Meta.M.UtilizationCharge.OnDerive); 

		public UtilizationChargeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UtilizationChargeOnDeriveMethodInvocation;
			}
		}
	}public partial class MarketingPackageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingPackageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MarketingPackage.ObjectType, Allors.Meta.M.MarketingPackage.OnDerive); 

		public MarketingPackageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingPackageOnDeriveMethodInvocation;
			}
		}
	}public partial class ProductConfigurationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductConfigurationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductConfiguration.ObjectType, Allors.Meta.M.ProductConfiguration.OnDerive); 

		public ProductConfigurationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductConfigurationOnDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTurnoverOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTurnoverOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableTurnover.ObjectType, Allors.Meta.M.DeliverableTurnover.OnDerive); 

		public DeliverableTurnoverOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTurnoverOnDeriveMethodInvocation;
			}
		}
	}public partial class ExpenseEntryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExpenseEntryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ExpenseEntry.ObjectType, Allors.Meta.M.ExpenseEntry.OnDerive); 

		public ExpenseEntryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExpenseEntryOnDeriveMethodInvocation;
			}
		}
	}public partial class MaterialsUsageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaterialsUsageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MaterialsUsage.ObjectType, Allors.Meta.M.MaterialsUsage.OnDerive); 

		public MaterialsUsageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaterialsUsageOnDeriveMethodInvocation;
			}
		}
	}public partial class TimeEntryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeEntryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeEntry.ObjectType, Allors.Meta.M.TimeEntry.OnDerive); 

		public TimeEntryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeEntryOnDeriveMethodInvocation;
			}
		}
	}
}