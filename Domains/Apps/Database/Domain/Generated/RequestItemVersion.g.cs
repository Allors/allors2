// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class RequestItemVersion : Allors.IObject , Version
	{
		private readonly IStrategy strategy;

		public RequestItemVersion(Allors.IStrategy strategy) 
		{
			this.strategy = strategy;
		}

		public Allors.Meta.MetaRequestItemVersion Meta
		{
			get
			{
				return Allors.Meta.MetaRequestItemVersion.Instance;
			}
		}

		public long Id
		{
			get { return this.strategy.ObjectId; }
		}

		public IStrategy Strategy
        {
            [System.Diagnostics.DebuggerStepThrough]
            get { return this.strategy; }
        }

		public static RequestItemVersion Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (RequestItemVersion) allorsSession.Instantiate(allorsObjectId);		
		}

		public override bool Equals(object obj)
        {
            var typedObj = obj as IObject;
            return typedObj != null &&
                   typedObj.Strategy.ObjectId.Equals(this.Strategy.ObjectId) &&
                   typedObj.Strategy.Session.Database.Id.Equals(this.Strategy.Session.Database.Id);
        }

		public override int GetHashCode()
        {
            return this.Strategy.ObjectId.GetHashCode();
        }



		virtual public RequestItemState RequestItemState
		{ 
			get
			{
				return (RequestItemState) Strategy.GetCompositeRole(Meta.RequestItemState.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.RequestItemState.RelationType, value);
			}
		}

		virtual public bool ExistRequestItemState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.RequestItemState.RelationType);
			}
		}

		virtual public void RemoveRequestItemState()
		{
			Strategy.RemoveCompositeRole(Meta.RequestItemState.RelationType);
		}


		virtual public global::System.String InternalComment 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.InternalComment.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.InternalComment.RelationType, value);
			}
		}

		virtual public bool ExistInternalComment{
			get
			{
				return Strategy.ExistUnitRole(Meta.InternalComment.RelationType);
			}
		}

		virtual public void RemoveInternalComment()
		{
			Strategy.RemoveUnitRole(Meta.InternalComment.RelationType);
		}


		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Description.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Description.RelationType, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.Description.RelationType);
			}
		}

		virtual public void RemoveDescription()
		{
			Strategy.RemoveUnitRole(Meta.Description.RelationType);
		}


		virtual public global::System.Int32? Quantity 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.Quantity.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Quantity.RelationType, value);
			}
		}

		virtual public bool ExistQuantity{
			get
			{
				return Strategy.ExistUnitRole(Meta.Quantity.RelationType);
			}
		}

		virtual public void RemoveQuantity()
		{
			Strategy.RemoveUnitRole(Meta.Quantity.RelationType);
		}


		virtual public UnitOfMeasure UnitOfMeasure
		{ 
			get
			{
				return (UnitOfMeasure) Strategy.GetCompositeRole(Meta.UnitOfMeasure.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.UnitOfMeasure.RelationType, value);
			}
		}

		virtual public bool ExistUnitOfMeasure
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.UnitOfMeasure.RelationType);
			}
		}

		virtual public void RemoveUnitOfMeasure()
		{
			Strategy.RemoveCompositeRole(Meta.UnitOfMeasure.RelationType);
		}


		virtual public global::Allors.Extent<Requirement> Requirements
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Requirements.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Requirements.RelationType, value);
			}
		}

		virtual public void AddRequirement (Requirement value)
		{
			Strategy.AddCompositeRole(Meta.Requirements.RelationType, value);
		}

		virtual public void RemoveRequirement (Requirement value)
		{
			Strategy.RemoveCompositeRole(Meta.Requirements.RelationType, value);
		}

		virtual public bool ExistRequirements
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Requirements.RelationType);
			}
		}

		virtual public void RemoveRequirements()
		{
			Strategy.RemoveCompositeRoles(Meta.Requirements.RelationType);
		}


		virtual public Deliverable Deliverable
		{ 
			get
			{
				return (Deliverable) Strategy.GetCompositeRole(Meta.Deliverable.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Deliverable.RelationType, value);
			}
		}

		virtual public bool ExistDeliverable
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Deliverable.RelationType);
			}
		}

		virtual public void RemoveDeliverable()
		{
			Strategy.RemoveCompositeRole(Meta.Deliverable.RelationType);
		}


		virtual public ProductFeature ProductFeature
		{ 
			get
			{
				return (ProductFeature) Strategy.GetCompositeRole(Meta.ProductFeature.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ProductFeature.RelationType, value);
			}
		}

		virtual public bool ExistProductFeature
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ProductFeature.RelationType);
			}
		}

		virtual public void RemoveProductFeature()
		{
			Strategy.RemoveCompositeRole(Meta.ProductFeature.RelationType);
		}


		virtual public NeededSkill NeededSkill
		{ 
			get
			{
				return (NeededSkill) Strategy.GetCompositeRole(Meta.NeededSkill.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.NeededSkill.RelationType, value);
			}
		}

		virtual public bool ExistNeededSkill
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.NeededSkill.RelationType);
			}
		}

		virtual public void RemoveNeededSkill()
		{
			Strategy.RemoveCompositeRole(Meta.NeededSkill.RelationType);
		}


		virtual public Product Product
		{ 
			get
			{
				return (Product) Strategy.GetCompositeRole(Meta.Product.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Product.RelationType, value);
			}
		}

		virtual public bool ExistProduct
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Product.RelationType);
			}
		}

		virtual public void RemoveProduct()
		{
			Strategy.RemoveCompositeRole(Meta.Product.RelationType);
		}


		virtual public global::System.Decimal? MaximumAllowedPrice 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.MaximumAllowedPrice.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.MaximumAllowedPrice.RelationType, value);
			}
		}

		virtual public bool ExistMaximumAllowedPrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.MaximumAllowedPrice.RelationType);
			}
		}

		virtual public void RemoveMaximumAllowedPrice()
		{
			Strategy.RemoveUnitRole(Meta.MaximumAllowedPrice.RelationType);
		}


		virtual public global::System.DateTime? RequiredByDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.RequiredByDate.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.RequiredByDate.RelationType, value);
			}
		}

		virtual public bool ExistRequiredByDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.RequiredByDate.RelationType);
			}
		}

		virtual public void RemoveRequiredByDate()
		{
			Strategy.RemoveUnitRole(Meta.RequiredByDate.RelationType);
		}


		virtual public global::System.Guid? DerivationId 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(Meta.DerivationId.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DerivationId.RelationType, value);
			}
		}

		virtual public bool ExistDerivationId{
			get
			{
				return Strategy.ExistUnitRole(Meta.DerivationId.RelationType);
			}
		}

		virtual public void RemoveDerivationId()
		{
			Strategy.RemoveUnitRole(Meta.DerivationId.RelationType);
		}


		virtual public global::System.DateTime? DerivationTimeStamp 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.DerivationTimeStamp.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DerivationTimeStamp.RelationType, value);
			}
		}

		virtual public bool ExistDerivationTimeStamp{
			get
			{
				return Strategy.ExistUnitRole(Meta.DerivationTimeStamp.RelationType);
			}
		}

		virtual public void RemoveDerivationTimeStamp()
		{
			Strategy.RemoveUnitRole(Meta.DerivationTimeStamp.RelationType);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermissions.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermissions.RelationType, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermissions.RelationType, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermissions.RelationType, value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermissions.RelationType);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermissions.RelationType);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityTokens.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityTokens.RelationType, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityTokens.RelationType, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityTokens.RelationType, value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityTokens.RelationType);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityTokens.RelationType);
		}



		virtual public RequestItem RequestItemWhereCurrentVersion
		{ 
			get
			{
				return (RequestItem) Strategy.GetCompositeAssociation(Meta.RequestItemWhereCurrentVersion.RelationType);
			}
		} 

		virtual public bool ExistRequestItemWhereCurrentVersion
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.RequestItemWhereCurrentVersion.RelationType);
			}
		}


		virtual public RequestItem RequestItemWhereAllVersion
		{ 
			get
			{
				return (RequestItem) Strategy.GetCompositeAssociation(Meta.RequestItemWhereAllVersion.RelationType);
			}
		} 

		virtual public bool ExistRequestItemWhereAllVersion
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.RequestItemWhereAllVersion.RelationType);
			}
		}



		public ObjectOnBuild OnBuild()
		{ 
			var method = new RequestItemVersionOnBuild(this);
            method.Execute();
            return method;
		}

		public ObjectOnBuild OnBuild(System.Action<ObjectOnBuild> action)
		{ 
			var method = new RequestItemVersionOnBuild(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnPostBuild OnPostBuild()
		{ 
			var method = new RequestItemVersionOnPostBuild(this);
            method.Execute();
            return method;
		}

		public ObjectOnPostBuild OnPostBuild(System.Action<ObjectOnPostBuild> action)
		{ 
			var method = new RequestItemVersionOnPostBuild(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnPreDerive OnPreDerive()
		{ 
			var method = new RequestItemVersionOnPreDerive(this);
            method.Execute();
            return method;
		}

		public ObjectOnPreDerive OnPreDerive(System.Action<ObjectOnPreDerive> action)
		{ 
			var method = new RequestItemVersionOnPreDerive(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnDerive OnDerive()
		{ 
			var method = new RequestItemVersionOnDerive(this);
            method.Execute();
            return method;
		}

		public ObjectOnDerive OnDerive(System.Action<ObjectOnDerive> action)
		{ 
			var method = new RequestItemVersionOnDerive(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnPostDerive OnPostDerive()
		{ 
			var method = new RequestItemVersionOnPostDerive(this);
            method.Execute();
            return method;
		}

		public ObjectOnPostDerive OnPostDerive(System.Action<ObjectOnPostDerive> action)
		{ 
			var method = new RequestItemVersionOnPostDerive(this);
            action(method);
            method.Execute();
            return method;
		}
	}

	public partial class RequestItemVersionBuilder : Allors.ObjectBuilder<RequestItemVersion> , VersionBuilder, global::System.IDisposable
	{		
		public RequestItemVersionBuilder(Allors.ISession session) : base(session)
	    {
	    }

		protected override void OnBuild(RequestItemVersion instance)
		{

			instance.InternalComment = this.InternalComment;
		
		

			instance.Description = this.Description;
		
		
			

			if(this.Quantity.HasValue)
			{
				instance.Quantity = this.Quantity.Value;
			}			
		
		
			

			if(this.MaximumAllowedPrice.HasValue)
			{
				instance.MaximumAllowedPrice = this.MaximumAllowedPrice.Value;
			}			
		
		
			

			if(this.RequiredByDate.HasValue)
			{
				instance.RequiredByDate = this.RequiredByDate.Value;
			}			
		
		
			

			if(this.DerivationId.HasValue)
			{
				instance.DerivationId = this.DerivationId.Value;
			}			
		
		
			

			if(this.DerivationTimeStamp.HasValue)
			{
				instance.DerivationTimeStamp = this.DerivationTimeStamp.Value;
			}			
		
		
		

			instance.UnitOfMeasure = this.UnitOfMeasure;

		
			if(this.Requirements!=null)
			{
				instance.Requirements = this.Requirements.ToArray();
			}
		

			instance.Deliverable = this.Deliverable;

		

			instance.ProductFeature = this.ProductFeature;

		

			instance.NeededSkill = this.NeededSkill;

		

			instance.Product = this.Product;

		
			if(this.DeniedPermissions!=null)
			{
				instance.DeniedPermissions = this.DeniedPermissions.ToArray();
			}
		
			if(this.SecurityTokens!=null)
			{
				instance.SecurityTokens = this.SecurityTokens.ToArray();
			}
		
		}


				public global::System.String InternalComment {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithInternalComment(global::System.String value)
		        {
				    if(this.InternalComment!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.InternalComment = value;
		            return this;
		        }	

				public global::System.String Description {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithDescription(global::System.String value)
		        {
				    if(this.Description!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Description = value;
		            return this;
		        }	

				public global::System.Int32? Quantity {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithQuantity(global::System.Int32? value)
		        {
				    if(this.Quantity!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Quantity = value;
		            return this;
		        }	

				public UnitOfMeasure UnitOfMeasure {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithUnitOfMeasure(UnitOfMeasure value)
		        {
		            if(this.UnitOfMeasure!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.UnitOfMeasure = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Requirement> Requirements {get; set;}	

				/// <exclude/>
				public RequestItemVersionBuilder WithRequirement(Requirement value)
		        {
					if(this.Requirements == null)
					{
						this.Requirements = new global::System.Collections.Generic.List<Requirement>(); 
					}
		            this.Requirements.Add(value);
		            return this;
		        }		

				
				public Deliverable Deliverable {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithDeliverable(Deliverable value)
		        {
		            if(this.Deliverable!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Deliverable = value;
		            return this;
		        }		

				
				public ProductFeature ProductFeature {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithProductFeature(ProductFeature value)
		        {
		            if(this.ProductFeature!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ProductFeature = value;
		            return this;
		        }		

				
				public NeededSkill NeededSkill {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithNeededSkill(NeededSkill value)
		        {
		            if(this.NeededSkill!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.NeededSkill = value;
		            return this;
		        }		

				
				public Product Product {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithProduct(Product value)
		        {
		            if(this.Product!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Product = value;
		            return this;
		        }		

				
				public global::System.Decimal? MaximumAllowedPrice {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithMaximumAllowedPrice(global::System.Decimal? value)
		        {
				    if(this.MaximumAllowedPrice!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.MaximumAllowedPrice = value;
		            return this;
		        }	

				public global::System.DateTime? RequiredByDate {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithRequiredByDate(global::System.DateTime? value)
		        {
				    if(this.RequiredByDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.RequiredByDate = value;
		            return this;
		        }	

				public global::System.Guid? DerivationId {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithDerivationId(global::System.Guid? value)
		        {
				    if(this.DerivationId!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DerivationId = value;
		            return this;
		        }	

				public global::System.DateTime? DerivationTimeStamp {get; set;}

				/// <exclude/>
				public RequestItemVersionBuilder WithDerivationTimeStamp(global::System.DateTime? value)
		        {
				    if(this.DerivationTimeStamp!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DerivationTimeStamp = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public RequestItemVersionBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public RequestItemVersionBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				

	}

	public partial class RequestItemVersions : global::Allors.ObjectsBase<RequestItemVersion>
	{
		public RequestItemVersions(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaRequestItemVersion Meta
		{
			get
			{
				return Allors.Meta.MetaRequestItemVersion.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}