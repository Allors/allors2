// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPostDerive : Allors.Meta.Method
	{
		protected ObjectOnPostDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class EmailMessageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnPostDerive); 

		public EmailMessageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EventOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Event.ObjectType, Allors.Meta.M.Event.OnPostDerive); 

		public EventOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EventRegistrationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventRegistrationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EventRegistration.ObjectType, Allors.Meta.M.EventRegistration.OnPostDerive); 

		public EventRegistrationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventRegistrationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FiscalYearInvoiceNumberOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FiscalYearInvoiceNumberOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FiscalYearInvoiceNumber.ObjectType, Allors.Meta.M.FiscalYearInvoiceNumber.OnPostDerive); 

		public FiscalYearInvoiceNumberOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FiscalYearInvoiceNumberOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderItemBillingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderItemBillingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderItemBilling.ObjectType, Allors.Meta.M.OrderItemBilling.OnPostDerive); 

		public OrderItemBillingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderItemBillingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryBillingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryBillingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceEntryBilling.ObjectType, Allors.Meta.M.ServiceEntryBilling.OnPostDerive); 

		public ServiceEntryBillingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryBillingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TransitionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Transition.ObjectType, Allors.Meta.M.Transition.OnPostDerive); 

		public TransitionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortBillingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortBillingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortBilling.ObjectType, Allors.Meta.M.WorkEffortBilling.OnPostDerive); 

		public WorkEffortBillingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortBillingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnPostDerive); 

		public AccessControlOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnPostDerive); 

		public MediaOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnPostDerive); 

		public MediaContentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnPostDerive); 

		public LoginOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnPostDerive); 

		public PermissionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnPostDerive); 

		public SecurityTokenOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NotificationListOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnPostDerive); 

		public NotificationListOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnPostDerive); 

		public PersonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnPostDerive); 

		public TaskAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaskListOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnPostDerive); 

		public TaskListOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BasePriceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BasePrice.ObjectType, Allors.Meta.M.BasePrice.OnPostDerive); 

		public BasePriceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CatalogueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CatalogueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Catalogue.ObjectType, Allors.Meta.M.Catalogue.OnPostDerive); 

		public CatalogueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CatalogueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerRelationship.ObjectType, Allors.Meta.M.CustomerRelationship.OnPostDerive); 

		public CustomerRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Employment.ObjectType, Allors.Meta.M.Employment.OnPostDerive); 

		public EmploymentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InternalOrganisationRevenue.ObjectType, Allors.Meta.M.InternalOrganisationRevenue.OnPostDerive); 

		public InternalOrganisationRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ItemIssuanceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ItemIssuance.ObjectType, Allors.Meta.M.ItemIssuance.OnPostDerive); 

		public ItemIssuanceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderShipmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderShipment.ObjectType, Allors.Meta.M.OrderShipment.OnPostDerive); 

		public OrderShipmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnPostDerive); 

		public OrganisationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackageRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackageRevenue.ObjectType, Allors.Meta.M.PackageRevenue.OnPostDerive); 

		public PackageRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyContactMechanismOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyContactMechanismOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyContactMechanism.ObjectType, Allors.Meta.M.PartyContactMechanism.OnPostDerive); 

		public PartyContactMechanismOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyContactMechanismOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyPackageRevenue.ObjectType, Allors.Meta.M.PartyPackageRevenue.OnPostDerive); 

		public PartyPackageRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyProductCategoryRevenue.ObjectType, Allors.Meta.M.PartyProductCategoryRevenue.OnPostDerive); 

		public PartyProductCategoryRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyProductRevenue.ObjectType, Allors.Meta.M.PartyProductRevenue.OnPostDerive); 

		public PartyProductRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyRevenue.ObjectType, Allors.Meta.M.PartyRevenue.OnPostDerive); 

		public PartyRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PickListItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListItem.ObjectType, Allors.Meta.M.PickListItem.OnPostDerive); 

		public PickListItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PostalBoundaryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalBoundaryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalBoundary.ObjectType, Allors.Meta.M.PostalBoundary.OnPostDerive); 

		public PostalBoundaryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalBoundaryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCategory.ObjectType, Allors.Meta.M.ProductCategory.OnPostDerive); 

		public ProductCategoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCategoryRevenue.ObjectType, Allors.Meta.M.ProductCategoryRevenue.OnPostDerive); 

		public ProductCategoryRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductCharacteristicValueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCharacteristicValueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCharacteristicValue.ObjectType, Allors.Meta.M.ProductCharacteristicValue.OnPostDerive); 

		public ProductCharacteristicValueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCharacteristicValueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductRevenue.ObjectType, Allors.Meta.M.ProductRevenue.OnPostDerive); 

		public ProductRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItem.ObjectType, Allors.Meta.M.QuoteItem.OnPostDerive); 

		public QuoteItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItem.ObjectType, Allors.Meta.M.RequestItem.OnPostDerive); 

		public RequestItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesChannelRevenue.ObjectType, Allors.Meta.M.SalesChannelRevenue.OnPostDerive); 

		public SalesChannelRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepPartyProductCategoryRevenue.ObjectType, Allors.Meta.M.SalesRepPartyProductCategoryRevenue.OnPostDerive); 

		public SalesRepPartyProductCategoryRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepPartyRevenue.ObjectType, Allors.Meta.M.SalesRepPartyRevenue.OnPostDerive); 

		public SalesRepPartyRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepProductCategoryRevenue.ObjectType, Allors.Meta.M.SalesRepProductCategoryRevenue.OnPostDerive); 

		public SalesRepProductCategoryRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepRevenue.ObjectType, Allors.Meta.M.SalesRepRevenue.OnPostDerive); 

		public SalesRepRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentItem.ObjectType, Allors.Meta.M.ShipmentItem.OnPostDerive); 

		public ShipmentItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StoreRevenueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StoreRevenue.ObjectType, Allors.Meta.M.StoreRevenue.OnPostDerive); 

		public StoreRevenueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SupplierRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SupplierRelationship.ObjectType, Allors.Meta.M.SupplierRelationship.OnPostDerive); 

		public SupplierRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortAssignment.ObjectType, Allors.Meta.M.WorkEffortAssignment.OnPostDerive); 

		public WorkEffortAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmailCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailCommunication.ObjectType, Allors.Meta.M.EmailCommunication.OnPostDerive); 

		public EmailCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaceToFaceCommunication.ObjectType, Allors.Meta.M.FaceToFaceCommunication.OnPostDerive); 

		public FaceToFaceCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FaxCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaxCommunication.ObjectType, Allors.Meta.M.FaxCommunication.OnPostDerive); 

		public FaxCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LetterCorrespondence.ObjectType, Allors.Meta.M.LetterCorrespondence.OnPostDerive); 

		public LetterCorrespondenceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PhoneCommunication.ObjectType, Allors.Meta.M.PhoneCommunication.OnPostDerive); 

		public PhoneCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebSiteCommunication.ObjectType, Allors.Meta.M.WebSiteCommunication.OnPostDerive); 

		public WebSiteCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PostalAddressOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalAddressOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalAddress.ObjectType, Allors.Meta.M.PostalAddress.OnPostDerive); 

		public PostalAddressOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalAddressOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TelecommunicationsNumberOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TelecommunicationsNumberOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TelecommunicationsNumber.ObjectType, Allors.Meta.M.TelecommunicationsNumber.OnPostDerive); 

		public TelecommunicationsNumberOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TelecommunicationsNumberOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmailAddressOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailAddressOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailAddress.ObjectType, Allors.Meta.M.EmailAddress.OnPostDerive); 

		public EmailAddressOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailAddressOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WebAddressOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebAddressOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebAddress.ObjectType, Allors.Meta.M.WebAddress.OnPostDerive); 

		public WebAddressOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebAddressOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItem.ObjectType, Allors.Meta.M.PurchaseInvoiceItem.OnPostDerive); 

		public PurchaseInvoiceItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItem.ObjectType, Allors.Meta.M.SalesInvoiceItem.OnPostDerive); 

		public SalesInvoiceItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationContactRelationship.ObjectType, Allors.Meta.M.OrganisationContactRelationship.OnPostDerive); 

		public OrganisationContactRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationRollUpOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRollUpOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationRollUp.ObjectType, Allors.Meta.M.OrganisationRollUp.OnPostDerive); 

		public OrganisationRollUpOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRollUpOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalServicesRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalServicesRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalServicesRelationship.ObjectType, Allors.Meta.M.ProfessionalServicesRelationship.OnPostDerive); 

		public ProfessionalServicesRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalServicesRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepRelationship.ObjectType, Allors.Meta.M.SalesRepRelationship.OnPostDerive); 

		public SalesRepRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubContractorRelationship.ObjectType, Allors.Meta.M.SubContractorRelationship.OnPostDerive); 

		public SubContractorRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItem.ObjectType, Allors.Meta.M.PurchaseOrderItem.OnPostDerive); 

		public PurchaseOrderItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItem.ObjectType, Allors.Meta.M.SalesOrderItem.OnPostDerive); 

		public SalesOrderItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GoodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Good.ObjectType, Allors.Meta.M.Good.OnPostDerive); 

		public GoodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableBasedServiceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableBasedServiceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableBasedService.ObjectType, Allors.Meta.M.DeliverableBasedService.OnPostDerive); 

		public DeliverableBasedServiceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableBasedServiceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TimeAndMaterialsServiceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeAndMaterialsServiceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeAndMaterialsService.ObjectType, Allors.Meta.M.TimeAndMaterialsService.OnPostDerive); 

		public TimeAndMaterialsServiceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeAndMaterialsServiceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkTaskOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkTaskOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkTask.ObjectType, Allors.Meta.M.WorkTask.OnPostDerive); 

		public WorkTaskOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkTaskOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnPostDerive); 

		public CounterOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnPostDerive); 

		public RoleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnPostDerive); 

		public UserGroupOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CarrierOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CarrierOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Carrier.ObjectType, Allors.Meta.M.Carrier.OnPostDerive); 

		public CarrierOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CarrierOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CaseOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Case.ObjectType, Allors.Meta.M.Case.OnPostDerive); 

		public CaseOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ChartOfAccountsOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ChartOfAccountsOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ChartOfAccounts.ObjectType, Allors.Meta.M.ChartOfAccounts.OnPostDerive); 

		public ChartOfAccountsOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ChartOfAccountsOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenter.ObjectType, Allors.Meta.M.CostCenter.OnPostDerive); 

		public CostCenterOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterCategoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterCategoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenterCategory.ObjectType, Allors.Meta.M.CostCenterCategory.OnPostDerive); 

		public CostCenterCategoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterCategoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccount.ObjectType, Allors.Meta.M.GeneralLedgerAccount.OnPostDerive); 

		public GeneralLedgerAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InternalOrganisation.ObjectType, Allors.Meta.M.InternalOrganisation.OnPostDerive); 

		public InternalOrganisationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderKindOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderKindOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderKind.ObjectType, Allors.Meta.M.OrderKind.OnPostDerive); 

		public OrderKindOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderKindOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactKindOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactKindOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationContactKind.ObjectType, Allors.Meta.M.OrganisationContactKind.OnPostDerive); 

		public OrganisationContactKindOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactKindOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Package.ObjectType, Allors.Meta.M.Package.OnPostDerive); 

		public PackageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecification.ObjectType, Allors.Meta.M.PartSpecification.OnPostDerive); 

		public PartSpecificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductType.ObjectType, Allors.Meta.M.ProductType.OnPostDerive); 

		public ProductTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequirementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Requirement.ObjectType, Allors.Meta.M.Requirement.OnPostDerive); 

		public RequirementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentPackageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentPackageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentPackage.ObjectType, Allors.Meta.M.ShipmentPackage.OnPostDerive); 

		public ShipmentPackageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentPackageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StoreOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Store.ObjectType, Allors.Meta.M.Store.OnPostDerive); 

		public StoreOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StringTemplateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StringTemplate.ObjectType, Allors.Meta.M.StringTemplate.OnPostDerive); 

		public StringTemplateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionType.ObjectType, Allors.Meta.M.AccountingTransactionType.OnPostDerive); 

		public AccountingTransactionTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AssetAssignmentStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AssetAssignmentStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AssetAssignmentStatus.ObjectType, Allors.Meta.M.AssetAssignmentStatus.OnPostDerive); 

		public AssetAssignmentStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AssetAssignmentStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CatScopeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CatScopeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CatScope.ObjectType, Allors.Meta.M.CatScope.OnPostDerive); 

		public CatScopeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CatScopeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ColourOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ColourOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Colour.ObjectType, Allors.Meta.M.Colour.OnPostDerive); 

		public ColourOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ColourOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventPurposeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventPurposeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CommunicationEventPurpose.ObjectType, Allors.Meta.M.CommunicationEventPurpose.OnPostDerive); 

		public CommunicationEventPurposeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventPurposeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ContactMechanismPurposeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismPurposeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ContactMechanismPurpose.ObjectType, Allors.Meta.M.ContactMechanismPurpose.OnPostDerive); 

		public ContactMechanismPurposeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismPurposeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ContactMechanismTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ContactMechanismType.ObjectType, Allors.Meta.M.ContactMechanismType.OnPostDerive); 

		public ContactMechanismTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterSplitMethodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterSplitMethodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenterSplitMethod.ObjectType, Allors.Meta.M.CostCenterSplitMethod.OnPostDerive); 

		public CostCenterSplitMethodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterSplitMethodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CostOfGoodsSoldMethodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostOfGoodsSoldMethodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostOfGoodsSoldMethod.ObjectType, Allors.Meta.M.CostOfGoodsSoldMethod.OnPostDerive); 

		public CostOfGoodsSoldMethodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostOfGoodsSoldMethodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DebitCreditConstantOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DebitCreditConstantOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DebitCreditConstant.ObjectType, Allors.Meta.M.DebitCreditConstant.OnPostDerive); 

		public DebitCreditConstantOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DebitCreditConstantOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeductionTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeductionType.ObjectType, Allors.Meta.M.DeductionType.OnPostDerive); 

		public DeductionTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableType.ObjectType, Allors.Meta.M.DeliverableType.OnPostDerive); 

		public DeliverableTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DunningTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DunningTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DunningType.ObjectType, Allors.Meta.M.DunningType.OnPostDerive); 

		public DunningTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DunningTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationSourceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationSourceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplicationSource.ObjectType, Allors.Meta.M.EmploymentApplicationSource.OnPostDerive); 

		public EmploymentApplicationSourceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationSourceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplicationStatus.ObjectType, Allors.Meta.M.EmploymentApplicationStatus.OnPostDerive); 

		public EmploymentApplicationStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentTermination.ObjectType, Allors.Meta.M.EmploymentTermination.OnPostDerive); 

		public EmploymentTerminationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationReasonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationReasonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentTerminationReason.ObjectType, Allors.Meta.M.EmploymentTerminationReason.OnPostDerive); 

		public EmploymentTerminationReasonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationReasonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EuSalesListTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EuSalesListTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EuSalesListType.ObjectType, Allors.Meta.M.EuSalesListType.OnPostDerive); 

		public EuSalesListTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EuSalesListTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FacilityTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FacilityTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FacilityType.ObjectType, Allors.Meta.M.FacilityType.OnPostDerive); 

		public FacilityTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FacilityTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GenderTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GenderType.ObjectType, Allors.Meta.M.GenderType.OnPostDerive); 

		public GenderTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class HobbyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HobbyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Hobby.ObjectType, Allors.Meta.M.Hobby.OnPostDerive); 

		public HobbyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HobbyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemKindOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemKindOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InventoryItemKind.ObjectType, Allors.Meta.M.InventoryItemKind.OnPostDerive); 

		public InventoryItemKindOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemKindOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceSequenceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceSequenceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceSequence.ObjectType, Allors.Meta.M.InvoiceSequence.OnPostDerive); 

		public InvoiceSequenceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceSequenceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class JournalTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalType.ObjectType, Allors.Meta.M.JournalType.OnPostDerive); 

		public JournalTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MaritalStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaritalStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MaritalStatus.ObjectType, Allors.Meta.M.MaritalStatus.OnPostDerive); 

		public MaritalStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaritalStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ModelOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ModelOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Model.ObjectType, Allors.Meta.M.Model.OnPostDerive); 

		public ModelOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ModelOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationType.ObjectType, Allors.Meta.M.PartSpecificationType.OnPostDerive); 

		public PartSpecificationTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OwnershipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnershipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Ownership.ObjectType, Allors.Meta.M.Ownership.OnPostDerive); 

		public OwnershipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnershipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProcessFlowOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProcessFlowOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProcessFlow.ObjectType, Allors.Meta.M.ProcessFlow.OnPostDerive); 

		public ProcessFlowOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProcessFlowOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrdinalOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrdinalOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Ordinal.ObjectType, Allors.Meta.M.Ordinal.OnPostDerive); 

		public OrdinalOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrdinalOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationRoleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRoleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationRole.ObjectType, Allors.Meta.M.OrganisationRole.OnPostDerive); 

		public OrganisationRoleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRoleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationUnitOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationUnitOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationUnit.ObjectType, Allors.Meta.M.OrganisationUnit.OnPostDerive); 

		public OrganisationUnitOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationUnitOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReviewItemType.ObjectType, Allors.Meta.M.PerformanceReviewItemType.OnPostDerive); 

		public PerformanceReviewItemTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonalTitleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonalTitleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonalTitle.ObjectType, Allors.Meta.M.PersonalTitle.OnPostDerive); 

		public PersonalTitleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonalTitleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonRoleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonRoleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonRole.ObjectType, Allors.Meta.M.PersonRole.OnPostDerive); 

		public PersonRoleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonRoleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionStatus.ObjectType, Allors.Meta.M.PositionStatus.OnPostDerive); 

		public PositionStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PriorityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PriorityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Priority.ObjectType, Allors.Meta.M.Priority.OnPostDerive); 

		public PriorityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PriorityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductCharacteristicOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCharacteristicOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCharacteristic.ObjectType, Allors.Meta.M.ProductCharacteristic.OnPostDerive); 

		public ProductCharacteristicOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCharacteristicOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductQualityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQualityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuality.ObjectType, Allors.Meta.M.ProductQuality.OnPostDerive); 

		public ProductQualityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQualityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemType.ObjectType, Allors.Meta.M.PurchaseInvoiceItemType.OnPostDerive); 

		public PurchaseInvoiceItemTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceType.ObjectType, Allors.Meta.M.PurchaseInvoiceType.OnPostDerive); 

		public PurchaseInvoiceTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class QualificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QualificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Qualification.ObjectType, Allors.Meta.M.Qualification.OnPostDerive); 

		public QualificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QualificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RateTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RateTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RateType.ObjectType, Allors.Meta.M.RateType.OnPostDerive); 

		public RateTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RateTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RatingTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RatingTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RatingType.ObjectType, Allors.Meta.M.RatingType.OnPostDerive); 

		public RatingTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RatingTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesChannel.ObjectType, Allors.Meta.M.SalesChannel.OnPostDerive); 

		public SalesChannelOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemType.ObjectType, Allors.Meta.M.SalesInvoiceItemType.OnPostDerive); 

		public SalesInvoiceItemTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceType.ObjectType, Allors.Meta.M.SalesInvoiceType.OnPostDerive); 

		public SalesInvoiceTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalutationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalutationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Salutation.ObjectType, Allors.Meta.M.Salutation.OnPostDerive); 

		public SalutationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalutationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ServiceFeatureOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceFeatureOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceFeature.ObjectType, Allors.Meta.M.ServiceFeature.OnPostDerive); 

		public ServiceFeatureOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceFeatureOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentMethodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentMethodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentMethod.ObjectType, Allors.Meta.M.ShipmentMethod.OnPostDerive); 

		public ShipmentMethodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentMethodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SizeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SizeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Size.ObjectType, Allors.Meta.M.Size.OnPostDerive); 

		public SizeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SizeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SkillOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Skill.ObjectType, Allors.Meta.M.Skill.OnPostDerive); 

		public SkillOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SkillLevelOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillLevelOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SkillLevel.ObjectType, Allors.Meta.M.SkillLevel.OnPostDerive); 

		public SkillLevelOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillLevelOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SkillRatingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillRatingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SkillRating.ObjectType, Allors.Meta.M.SkillRating.OnPostDerive); 

		public SkillRatingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillRatingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SoftwareFeatureOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SoftwareFeatureOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SoftwareFeature.ObjectType, Allors.Meta.M.SoftwareFeature.OnPostDerive); 

		public SoftwareFeatureOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SoftwareFeatureOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequirementTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementType.ObjectType, Allors.Meta.M.RequirementType.OnPostDerive); 

		public RequirementTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TimeFrequencyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeFrequencyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeFrequency.ObjectType, Allors.Meta.M.TimeFrequency.OnPostDerive); 

		public TimeFrequencyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeFrequencyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitOfMeasure.ObjectType, Allors.Meta.M.UnitOfMeasure.OnPostDerive); 

		public UnitOfMeasureOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VarianceReasonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VarianceReasonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VarianceReason.ObjectType, Allors.Meta.M.VarianceReason.OnPostDerive); 

		public VarianceReasonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VarianceReasonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatCalculationMethodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatCalculationMethodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatCalculationMethod.ObjectType, Allors.Meta.M.VatCalculationMethod.OnPostDerive); 

		public VatCalculationMethodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatCalculationMethodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatRatePurchaseKindOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRatePurchaseKindOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRatePurchaseKind.ObjectType, Allors.Meta.M.VatRatePurchaseKind.OnPostDerive); 

		public VatRatePurchaseKindOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRatePurchaseKindOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatRateUsageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateUsageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRateUsage.ObjectType, Allors.Meta.M.VatRateUsage.OnPostDerive); 

		public VatRateUsageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateUsageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatRegimeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRegimeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRegime.ObjectType, Allors.Meta.M.VatRegime.OnPostDerive); 

		public VatRegimeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRegimeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatTariffOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatTariffOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatTariff.ObjectType, Allors.Meta.M.VatTariff.OnPostDerive); 

		public VatTariffOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatTariffOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPurposeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPurposeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPurpose.ObjectType, Allors.Meta.M.WorkEffortPurpose.OnPostDerive); 

		public WorkEffortPurposeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPurposeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeKindOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeKindOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortTypeKind.ObjectType, Allors.Meta.M.WorkEffortTypeKind.OnPostDerive); 

		public WorkEffortTypeKindOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeKindOnPostDeriveMethodInvocation;
			}
		}
	}public partial class IncoTermTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncoTermTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IncoTermType.ObjectType, Allors.Meta.M.IncoTermType.OnPostDerive); 

		public IncoTermTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncoTermTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceTermTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceTermType.ObjectType, Allors.Meta.M.InvoiceTermType.OnPostDerive); 

		public InvoiceTermTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetState.ObjectType, Allors.Meta.M.BudgetState.OnPostDerive); 

		public BudgetStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CaseStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CaseState.ObjectType, Allors.Meta.M.CaseState.OnPostDerive); 

		public CaseStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CommunicationEventState.ObjectType, Allors.Meta.M.CommunicationEventState.OnPostDerive); 

		public CommunicationEventStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturnState.ObjectType, Allors.Meta.M.CustomerReturnState.OnPostDerive); 

		public CustomerReturnStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipmentState.ObjectType, Allors.Meta.M.CustomerShipmentState.OnPostDerive); 

		public CustomerShipmentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipmentState.ObjectType, Allors.Meta.M.DropShipmentState.OnPostDerive); 

		public DropShipmentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChangeObjectState.ObjectType, Allors.Meta.M.EngineeringChangeObjectState.OnPostDerive); 

		public EngineeringChangeObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItemState.ObjectType, Allors.Meta.M.NonSerialisedInventoryItemState.OnPostDerive); 

		public NonSerialisedInventoryItemStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerializedInventoryItemObjectState.ObjectType, Allors.Meta.M.NonSerializedInventoryItemObjectState.OnPostDerive); 

		public NonSerializedInventoryItemObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderPaymentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderPaymentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderPaymentState.ObjectType, Allors.Meta.M.PurchaseOrderPaymentState.OnPostDerive); 

		public PurchaseOrderPaymentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderPaymentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderShipmentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderShipmentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderShipmentState.ObjectType, Allors.Meta.M.PurchaseOrderShipmentState.OnPostDerive); 

		public PurchaseOrderShipmentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderShipmentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemShipmentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemShipmentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemShipmentState.ObjectType, Allors.Meta.M.SalesOrderItemShipmentState.OnPostDerive); 

		public SalesOrderItemShipmentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemShipmentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemPaymentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemPaymentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemPaymentState.ObjectType, Allors.Meta.M.SalesOrderItemPaymentState.OnPostDerive); 

		public SalesOrderItemPaymentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemPaymentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderPaymentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderPaymentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderPaymentState.ObjectType, Allors.Meta.M.SalesOrderPaymentState.OnPostDerive); 

		public SalesOrderPaymentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderPaymentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderShipmentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderShipmentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderShipmentState.ObjectType, Allors.Meta.M.SalesOrderShipmentState.OnPostDerive); 

		public SalesOrderShipmentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderShipmentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationState.ObjectType, Allors.Meta.M.PartSpecificationState.OnPostDerive); 

		public PartSpecificationStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PickListStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListState.ObjectType, Allors.Meta.M.PickListState.OnPostDerive); 

		public PickListStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemState.ObjectType, Allors.Meta.M.PurchaseInvoiceItemState.OnPostDerive); 

		public PurchaseInvoiceItemStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceState.ObjectType, Allors.Meta.M.PurchaseInvoiceState.OnPostDerive); 

		public PurchaseInvoiceStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItemState.ObjectType, Allors.Meta.M.PurchaseOrderItemState.OnPostDerive); 

		public PurchaseOrderItemStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderState.ObjectType, Allors.Meta.M.PurchaseOrderState.OnPostDerive); 

		public PurchaseOrderStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturnState.ObjectType, Allors.Meta.M.PurchaseReturnState.OnPostDerive); 

		public PurchaseReturnStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipmentState.ObjectType, Allors.Meta.M.PurchaseShipmentState.OnPostDerive); 

		public PurchaseShipmentStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class QuoteStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteState.ObjectType, Allors.Meta.M.QuoteState.OnPostDerive); 

		public QuoteStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItemState.ObjectType, Allors.Meta.M.QuoteItemState.OnPostDerive); 

		public QuoteItemStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequirementStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementState.ObjectType, Allors.Meta.M.RequirementState.OnPostDerive); 

		public RequirementStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemState.ObjectType, Allors.Meta.M.SalesInvoiceItemState.OnPostDerive); 

		public SalesInvoiceItemStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceState.ObjectType, Allors.Meta.M.SalesInvoiceState.OnPostDerive); 

		public SalesInvoiceStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItemState.ObjectType, Allors.Meta.M.RequestItemState.OnPostDerive); 

		public RequestItemStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemState.ObjectType, Allors.Meta.M.SalesOrderItemState.OnPostDerive); 

		public SalesOrderItemStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestState.ObjectType, Allors.Meta.M.RequestState.OnPostDerive); 

		public RequestStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderState.ObjectType, Allors.Meta.M.SalesOrderState.OnPostDerive); 

		public SalesOrderStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItemState.ObjectType, Allors.Meta.M.SerialisedInventoryItemState.OnPostDerive); 

		public SerialisedInventoryItemStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemObjectStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemObjectStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerializedInventoryItemObjectState.ObjectType, Allors.Meta.M.SerializedInventoryItemObjectState.OnPostDerive); 

		public SerializedInventoryItemObjectStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemObjectStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TransferStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TransferState.ObjectType, Allors.Meta.M.TransferState.OnPostDerive); 

		public TransferStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortStateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortStateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortState.ObjectType, Allors.Meta.M.WorkEffortState.OnPostDerive); 

		public WorkEffortStateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortStateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ClientAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClientAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ClientAgreement.ObjectType, Allors.Meta.M.ClientAgreement.OnPostDerive); 

		public ClientAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentAgreement.ObjectType, Allors.Meta.M.EmploymentAgreement.OnPostDerive); 

		public EmploymentAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseAgreement.ObjectType, Allors.Meta.M.PurchaseAgreement.OnPostDerive); 

		public PurchaseAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesAgreement.ObjectType, Allors.Meta.M.SalesAgreement.OnPostDerive); 

		public SalesAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubContractorAgreement.ObjectType, Allors.Meta.M.SubContractorAgreement.OnPostDerive); 

		public SubContractorAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccountingPeriodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriod.ObjectType, Allors.Meta.M.AccountingPeriod.OnPostDerive); 

		public AccountingPeriodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CapitalBudgetOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudget.ObjectType, Allors.Meta.M.CapitalBudget.OnPostDerive); 

		public CapitalBudgetOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OperatingBudgetOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudget.ObjectType, Allors.Meta.M.OperatingBudget.OnPostDerive); 

		public OperatingBudgetOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FacilityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FacilityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Facility.ObjectType, Allors.Meta.M.Facility.OnPostDerive); 

		public FacilityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FacilityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnPostDerive); 

		public CountryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.City.ObjectType, Allors.Meta.M.City.OnPostDerive); 

		public CityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CountyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.County.ObjectType, Allors.Meta.M.County.OnPostDerive); 

		public CountyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PostalCodeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalCodeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalCode.ObjectType, Allors.Meta.M.PostalCode.OnPostDerive); 

		public PostalCodeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalCodeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProvinceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProvinceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Province.ObjectType, Allors.Meta.M.Province.OnPostDerive); 

		public ProvinceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProvinceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.State.ObjectType, Allors.Meta.M.State.OnPostDerive); 

		public StateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TerritoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TerritoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Territory.ObjectType, Allors.Meta.M.Territory.OnPostDerive); 

		public TerritoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TerritoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RegionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RegionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Region.ObjectType, Allors.Meta.M.Region.OnPostDerive); 

		public RegionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RegionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesTerritoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesTerritoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesTerritory.ObjectType, Allors.Meta.M.SalesTerritory.OnPostDerive); 

		public SalesTerritoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesTerritoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ServiceTerritoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceTerritoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceTerritory.ObjectType, Allors.Meta.M.ServiceTerritory.OnPostDerive); 

		public ServiceTerritoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceTerritoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItem.ObjectType, Allors.Meta.M.NonSerialisedInventoryItem.OnPostDerive); 

		public NonSerialisedInventoryItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItem.ObjectType, Allors.Meta.M.SerialisedInventoryItem.OnPostDerive); 

		public SerialisedInventoryItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnPostDerive); 

		public CurrencyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FinishedGoodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinishedGoodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinishedGood.ObjectType, Allors.Meta.M.FinishedGood.OnPostDerive); 

		public FinishedGoodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinishedGoodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RawMaterialOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RawMaterialOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RawMaterial.ObjectType, Allors.Meta.M.RawMaterial.OnPostDerive); 

		public RawMaterialOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RawMaterialOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SubAssemblyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAssemblyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubAssembly.ObjectType, Allors.Meta.M.SubAssembly.OnPostDerive); 

		public SubAssemblyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAssemblyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnPostDerive); 

		public AutomatedAgentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Disbursement.ObjectType, Allors.Meta.M.Disbursement.OnPostDerive); 

		public DisbursementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PayCheckOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayCheckOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayCheck.ObjectType, Allors.Meta.M.PayCheck.OnPostDerive); 

		public PayCheckOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayCheckOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Receipt.ObjectType, Allors.Meta.M.Receipt.OnPostDerive); 

		public ReceiptOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CashOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CashOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Cash.ObjectType, Allors.Meta.M.Cash.OnPostDerive); 

		public CashOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CashOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OwnBankAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnBankAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OwnBankAccount.ObjectType, Allors.Meta.M.OwnBankAccount.OnPostDerive); 

		public OwnBankAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnBankAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OwnCreditCardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnCreditCardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OwnCreditCard.ObjectType, Allors.Meta.M.OwnCreditCard.OnPostDerive); 

		public OwnCreditCardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnCreditCardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BrandOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BrandOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Brand.ObjectType, Allors.Meta.M.Brand.OnPostDerive); 

		public BrandOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BrandOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DimensionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DimensionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dimension.ObjectType, Allors.Meta.M.Dimension.OnPostDerive); 

		public DimensionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DimensionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturn.ObjectType, Allors.Meta.M.CustomerReturn.OnPostDerive); 

		public CustomerReturnOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipment.ObjectType, Allors.Meta.M.CustomerShipment.OnPostDerive); 

		public CustomerShipmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountAdjustment.ObjectType, Allors.Meta.M.DiscountAdjustment.OnPostDerive); 

		public DiscountAdjustmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipment.ObjectType, Allors.Meta.M.DropShipment.OnPostDerive); 

		public DropShipmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PickListOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickList.ObjectType, Allors.Meta.M.PickList.OnPostDerive); 

		public PickListOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductQuoteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuote.ObjectType, Allors.Meta.M.ProductQuote.OnPostDerive); 

		public ProductQuoteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProposalOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Proposal.ObjectType, Allors.Meta.M.Proposal.OnPostDerive); 

		public ProposalOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoice.ObjectType, Allors.Meta.M.PurchaseInvoice.OnPostDerive); 

		public PurchaseInvoiceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrder.ObjectType, Allors.Meta.M.PurchaseOrder.OnPostDerive); 

		public PurchaseOrderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturn.ObjectType, Allors.Meta.M.PurchaseReturn.OnPostDerive); 

		public PurchaseReturnOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipment.ObjectType, Allors.Meta.M.PurchaseShipment.OnPostDerive); 

		public PurchaseShipmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestForInformationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForInformation.ObjectType, Allors.Meta.M.RequestForInformation.OnPostDerive); 

		public RequestForInformationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestForProposalOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForProposal.ObjectType, Allors.Meta.M.RequestForProposal.OnPostDerive); 

		public RequestForProposalOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestForQuoteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForQuote.ObjectType, Allors.Meta.M.RequestForQuote.OnPostDerive); 

		public RequestForQuoteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoice.ObjectType, Allors.Meta.M.SalesInvoice.OnPostDerive); 

		public SalesInvoiceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrder.ObjectType, Allors.Meta.M.SalesOrder.OnPostDerive); 

		public SalesOrderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StatementOfWorkOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWork.ObjectType, Allors.Meta.M.StatementOfWork.OnPostDerive); 

		public StatementOfWorkOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TransferOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Transfer.ObjectType, Allors.Meta.M.Transfer.OnPostDerive); 

		public TransferOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnPostDerive); 

		public LocalisedTextOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnPostDerive); 

		public LanguageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnPostDerive); 

		public LocaleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NotificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnPostDerive); 

		public NotificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionDetailOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionDetailOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionDetail.ObjectType, Allors.Meta.M.AccountingTransactionDetail.OnPostDerive); 

		public AccountingTransactionDetailOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionDetailOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionNumberOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionNumberOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionNumber.ObjectType, Allors.Meta.M.AccountingTransactionNumber.OnPostDerive); 

		public AccountingTransactionNumberOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionNumberOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AddendumOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AddendumOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Addendum.ObjectType, Allors.Meta.M.Addendum.OnPostDerive); 

		public AddendumOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AddendumOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AmountDueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmountDueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AmountDue.ObjectType, Allors.Meta.M.AmountDue.OnPostDerive); 

		public AmountDueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmountDueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BankOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Bank.ObjectType, Allors.Meta.M.Bank.OnPostDerive); 

		public BankOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BenefitOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BenefitOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Benefit.ObjectType, Allors.Meta.M.Benefit.OnPostDerive); 

		public BenefitOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BenefitOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BillingAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillingAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BillingAccount.ObjectType, Allors.Meta.M.BillingAccount.OnPostDerive); 

		public BillingAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillingAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetItem.ObjectType, Allors.Meta.M.BudgetItem.OnPostDerive); 

		public BudgetItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetReviewOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetReviewOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetReview.ObjectType, Allors.Meta.M.BudgetReview.OnPostDerive); 

		public BudgetReviewOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetReviewOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetRevision.ObjectType, Allors.Meta.M.BudgetRevision.OnPostDerive); 

		public BudgetRevisionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionImpactOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionImpactOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetRevisionImpact.ObjectType, Allors.Meta.M.BudgetRevisionImpact.OnPostDerive); 

		public BudgetRevisionImpactOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionImpactOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CitizenshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CitizenshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Citizenship.ObjectType, Allors.Meta.M.Citizenship.OnPostDerive); 

		public CitizenshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CitizenshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardCompanyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardCompanyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditCardCompany.ObjectType, Allors.Meta.M.CreditCardCompany.OnPostDerive); 

		public CreditCardCompanyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardCompanyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeductionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deduction.ObjectType, Allors.Meta.M.Deduction.OnPostDerive); 

		public DeductionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deliverable.ObjectType, Allors.Meta.M.Deliverable.OnPostDerive); 

		public DeliverableOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeploymentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeploymentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deployment.ObjectType, Allors.Meta.M.Deployment.OnPostDerive); 

		public DeploymentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeploymentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationMethodOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationMethodOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DepreciationMethod.ObjectType, Allors.Meta.M.DepreciationMethod.OnPostDerive); 

		public DepreciationMethodOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationMethodOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DesiredProductFeatureOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DesiredProductFeatureOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DesiredProductFeature.ObjectType, Allors.Meta.M.DesiredProductFeature.OnPostDerive); 

		public DesiredProductFeatureOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DesiredProductFeatureOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmailTemplateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailTemplateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailTemplate.ObjectType, Allors.Meta.M.EmailTemplate.OnPostDerive); 

		public EmailTemplateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailTemplateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplication.ObjectType, Allors.Meta.M.EmploymentApplication.OnPostDerive); 

		public EmploymentApplicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngagementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Engagement.ObjectType, Allors.Meta.M.Engagement.OnPostDerive); 

		public EngagementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngagementRateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementRateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngagementRate.ObjectType, Allors.Meta.M.EngagementRate.OnPostDerive); 

		public EngagementRateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementRateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChangeStatus.ObjectType, Allors.Meta.M.EngineeringChangeStatus.OnPostDerive); 

		public EngineeringChangeStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountGroupOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountGroupOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccountGroup.ObjectType, Allors.Meta.M.GeneralLedgerAccountGroup.OnPostDerive); 

		public GeneralLedgerAccountGroupOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountGroupOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccountType.ObjectType, Allors.Meta.M.GeneralLedgerAccountType.OnPostDerive); 

		public GeneralLedgerAccountTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GlBudgetAllocationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GlBudgetAllocationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GlBudgetAllocation.ObjectType, Allors.Meta.M.GlBudgetAllocation.OnPostDerive); 

		public GlBudgetAllocationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GlBudgetAllocationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemVarianceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemVarianceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InventoryItemVariance.ObjectType, Allors.Meta.M.InventoryItemVariance.OnPostDerive); 

		public InventoryItemVarianceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemVarianceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceVatRateItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceVatRateItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceVatRateItem.ObjectType, Allors.Meta.M.InvoiceVatRateItem.OnPostDerive); 

		public InvoiceVatRateItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceVatRateItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class JournalOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Journal.ObjectType, Allors.Meta.M.Journal.OnPostDerive); 

		public JournalOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalOnPostDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntry.ObjectType, Allors.Meta.M.JournalEntry.OnPostDerive); 

		public JournalEntryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryDetailOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryDetailOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntryDetail.ObjectType, Allors.Meta.M.JournalEntryDetail.OnPostDerive); 

		public JournalEntryDetailOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryDetailOnPostDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryNumberOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryNumberOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntryNumber.ObjectType, Allors.Meta.M.JournalEntryNumber.OnPostDerive); 

		public JournalEntryNumberOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryNumberOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LegalFormOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalFormOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LegalForm.ObjectType, Allors.Meta.M.LegalForm.OnPostDerive); 

		public LegalFormOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalFormOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LotOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LotOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Lot.ObjectType, Allors.Meta.M.Lot.OnPostDerive); 

		public LotOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LotOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NeededSkillOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NeededSkillOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NeededSkill.ObjectType, Allors.Meta.M.NeededSkill.OnPostDerive); 

		public NeededSkillOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NeededSkillOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NewsItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NewsItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NewsItem.ObjectType, Allors.Meta.M.NewsItem.OnPostDerive); 

		public NewsItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NewsItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerializedInventoryItemStatus.ObjectType, Allors.Meta.M.NonSerializedInventoryItemStatus.OnPostDerive); 

		public NonSerializedInventoryItemStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderQuantityBreakOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderQuantityBreakOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderQuantityBreak.ObjectType, Allors.Meta.M.OrderQuantityBreak.OnPostDerive); 

		public OrderQuantityBreakOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderQuantityBreakOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderRequirementCommitmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderRequirementCommitmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderRequirementCommitment.ObjectType, Allors.Meta.M.OrderRequirementCommitment.OnPostDerive); 

		public OrderRequirementCommitmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderRequirementCommitmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderTerm.ObjectType, Allors.Meta.M.OrderTerm.OnPostDerive); 

		public OrderTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrderValueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderValueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderValue.ObjectType, Allors.Meta.M.OrderValue.OnPostDerive); 

		public OrderValueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderValueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationGlAccount.ObjectType, Allors.Meta.M.OrganisationGlAccount.OnPostDerive); 

		public OrganisationGlAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountBalanceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountBalanceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationGlAccountBalance.ObjectType, Allors.Meta.M.OrganisationGlAccountBalance.OnPostDerive); 

		public OrganisationGlAccountBalanceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountBalanceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackageQuantityBreakOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageQuantityBreakOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackageQuantityBreak.ObjectType, Allors.Meta.M.PackageQuantityBreak.OnPostDerive); 

		public PackageQuantityBreakOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageQuantityBreakOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackagingContentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingContentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackagingContent.ObjectType, Allors.Meta.M.PackagingContent.OnPostDerive); 

		public PackagingContentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingContentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartBillOfMaterialSubstituteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartBillOfMaterialSubstituteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartBillOfMaterialSubstitute.ObjectType, Allors.Meta.M.PartBillOfMaterialSubstitute.OnPostDerive); 

		public PartBillOfMaterialSubstituteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartBillOfMaterialSubstituteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartRevisionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartRevisionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartRevision.ObjectType, Allors.Meta.M.PartRevision.OnPostDerive); 

		public PartRevisionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartRevisionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartSubstituteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSubstituteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSubstitute.ObjectType, Allors.Meta.M.PartSubstitute.OnPostDerive); 

		public PartSubstituteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSubstituteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyBenefitOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyBenefitOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyBenefit.ObjectType, Allors.Meta.M.PartyBenefit.OnPostDerive); 

		public PartyBenefitOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyBenefitOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartyFixedAssetAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyFixedAssetAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyFixedAssetAssignment.ObjectType, Allors.Meta.M.PartyFixedAssetAssignment.OnPostDerive); 

		public PartyFixedAssetAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyFixedAssetAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartySkillOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartySkillOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartySkill.ObjectType, Allors.Meta.M.PartySkill.OnPostDerive); 

		public PartySkillOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartySkillOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PassportOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PassportOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Passport.ObjectType, Allors.Meta.M.Passport.OnPostDerive); 

		public PassportOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PassportOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PayGradeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayGradeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayGrade.ObjectType, Allors.Meta.M.PayGrade.OnPostDerive); 

		public PayGradeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayGradeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PayHistoryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayHistoryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayHistory.ObjectType, Allors.Meta.M.PayHistory.OnPostDerive); 

		public PayHistoryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayHistoryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PaymentApplicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentApplicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentApplication.ObjectType, Allors.Meta.M.PaymentApplication.OnPostDerive); 

		public PaymentApplicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentApplicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PaymentBudgetAllocationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentBudgetAllocationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentBudgetAllocation.ObjectType, Allors.Meta.M.PaymentBudgetAllocation.OnPostDerive); 

		public PaymentBudgetAllocationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentBudgetAllocationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PayrollPreferenceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayrollPreferenceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayrollPreference.ObjectType, Allors.Meta.M.PayrollPreference.OnPostDerive); 

		public PayrollPreferenceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayrollPreferenceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceNoteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceNoteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceNote.ObjectType, Allors.Meta.M.PerformanceNote.OnPostDerive); 

		public PerformanceNoteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceNoteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReview.ObjectType, Allors.Meta.M.PerformanceReview.OnPostDerive); 

		public PerformanceReviewOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReviewItem.ObjectType, Allors.Meta.M.PerformanceReviewItem.OnPostDerive); 

		public PerformanceReviewItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonTrainingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonTrainingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonTraining.ObjectType, Allors.Meta.M.PersonTraining.OnPostDerive); 

		public PersonTrainingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonTrainingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Position.ObjectType, Allors.Meta.M.Position.OnPostDerive); 

		public PositionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionFulfillmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionFulfillmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionFulfillment.ObjectType, Allors.Meta.M.PositionFulfillment.OnPostDerive); 

		public PositionFulfillmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionFulfillmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionReportingStructureOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionReportingStructureOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionReportingStructure.ObjectType, Allors.Meta.M.PositionReportingStructure.OnPostDerive); 

		public PositionReportingStructureOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionReportingStructureOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionResponsibilityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionResponsibilityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionResponsibility.ObjectType, Allors.Meta.M.PositionResponsibility.OnPostDerive); 

		public PositionResponsibilityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionResponsibilityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionType.ObjectType, Allors.Meta.M.PositionType.OnPostDerive); 

		public PositionTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeRateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeRateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionTypeRate.ObjectType, Allors.Meta.M.PositionTypeRate.OnPostDerive); 

		public PositionTypeRateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeRateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductDeliverySkillRequirementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDeliverySkillRequirementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductDeliverySkillRequirement.ObjectType, Allors.Meta.M.ProductDeliverySkillRequirement.OnPostDerive); 

		public ProductDeliverySkillRequirementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDeliverySkillRequirementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductFeatureApplicabilityRelationshipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductFeatureApplicabilityRelationshipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductFeatureApplicabilityRelationship.ObjectType, Allors.Meta.M.ProductFeatureApplicabilityRelationship.OnPostDerive); 

		public ProductFeatureApplicabilityRelationshipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductFeatureApplicabilityRelationshipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductPurchasePriceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductPurchasePriceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductPurchasePrice.ObjectType, Allors.Meta.M.ProductPurchasePrice.OnPostDerive); 

		public ProductPurchasePriceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductPurchasePriceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalAssignment.ObjectType, Allors.Meta.M.ProfessionalAssignment.OnPostDerive); 

		public ProfessionalAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class QuoteTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteTerm.ObjectType, Allors.Meta.M.QuoteTerm.OnPostDerive); 

		public QuoteTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequirementBudgetAllocationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementBudgetAllocationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementBudgetAllocation.ObjectType, Allors.Meta.M.RequirementBudgetAllocation.OnPostDerive); 

		public RequirementBudgetAllocationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementBudgetAllocationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequirementCommunicationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementCommunicationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementCommunication.ObjectType, Allors.Meta.M.RequirementCommunication.OnPostDerive); 

		public RequirementCommunicationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementCommunicationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RespondingPartyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RespondingPartyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RespondingParty.ObjectType, Allors.Meta.M.RespondingParty.OnPostDerive); 

		public RespondingPartyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RespondingPartyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ResponsibilityOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResponsibilityOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Responsibility.ObjectType, Allors.Meta.M.Responsibility.OnPostDerive); 

		public ResponsibilityOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResponsibilityOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ResumeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResumeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Resume.ObjectType, Allors.Meta.M.Resume.OnPostDerive); 

		public ResumeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResumeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RevenueQuantityBreakOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueQuantityBreakOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RevenueQuantityBreak.ObjectType, Allors.Meta.M.RevenueQuantityBreak.OnPostDerive); 

		public RevenueQuantityBreakOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueQuantityBreakOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RevenueValueBreakOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueValueBreakOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RevenueValueBreak.ObjectType, Allors.Meta.M.RevenueValueBreak.OnPostDerive); 

		public RevenueValueBreakOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueValueBreakOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalaryStepOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalaryStepOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalaryStep.ObjectType, Allors.Meta.M.SalaryStep.OnPostDerive); 

		public SalaryStepOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalaryStepOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepCommissionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepCommissionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepCommission.ObjectType, Allors.Meta.M.SalesRepCommission.OnPostDerive); 

		public SalesRepCommissionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepCommissionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemStatusOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemStatusOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerializedInventoryItemStatus.ObjectType, Allors.Meta.M.SerializedInventoryItemStatus.OnPostDerive); 

		public SerializedInventoryItemStatusOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemStatusOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryHeaderOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryHeaderOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceEntryHeader.ObjectType, Allors.Meta.M.ServiceEntryHeader.OnPostDerive); 

		public ServiceEntryHeaderOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryHeaderOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentReceiptOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentReceiptOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentReceipt.ObjectType, Allors.Meta.M.ShipmentReceipt.OnPostDerive); 

		public ShipmentReceiptOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentReceiptOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentRouteSegmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentRouteSegmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentRouteSegment.ObjectType, Allors.Meta.M.ShipmentRouteSegment.OnPostDerive); 

		public ShipmentRouteSegmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentRouteSegmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentValueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentValueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentValue.ObjectType, Allors.Meta.M.ShipmentValue.OnPostDerive); 

		public ShipmentValueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentValueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingComponentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingComponentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShippingAndHandlingComponent.ObjectType, Allors.Meta.M.ShippingAndHandlingComponent.OnPostDerive); 

		public ShippingAndHandlingComponentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingComponentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SupplierOfferingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierOfferingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SupplierOffering.ObjectType, Allors.Meta.M.SupplierOffering.OnPostDerive); 

		public SupplierOfferingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierOfferingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TrainingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TrainingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Training.ObjectType, Allors.Meta.M.Training.OnPostDerive); 

		public TrainingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TrainingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureConversionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureConversionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitOfMeasureConversion.ObjectType, Allors.Meta.M.UnitOfMeasureConversion.OnPostDerive); 

		public UnitOfMeasureConversionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureConversionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatFormOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatFormOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatForm.ObjectType, Allors.Meta.M.VatForm.OnPostDerive); 

		public VatFormOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatFormOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatRateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRate.ObjectType, Allors.Meta.M.VatRate.OnPostDerive); 

		public VatRateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatReturnBox.ObjectType, Allors.Meta.M.VatReturnBox.OnPostDerive); 

		public VatReturnBoxOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatReturnBoxType.ObjectType, Allors.Meta.M.VatReturnBoxType.OnPostDerive); 

		public VatReturnBoxTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentRateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentRateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortAssignmentRate.ObjectType, Allors.Meta.M.WorkEffortAssignmentRate.OnPostDerive); 

		public WorkEffortAssignmentRateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentRateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortFixedAssetAssignment.ObjectType, Allors.Meta.M.WorkEffortFixedAssetAssignment.OnPostDerive); 

		public WorkEffortFixedAssetAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetStandardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetStandardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortFixedAssetStandard.ObjectType, Allors.Meta.M.WorkEffortFixedAssetStandard.OnPostDerive); 

		public WorkEffortFixedAssetStandardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetStandardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortGoodStandardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortGoodStandardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortGoodStandard.ObjectType, Allors.Meta.M.WorkEffortGoodStandard.OnPostDerive); 

		public WorkEffortGoodStandardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortGoodStandardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortInventoryAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortInventoryAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortInventoryAssignment.ObjectType, Allors.Meta.M.WorkEffortInventoryAssignment.OnPostDerive); 

		public WorkEffortInventoryAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortInventoryAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartStandardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartStandardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPartStandard.ObjectType, Allors.Meta.M.WorkEffortPartStandard.OnPostDerive); 

		public WorkEffortPartStandardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartStandardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartyAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartyAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPartyAssignment.ObjectType, Allors.Meta.M.WorkEffortPartyAssignment.OnPostDerive); 

		public WorkEffortPartyAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartyAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortSkillStandardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortSkillStandardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortSkillStandard.ObjectType, Allors.Meta.M.WorkEffortSkillStandard.OnPostDerive); 

		public WorkEffortSkillStandardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortSkillStandardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortType.ObjectType, Allors.Meta.M.WorkEffortType.OnPostDerive); 

		public WorkEffortTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CaseVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CaseVersion.ObjectType, Allors.Meta.M.CaseVersion.OnPostDerive); 

		public CaseVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationVersion.ObjectType, Allors.Meta.M.PartSpecificationVersion.OnPostDerive); 

		public PartSpecificationVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PickListVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListVersion.ObjectType, Allors.Meta.M.PickListVersion.OnPostDerive); 

		public PickListVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItemVersion.ObjectType, Allors.Meta.M.QuoteItemVersion.OnPostDerive); 

		public QuoteItemVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItemVersion.ObjectType, Allors.Meta.M.RequestItemVersion.OnPostDerive); 

		public RequestItemVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequirementVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementVersion.ObjectType, Allors.Meta.M.RequirementVersion.OnPostDerive); 

		public RequirementVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccountingPeriodVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriodVersion.ObjectType, Allors.Meta.M.AccountingPeriodVersion.OnPostDerive); 

		public AccountingPeriodVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CapitalBudgetVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudgetVersion.ObjectType, Allors.Meta.M.CapitalBudgetVersion.OnPostDerive); 

		public CapitalBudgetVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OperatingBudgetVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudgetVersion.ObjectType, Allors.Meta.M.OperatingBudgetVersion.OnPostDerive); 

		public OperatingBudgetVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmailCommunicationVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailCommunicationVersion.ObjectType, Allors.Meta.M.EmailCommunicationVersion.OnPostDerive); 

		public EmailCommunicationVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaceToFaceCommunicationVersion.ObjectType, Allors.Meta.M.FaceToFaceCommunicationVersion.OnPostDerive); 

		public FaceToFaceCommunicationVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FaxCommunicationVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaxCommunicationVersion.ObjectType, Allors.Meta.M.FaxCommunicationVersion.OnPostDerive); 

		public FaxCommunicationVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LetterCorrespondenceVersion.ObjectType, Allors.Meta.M.LetterCorrespondenceVersion.OnPostDerive); 

		public LetterCorrespondenceVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PhoneCommunicationVersion.ObjectType, Allors.Meta.M.PhoneCommunicationVersion.OnPostDerive); 

		public PhoneCommunicationVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebSiteCommunicationVersion.ObjectType, Allors.Meta.M.WebSiteCommunicationVersion.OnPostDerive); 

		public WebSiteCommunicationVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItemVersion.ObjectType, Allors.Meta.M.NonSerialisedInventoryItemVersion.OnPostDerive); 

		public NonSerialisedInventoryItemVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItemVersion.ObjectType, Allors.Meta.M.SerialisedInventoryItemVersion.OnPostDerive); 

		public SerialisedInventoryItemVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceVersion.ObjectType, Allors.Meta.M.PurchaseInvoiceVersion.OnPostDerive); 

		public PurchaseInvoiceVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceVersion.ObjectType, Allors.Meta.M.SalesInvoiceVersion.OnPostDerive); 

		public SalesInvoiceVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountAdjustmentVersion.ObjectType, Allors.Meta.M.DiscountAdjustmentVersion.OnPostDerive); 

		public DiscountAdjustmentVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderVersion.ObjectType, Allors.Meta.M.PurchaseOrderVersion.OnPostDerive); 

		public PurchaseOrderVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderVersion.ObjectType, Allors.Meta.M.SalesOrderVersion.OnPostDerive); 

		public SalesOrderVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgentVersion.ObjectType, Allors.Meta.M.AutomatedAgentVersion.OnPostDerive); 

		public AutomatedAgentVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationVersion.ObjectType, Allors.Meta.M.OrganisationVersion.OnPostDerive); 

		public OrganisationVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonVersion.ObjectType, Allors.Meta.M.PersonVersion.OnPostDerive); 

		public PersonVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemVersion.ObjectType, Allors.Meta.M.PurchaseInvoiceItemVersion.OnPostDerive); 

		public PurchaseInvoiceItemVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemVersion.ObjectType, Allors.Meta.M.SalesInvoiceItemVersion.OnPostDerive); 

		public SalesInvoiceItemVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItemVersion.ObjectType, Allors.Meta.M.PurchaseOrderItemVersion.OnPostDerive); 

		public PurchaseOrderItemVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemVersion.ObjectType, Allors.Meta.M.SalesOrderItemVersion.OnPostDerive); 

		public SalesOrderItemVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductQuoteVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuoteVersion.ObjectType, Allors.Meta.M.ProductQuoteVersion.OnPostDerive); 

		public ProductQuoteVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProposalVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProposalVersion.ObjectType, Allors.Meta.M.ProposalVersion.OnPostDerive); 

		public ProposalVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StatementOfWorkVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWorkVersion.ObjectType, Allors.Meta.M.StatementOfWorkVersion.OnPostDerive); 

		public StatementOfWorkVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestForInformationVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForInformationVersion.ObjectType, Allors.Meta.M.RequestForInformationVersion.OnPostDerive); 

		public RequestForInformationVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestForProposalVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForProposalVersion.ObjectType, Allors.Meta.M.RequestForProposalVersion.OnPostDerive); 

		public RequestForProposalVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RequestForQuoteVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForQuoteVersion.ObjectType, Allors.Meta.M.RequestForQuoteVersion.OnPostDerive); 

		public RequestForQuoteVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturnVersion.ObjectType, Allors.Meta.M.CustomerReturnVersion.OnPostDerive); 

		public CustomerReturnVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipmentVersion.ObjectType, Allors.Meta.M.CustomerShipmentVersion.OnPostDerive); 

		public CustomerShipmentVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipmentVersion.ObjectType, Allors.Meta.M.DropShipmentVersion.OnPostDerive); 

		public DropShipmentVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturnVersion.ObjectType, Allors.Meta.M.PurchaseReturnVersion.OnPostDerive); 

		public PurchaseReturnVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipmentVersion.ObjectType, Allors.Meta.M.PurchaseShipmentVersion.OnPostDerive); 

		public PurchaseShipmentVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TransferVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TransferVersion.ObjectType, Allors.Meta.M.TransferVersion.OnPostDerive); 

		public TransferVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WorkTaskVersionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkTaskVersionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkTaskVersion.ObjectType, Allors.Meta.M.WorkTaskVersion.OnPostDerive); 

		public WorkTaskVersionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkTaskVersionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChange.ObjectType, Allors.Meta.M.EngineeringChange.OnPostDerive); 

		public EngineeringChangeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ItemVarianceAccountingTransactionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemVarianceAccountingTransactionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ItemVarianceAccountingTransaction.ObjectType, Allors.Meta.M.ItemVarianceAccountingTransaction.OnPostDerive); 

		public ItemVarianceAccountingTransactionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemVarianceAccountingTransactionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CreditLineOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditLineOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditLine.ObjectType, Allors.Meta.M.CreditLine.OnPostDerive); 

		public CreditLineOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditLineOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementAccountingTransactionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementAccountingTransactionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DisbursementAccountingTransaction.ObjectType, Allors.Meta.M.DisbursementAccountingTransaction.OnPostDerive); 

		public DisbursementAccountingTransactionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementAccountingTransactionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NoteOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NoteOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Note.ObjectType, Allors.Meta.M.Note.OnPostDerive); 

		public NoteOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NoteOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ObligationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ObligationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Obligation.ObjectType, Allors.Meta.M.Obligation.OnPostDerive); 

		public ObligationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ObligationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptAccountingTransactionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptAccountingTransactionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ReceiptAccountingTransaction.ObjectType, Allors.Meta.M.ReceiptAccountingTransaction.OnPostDerive); 

		public ReceiptAccountingTransactionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptAccountingTransactionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SalesAccountingTransactionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAccountingTransactionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesAccountingTransaction.ObjectType, Allors.Meta.M.SalesAccountingTransaction.OnPostDerive); 

		public SalesAccountingTransactionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAccountingTransactionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaxDueOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDueOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaxDue.ObjectType, Allors.Meta.M.TaxDue.OnPostDerive); 

		public TaxDueOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDueOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AmortizationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmortizationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Amortization.ObjectType, Allors.Meta.M.Amortization.OnPostDerive); 

		public AmortizationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmortizationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CapitalizationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalizationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Capitalization.ObjectType, Allors.Meta.M.Capitalization.OnPostDerive); 

		public CapitalizationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalizationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Depreciation.ObjectType, Allors.Meta.M.Depreciation.OnPostDerive); 

		public DepreciationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AgreementExhibitOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementExhibitOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementExhibit.ObjectType, Allors.Meta.M.AgreementExhibit.OnPostDerive); 

		public AgreementExhibitOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementExhibitOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AgreementPricingProgramOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementPricingProgramOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementPricingProgram.ObjectType, Allors.Meta.M.AgreementPricingProgram.OnPostDerive); 

		public AgreementPricingProgramOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementPricingProgramOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AgreementSectionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementSectionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementSection.ObjectType, Allors.Meta.M.AgreementSection.OnPostDerive); 

		public AgreementSectionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementSectionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SubAgreementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAgreementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubAgreement.ObjectType, Allors.Meta.M.SubAgreement.OnPostDerive); 

		public SubAgreementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAgreementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FinancialTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinancialTerm.ObjectType, Allors.Meta.M.FinancialTerm.OnPostDerive); 

		public FinancialTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class IncentiveOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncentiveOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Incentive.ObjectType, Allors.Meta.M.Incentive.OnPostDerive); 

		public IncentiveOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncentiveOnPostDeriveMethodInvocation;
			}
		}
	}public partial class IncoTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncoTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IncoTerm.ObjectType, Allors.Meta.M.IncoTerm.OnPostDerive); 

		public IncoTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncoTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceTerm.ObjectType, Allors.Meta.M.InvoiceTerm.OnPostDerive); 

		public InvoiceTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LegalTermOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalTermOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LegalTerm.ObjectType, Allors.Meta.M.LegalTerm.OnPostDerive); 

		public LegalTermOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalTermOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ThresholdOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThresholdOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Threshold.ObjectType, Allors.Meta.M.Threshold.OnPostDerive); 

		public ThresholdOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThresholdOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnPostDerive); 

		public SingletonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ActivityUsageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityUsageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ActivityUsage.ObjectType, Allors.Meta.M.ActivityUsage.OnPostDerive); 

		public ActivityUsageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityUsageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TimePeriodUsageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimePeriodUsageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimePeriodUsage.ObjectType, Allors.Meta.M.TimePeriodUsage.OnPostDerive); 

		public TimePeriodUsageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimePeriodUsageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VolumeUsageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VolumeUsageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VolumeUsage.ObjectType, Allors.Meta.M.VolumeUsage.OnPostDerive); 

		public VolumeUsageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VolumeUsageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BillOfLadingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillOfLadingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BillOfLading.ObjectType, Allors.Meta.M.BillOfLading.OnPostDerive); 

		public BillOfLadingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillOfLadingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringDocumentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringDocumentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringDocument.ObjectType, Allors.Meta.M.EngineeringDocument.OnPostDerive); 

		public EngineeringDocumentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringDocumentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ExportDocumentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExportDocumentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ExportDocument.ObjectType, Allors.Meta.M.ExportDocument.OnPostDerive); 

		public ExportDocumentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExportDocumentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class HazardousMaterialsDocumentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HazardousMaterialsDocumentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.HazardousMaterialsDocument.ObjectType, Allors.Meta.M.HazardousMaterialsDocument.OnPostDerive); 

		public HazardousMaterialsDocumentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HazardousMaterialsDocumentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ManifestOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManifestOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Manifest.ObjectType, Allors.Meta.M.Manifest.OnPostDerive); 

		public ManifestOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManifestOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MarketingMaterialOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingMaterialOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MarketingMaterial.ObjectType, Allors.Meta.M.MarketingMaterial.OnPostDerive); 

		public MarketingMaterialOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingMaterialOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PackagingSlipOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingSlipOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackagingSlip.ObjectType, Allors.Meta.M.PackagingSlip.OnPostDerive); 

		public PackagingSlipOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingSlipOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductDrawingOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDrawingOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductDrawing.ObjectType, Allors.Meta.M.ProductDrawing.OnPostDerive); 

		public ProductDrawingOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDrawingOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductModelOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductModelOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductModel.ObjectType, Allors.Meta.M.ProductModel.OnPostDerive); 

		public ProductModelOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductModelOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaxDocumentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDocumentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaxDocument.ObjectType, Allors.Meta.M.TaxDocument.OnPostDerive); 

		public TaxDocumentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDocumentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomEngagementItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomEngagementItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomEngagementItem.ObjectType, Allors.Meta.M.CustomEngagementItem.OnPostDerive); 

		public CustomEngagementItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomEngagementItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOrderItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOrderItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableOrderItem.ObjectType, Allors.Meta.M.DeliverableOrderItem.OnPostDerive); 

		public DeliverableOrderItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOrderItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class GoodOrderItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOrderItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GoodOrderItem.ObjectType, Allors.Meta.M.GoodOrderItem.OnPostDerive); 

		public GoodOrderItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOrderItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalPlacementOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalPlacementOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalPlacement.ObjectType, Allors.Meta.M.ProfessionalPlacement.OnPostDerive); 

		public ProfessionalPlacementOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalPlacementOnPostDeriveMethodInvocation;
			}
		}
	}public partial class StandardServiceOrderItemOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StandardServiceOrderItemOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StandardServiceOrderItem.ObjectType, Allors.Meta.M.StandardServiceOrderItem.OnPostDerive); 

		public StandardServiceOrderItemOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StandardServiceOrderItemOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedLaborCostOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedLaborCostOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedLaborCost.ObjectType, Allors.Meta.M.EstimatedLaborCost.OnPostDerive); 

		public EstimatedLaborCostOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedLaborCostOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedMaterialCostOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedMaterialCostOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedMaterialCost.ObjectType, Allors.Meta.M.EstimatedMaterialCost.OnPostDerive); 

		public EstimatedMaterialCostOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedMaterialCostOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedOtherCostOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedOtherCostOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedOtherCost.ObjectType, Allors.Meta.M.EstimatedOtherCost.OnPostDerive); 

		public EstimatedOtherCostOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedOtherCostOnPostDeriveMethodInvocation;
			}
		}
	}public partial class BankAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BankAccount.ObjectType, Allors.Meta.M.BankAccount.OnPostDerive); 

		public BankAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditCard.ObjectType, Allors.Meta.M.CreditCard.OnPostDerive); 

		public CreditCardOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardOnPostDeriveMethodInvocation;
			}
		}
	}public partial class InvestmentAccountOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvestmentAccountOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvestmentAccount.ObjectType, Allors.Meta.M.InvestmentAccount.OnPostDerive); 

		public InvestmentAccountOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvestmentAccountOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccountAdjustmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountAdjustmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountAdjustment.ObjectType, Allors.Meta.M.AccountAdjustment.OnPostDerive); 

		public AccountAdjustmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountAdjustmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DepositOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepositOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deposit.ObjectType, Allors.Meta.M.Deposit.OnPostDerive); 

		public DepositOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepositOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FinancialAccountAdjustmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialAccountAdjustmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinancialAccountAdjustment.ObjectType, Allors.Meta.M.FinancialAccountAdjustment.OnPostDerive); 

		public FinancialAccountAdjustmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialAccountAdjustmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class WithdrawalOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WithdrawalOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Withdrawal.ObjectType, Allors.Meta.M.Withdrawal.OnPostDerive); 

		public WithdrawalOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WithdrawalOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EquipmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EquipmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Equipment.ObjectType, Allors.Meta.M.Equipment.OnPostDerive); 

		public EquipmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EquipmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PropertyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PropertyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Property.ObjectType, Allors.Meta.M.Property.OnPostDerive); 

		public PropertyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PropertyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class VehicleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VehicleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Vehicle.ObjectType, Allors.Meta.M.Vehicle.OnPostDerive); 

		public VehicleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VehicleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingConfigurationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingConfigurationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturingConfiguration.ObjectType, Allors.Meta.M.ManufacturingConfiguration.OnPostDerive); 

		public ManufacturingConfigurationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingConfigurationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ServiceConfigurationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceConfigurationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceConfiguration.ObjectType, Allors.Meta.M.ServiceConfiguration.OnPostDerive); 

		public ServiceConfigurationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceConfigurationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class FeeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FeeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Fee.ObjectType, Allors.Meta.M.Fee.OnPostDerive); 

		public FeeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FeeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingChargeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingChargeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShippingAndHandlingCharge.ObjectType, Allors.Meta.M.ShippingAndHandlingCharge.OnPostDerive); 

		public ShippingAndHandlingChargeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingChargeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeAdjustmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeAdjustmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SurchargeAdjustment.ObjectType, Allors.Meta.M.SurchargeAdjustment.OnPostDerive); 

		public SurchargeAdjustmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeAdjustmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringBomOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringBomOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringBom.ObjectType, Allors.Meta.M.EngineeringBom.OnPostDerive); 

		public EngineeringBomOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringBomOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingBomOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingBomOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturingBom.ObjectType, Allors.Meta.M.ManufacturingBom.OnPostDerive); 

		public ManufacturingBomOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingBomOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CustomOrganisationClassificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomOrganisationClassificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomOrganisationClassification.ObjectType, Allors.Meta.M.CustomOrganisationClassification.OnPostDerive); 

		public CustomOrganisationClassificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomOrganisationClassificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class IndustryClassificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IndustryClassificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IndustryClassification.ObjectType, Allors.Meta.M.IndustryClassification.OnPostDerive); 

		public IndustryClassificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IndustryClassificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DiscountComponentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountComponentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountComponent.ObjectType, Allors.Meta.M.DiscountComponent.OnPostDerive); 

		public DiscountComponentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountComponentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturerSuggestedRetailPriceOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturerSuggestedRetailPriceOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturerSuggestedRetailPrice.ObjectType, Allors.Meta.M.ManufacturerSuggestedRetailPrice.OnPostDerive); 

		public ManufacturerSuggestedRetailPriceOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturerSuggestedRetailPriceOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OneTimeChargeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneTimeChargeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OneTimeCharge.ObjectType, Allors.Meta.M.OneTimeCharge.OnPostDerive); 

		public OneTimeChargeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneTimeChargeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RecurringChargeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RecurringChargeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RecurringCharge.ObjectType, Allors.Meta.M.RecurringCharge.OnPostDerive); 

		public RecurringChargeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RecurringChargeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeComponentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeComponentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SurchargeComponent.ObjectType, Allors.Meta.M.SurchargeComponent.OnPostDerive); 

		public SurchargeComponentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeComponentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UtilizationChargeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UtilizationChargeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UtilizationCharge.ObjectType, Allors.Meta.M.UtilizationCharge.OnPostDerive); 

		public UtilizationChargeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UtilizationChargeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MarketingPackageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingPackageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MarketingPackage.ObjectType, Allors.Meta.M.MarketingPackage.OnPostDerive); 

		public MarketingPackageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingPackageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ProductConfigurationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductConfigurationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductConfiguration.ObjectType, Allors.Meta.M.ProductConfiguration.OnPostDerive); 

		public ProductConfigurationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductConfigurationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTurnoverOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTurnoverOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableTurnover.ObjectType, Allors.Meta.M.DeliverableTurnover.OnPostDerive); 

		public DeliverableTurnoverOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTurnoverOnPostDeriveMethodInvocation;
			}
		}
	}public partial class ExpenseEntryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExpenseEntryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ExpenseEntry.ObjectType, Allors.Meta.M.ExpenseEntry.OnPostDerive); 

		public ExpenseEntryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExpenseEntryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MaterialsUsageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaterialsUsageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MaterialsUsage.ObjectType, Allors.Meta.M.MaterialsUsage.OnPostDerive); 

		public MaterialsUsageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaterialsUsageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TimeEntryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeEntryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeEntry.ObjectType, Allors.Meta.M.TimeEntry.OnPostDerive); 

		public TimeEntryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeEntryOnPostDeriveMethodInvocation;
			}
		}
	}
}