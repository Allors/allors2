// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface QuoteVersion :  Version, Allors.IObject
	{


		QuoteState QuoteState
		{ 
			get;
			set;
		}

		bool ExistQuoteState
		{
			get;
		}

		void RemoveQuoteState();


		global::System.String InternalComment 
		{
			get;
			set;
		}

		bool ExistInternalComment{get;}

		void RemoveInternalComment();


		global::System.DateTime? RequiredResponseDate 
		{
			get;
			set;
		}

		bool ExistRequiredResponseDate{get;}

		void RemoveRequiredResponseDate();


		global::System.DateTime? ValidFromDate 
		{
			get;
			set;
		}

		bool ExistValidFromDate{get;}

		void RemoveValidFromDate();


		global::Allors.Extent<QuoteTerm> QuoteTerms
		{ 
			get;
			set;
		}

		void AddQuoteTerm (QuoteTerm value);

		void RemoveQuoteTerm (QuoteTerm value);

		bool ExistQuoteTerms
		{
			get;
		}

		void RemoveQuoteTerms();


		global::System.DateTime? ValidThroughDate 
		{
			get;
			set;
		}

		bool ExistValidThroughDate{get;}

		void RemoveValidThroughDate();


		global::System.String Description 
		{
			get;
			set;
		}

		bool ExistDescription{get;}

		void RemoveDescription();


		Party Receiver
		{ 
			get;
			set;
		}

		bool ExistReceiver
		{
			get;
		}

		void RemoveReceiver();


		ContactMechanism FullfillContactMechanism
		{ 
			get;
			set;
		}

		bool ExistFullfillContactMechanism
		{
			get;
		}

		void RemoveFullfillContactMechanism();


		global::System.Decimal? Price 
		{
			get;
			set;
		}

		bool ExistPrice{get;}

		void RemovePrice();


		Currency Currency
		{ 
			get;
			set;
		}

		bool ExistCurrency
		{
			get;
		}

		void RemoveCurrency();


		global::System.DateTime? IssueDate 
		{
			get;
			set;
		}

		bool ExistIssueDate{get;}

		void RemoveIssueDate();


		global::Allors.Extent<QuoteItem> QuoteItems
		{ 
			get;
			set;
		}

		void AddQuoteItem (QuoteItem value);

		void RemoveQuoteItem (QuoteItem value);

		bool ExistQuoteItems
		{
			get;
		}

		void RemoveQuoteItems();


		global::System.String QuoteNumber 
		{
			get;
			set;
		}

		bool ExistQuoteNumber{get;}

		void RemoveQuoteNumber();


		Request Request
		{ 
			get;
			set;
		}

		bool ExistRequest
		{
			get;
		}

		void RemoveRequest();

	}

	public partial interface QuoteVersionBuilder : VersionBuilder , global::System.IDisposable
	{	
		QuoteState QuoteState {get;}

		

		global::System.String InternalComment {get;}
		

		global::System.DateTime? RequiredResponseDate {get;}
		

		global::System.DateTime? ValidFromDate {get;}
		


		global::System.Collections.Generic.List<QuoteTerm> QuoteTerms {get;}		

		

		global::System.DateTime? ValidThroughDate {get;}
		

		global::System.String Description {get;}
		

		Party Receiver {get;}

		

		ContactMechanism FullfillContactMechanism {get;}

		

		global::System.Decimal? Price {get;}
		

		Currency Currency {get;}

		

		global::System.DateTime? IssueDate {get;}
		


		global::System.Collections.Generic.List<QuoteItem> QuoteItems {get;}		

		

		global::System.String QuoteNumber {get;}
		

		Request Request {get;}

		

	}

	public partial class QuoteVersions : global::Allors.ObjectsBase<QuoteVersion>
	{
		public QuoteVersions(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaQuoteVersion Meta
		{
			get
			{
				return Allors.Meta.MetaQuoteVersion.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}