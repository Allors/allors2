// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface Product :  Commentable,UniquelyIdentifiable,AccessControlledObject,Deletable, Allors.IObject
	{


		global::System.String InternalComment 
		{
			get;
			set;
		}

		bool ExistInternalComment{get;}

		void RemoveInternalComment();


		ProductCategory PrimaryProductCategory
		{ 
			get;
			set;
		}

		bool ExistPrimaryProductCategory
		{
			get;
		}

		void RemovePrimaryProductCategory();


		global::System.DateTime? SupportDiscontinuationDate 
		{
			get;
			set;
		}

		bool ExistSupportDiscontinuationDate{get;}

		void RemoveSupportDiscontinuationDate();


		global::System.DateTime? SalesDiscontinuationDate 
		{
			get;
			set;
		}

		bool ExistSalesDiscontinuationDate{get;}

		void RemoveSalesDiscontinuationDate();


		global::Allors.Extent<LocalisedText> LocalisedNames
		{ 
			get;
			set;
		}

		void AddLocalisedName (LocalisedText value);

		void RemoveLocalisedName (LocalisedText value);

		bool ExistLocalisedNames
		{
			get;
		}

		void RemoveLocalisedNames();


		global::Allors.Extent<LocalisedText> LocalisedDescriptions
		{ 
			get;
			set;
		}

		void AddLocalisedDescription (LocalisedText value);

		void RemoveLocalisedDescription (LocalisedText value);

		bool ExistLocalisedDescriptions
		{
			get;
		}

		void RemoveLocalisedDescriptions();


		global::Allors.Extent<LocalisedText> LocalisedComments
		{ 
			get;
			set;
		}

		void AddLocalisedComment (LocalisedText value);

		void RemoveLocalisedComment (LocalisedText value);

		bool ExistLocalisedComments
		{
			get;
		}

		void RemoveLocalisedComments();


		global::System.String Description 
		{
			get;
			set;
		}

		bool ExistDescription{get;}

		void RemoveDescription();


		global::Allors.Extent<PriceComponent> VirtualProductPriceComponents
		{ 
			get;
			set;
		}

		void AddVirtualProductPriceComponent (PriceComponent value);

		void RemoveVirtualProductPriceComponent (PriceComponent value);

		bool ExistVirtualProductPriceComponents
		{
			get;
		}

		void RemoveVirtualProductPriceComponents();


		global::System.String IntrastatCode 
		{
			get;
			set;
		}

		bool ExistIntrastatCode{get;}

		void RemoveIntrastatCode();


		global::Allors.Extent<ProductCategory> ProductCategoriesExpanded
		{ 
			get;
			set;
		}

		void AddProductCategoriesExpanded (ProductCategory value);

		void RemoveProductCategoriesExpanded (ProductCategory value);

		bool ExistProductCategoriesExpanded
		{
			get;
		}

		void RemoveProductCategoriesExpanded();


		Product ProductComplement
		{ 
			get;
			set;
		}

		bool ExistProductComplement
		{
			get;
		}

		void RemoveProductComplement();


		global::Allors.Extent<ProductFeature> OptionalFeatures
		{ 
			get;
			set;
		}

		void AddOptionalFeature (ProductFeature value);

		void RemoveOptionalFeature (ProductFeature value);

		bool ExistOptionalFeatures
		{
			get;
		}

		void RemoveOptionalFeatures();


		global::Allors.Extent<Product> Variants
		{ 
			get;
			set;
		}

		void AddVariant (Product value);

		void RemoveVariant (Product value);

		bool ExistVariants
		{
			get;
		}

		void RemoveVariants();


		global::System.String Name 
		{
			get;
			set;
		}

		bool ExistName{get;}

		void RemoveName();


		global::System.DateTime? IntroductionDate 
		{
			get;
			set;
		}

		bool ExistIntroductionDate{get;}

		void RemoveIntroductionDate();


		global::Allors.Extent<Document> Documents
		{ 
			get;
			set;
		}

		void AddDocument (Document value);

		void RemoveDocument (Document value);

		bool ExistDocuments
		{
			get;
		}

		void RemoveDocuments();


		global::Allors.Extent<ProductFeature> StandardFeatures
		{ 
			get;
			set;
		}

		void AddStandardFeature (ProductFeature value);

		void RemoveStandardFeature (ProductFeature value);

		bool ExistStandardFeatures
		{
			get;
		}

		void RemoveStandardFeatures();


		UnitOfMeasure UnitOfMeasure
		{ 
			get;
			set;
		}

		bool ExistUnitOfMeasure
		{
			get;
		}

		void RemoveUnitOfMeasure();


		global::Allors.Extent<EstimatedProductCost> EstimatedProductCosts
		{ 
			get;
			set;
		}

		void AddEstimatedProductCost (EstimatedProductCost value);

		void RemoveEstimatedProductCost (EstimatedProductCost value);

		bool ExistEstimatedProductCosts
		{
			get;
		}

		void RemoveEstimatedProductCosts();


		global::Allors.Extent<Product> ProductObsolescences
		{ 
			get;
			set;
		}

		void AddProductObsolescence (Product value);

		void RemoveProductObsolescence (Product value);

		bool ExistProductObsolescences
		{
			get;
		}

		void RemoveProductObsolescences();


		global::Allors.Extent<ProductFeature> SelectableFeatures
		{ 
			get;
			set;
		}

		void AddSelectableFeature (ProductFeature value);

		void RemoveSelectableFeature (ProductFeature value);

		bool ExistSelectableFeatures
		{
			get;
		}

		void RemoveSelectableFeatures();


		VatRate VatRate
		{ 
			get;
			set;
		}

		bool ExistVatRate
		{
			get;
		}

		void RemoveVatRate();


		global::Allors.Extent<PriceComponent> BasePrices
		{ 
			get;
			set;
		}

		void AddBasePrice (PriceComponent value);

		void RemoveBasePrice (PriceComponent value);

		bool ExistBasePrices
		{
			get;
		}

		void RemoveBasePrices();


		global::Allors.Extent<ProductCategory> ProductCategories
		{ 
			get;
			set;
		}

		void AddProductCategory (ProductCategory value);

		void RemoveProductCategory (ProductCategory value);

		bool ExistProductCategories
		{
			get;
		}

		void RemoveProductCategories();



		global::Allors.Extent<GeneralLedgerAccount> GeneralLedgerAccountsWhereDefaultCostUnit
		{ 
			get;
		}

		bool ExistGeneralLedgerAccountsWhereDefaultCostUnit
		{
			get;
		}


		global::Allors.Extent<GeneralLedgerAccount> GeneralLedgerAccountsWhereCostUnitsAllowed
		{ 
			get;
		}

		bool ExistGeneralLedgerAccountsWhereCostUnitsAllowed
		{
			get;
		}


		global::Allors.Extent<Good> GoodsWhereProductSubstitution
		{ 
			get;
		}

		bool ExistGoodsWhereProductSubstitution
		{
			get;
		}


		global::Allors.Extent<Good> GoodsWhereProductIncompatibility
		{ 
			get;
		}

		bool ExistGoodsWhereProductIncompatibility
		{
			get;
		}


		MarketingPackage MarketingPackageWhereProductsUsedIn
		{
			get;
		}

		bool ExistMarketingPackageWhereProductsUsedIn
		{
			get;
		}


		global::Allors.Extent<MarketingPackage> MarketingPackagesWhereProduct
		{ 
			get;
		}

		bool ExistMarketingPackagesWhereProduct
		{
			get;
		}


		global::Allors.Extent<PurchaseOrderItemVersion> PurchaseOrderItemVersionsWhereProduct
		{ 
			get;
		}

		bool ExistPurchaseOrderItemVersionsWhereProduct
		{
			get;
		}


		global::Allors.Extent<QuoteItemVersion> QuoteItemVersionsWhereProduct
		{ 
			get;
		}

		bool ExistQuoteItemVersionsWhereProduct
		{
			get;
		}


		global::Allors.Extent<RequestItemVersion> RequestItemVersionsWhereProduct
		{ 
			get;
		}

		bool ExistRequestItemVersionsWhereProduct
		{
			get;
		}


		global::Allors.Extent<SalesInvoiceItemVersion> SalesInvoiceItemVersionsWhereProduct
		{ 
			get;
		}

		bool ExistSalesInvoiceItemVersionsWhereProduct
		{
			get;
		}


		global::Allors.Extent<SalesOrderItemVersion> SalesOrderItemVersionsWherePreviousProduct
		{ 
			get;
		}

		bool ExistSalesOrderItemVersionsWherePreviousProduct
		{
			get;
		}


		global::Allors.Extent<SalesOrderItemVersion> SalesOrderItemVersionsWhereProduct
		{ 
			get;
		}

		bool ExistSalesOrderItemVersionsWhereProduct
		{
			get;
		}


		global::Allors.Extent<OrganisationGlAccount> OrganisationGlAccountsWhereProduct
		{ 
			get;
		}

		bool ExistOrganisationGlAccountsWhereProduct
		{
			get;
		}


		global::Allors.Extent<PartyProductRevenue> PartyProductRevenuesWhereProduct
		{ 
			get;
		}

		bool ExistPartyProductRevenuesWhereProduct
		{
			get;
		}


		global::Allors.Extent<ProductCategory> ProductCategoriesWhereAllProduct
		{ 
			get;
		}

		bool ExistProductCategoriesWhereAllProduct
		{
			get;
		}


		global::Allors.Extent<ProductConfiguration> ProductConfigurationsWhereProductsUsedIn
		{ 
			get;
		}

		bool ExistProductConfigurationsWhereProductsUsedIn
		{
			get;
		}


		global::Allors.Extent<ProductConfiguration> ProductConfigurationsWhereProduct
		{ 
			get;
		}

		bool ExistProductConfigurationsWhereProduct
		{
			get;
		}


		global::Allors.Extent<ProductFeatureApplicabilityRelationship> ProductFeatureApplicabilityRelationshipsWhereAvailableFor
		{ 
			get;
		}

		bool ExistProductFeatureApplicabilityRelationshipsWhereAvailableFor
		{
			get;
		}


		global::Allors.Extent<ProductRevenue> ProductRevenuesWhereProduct
		{ 
			get;
		}

		bool ExistProductRevenuesWhereProduct
		{
			get;
		}


		global::Allors.Extent<PurchaseOrderItem> PurchaseOrderItemsWhereProduct
		{ 
			get;
		}

		bool ExistPurchaseOrderItemsWhereProduct
		{
			get;
		}


		global::Allors.Extent<QuoteItem> QuoteItemsWhereProduct
		{ 
			get;
		}

		bool ExistQuoteItemsWhereProduct
		{
			get;
		}


		global::Allors.Extent<RequestItem> RequestItemsWhereProduct
		{ 
			get;
		}

		bool ExistRequestItemsWhereProduct
		{
			get;
		}


		global::Allors.Extent<SalesInvoiceItem> SalesInvoiceItemsWhereProduct
		{ 
			get;
		}

		bool ExistSalesInvoiceItemsWhereProduct
		{
			get;
		}


		global::Allors.Extent<SalesOrderItem> SalesOrderItemsWherePreviousProduct
		{ 
			get;
		}

		bool ExistSalesOrderItemsWherePreviousProduct
		{
			get;
		}


		global::Allors.Extent<SalesOrderItem> SalesOrderItemsWhereProduct
		{ 
			get;
		}

		bool ExistSalesOrderItemsWhereProduct
		{
			get;
		}


		global::Allors.Extent<SupplierOffering> SupplierOfferingsWhereProduct
		{ 
			get;
		}

		bool ExistSupplierOfferingsWhereProduct
		{
			get;
		}


		global::Allors.Extent<WorkEffortType> WorkEffortTypesWhereProductToProduce
		{ 
			get;
		}

		bool ExistWorkEffortTypesWhereProductToProduce
		{
			get;
		}


		global::Allors.Extent<EngagementItem> EngagementItemsWhereProduct
		{ 
			get;
		}

		bool ExistEngagementItemsWhereProduct
		{
			get;
		}


		global::Allors.Extent<PriceComponent> PriceComponentsWhereProduct
		{ 
			get;
		}

		bool ExistPriceComponentsWhereProduct
		{
			get;
		}


		global::Allors.Extent<Product> ProductsWhereProductComplement
		{ 
			get;
		}

		bool ExistProductsWhereProductComplement
		{
			get;
		}


		Product ProductWhereVariant
		{
			get;
		}

		bool ExistProductWhereVariant
		{
			get;
		}


		global::Allors.Extent<Product> ProductsWhereProductObsolescence
		{ 
			get;
		}

		bool ExistProductsWhereProductObsolescence
		{
			get;
		}

	}

	public partial interface ProductBuilder : CommentableBuilder ,UniquelyIdentifiableBuilder ,AccessControlledObjectBuilder ,DeletableBuilder , global::System.IDisposable
	{	
		global::System.String InternalComment {get;}
		

		ProductCategory PrimaryProductCategory {get;}

		

		global::System.DateTime? SupportDiscontinuationDate {get;}
		

		global::System.DateTime? SalesDiscontinuationDate {get;}
		


		global::System.Collections.Generic.List<LocalisedText> LocalisedNames {get;}		

		


		global::System.Collections.Generic.List<LocalisedText> LocalisedDescriptions {get;}		

		


		global::System.Collections.Generic.List<LocalisedText> LocalisedComments {get;}		

		

		global::System.String IntrastatCode {get;}
		

		Product ProductComplement {get;}

		


		global::System.Collections.Generic.List<ProductFeature> OptionalFeatures {get;}		

		


		global::System.Collections.Generic.List<Product> Variants {get;}		

		

		global::System.DateTime? IntroductionDate {get;}
		


		global::System.Collections.Generic.List<Document> Documents {get;}		

		


		global::System.Collections.Generic.List<ProductFeature> StandardFeatures {get;}		

		

		UnitOfMeasure UnitOfMeasure {get;}

		


		global::System.Collections.Generic.List<EstimatedProductCost> EstimatedProductCosts {get;}		

		


		global::System.Collections.Generic.List<Product> ProductObsolescences {get;}		

		


		global::System.Collections.Generic.List<ProductFeature> SelectableFeatures {get;}		

		

		VatRate VatRate {get;}

		


		global::System.Collections.Generic.List<ProductCategory> ProductCategories {get;}		

		

	}

	public partial class Products : global::Allors.ObjectsBase<Product>
	{
		public Products(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaProduct Meta
		{
			get
			{
				return Allors.Meta.MetaProduct.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}