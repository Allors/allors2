// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class WebAddress : Allors.IObject , ElectronicAddress
	{
		private readonly IStrategy strategy;

		public WebAddress(Allors.IStrategy strategy) 
		{
			this.strategy = strategy;
		}

		public Allors.Meta.MetaWebAddress Meta
		{
			get
			{
				return Allors.Meta.MetaWebAddress.Instance;
			}
		}

		public long Id
		{
			get { return this.strategy.ObjectId; }
		}

		public IStrategy Strategy
        {
            [System.Diagnostics.DebuggerStepThrough]
            get { return this.strategy; }
        }

		public static WebAddress Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (WebAddress) allorsSession.Instantiate(allorsObjectId);		
		}

		public override bool Equals(object obj)
        {
            var typedObj = obj as IObject;
            return typedObj != null &&
                   typedObj.Strategy.ObjectId.Equals(this.Strategy.ObjectId) &&
                   typedObj.Strategy.Session.Database.Id.Equals(this.Strategy.Session.Database.Id);
        }

		public override int GetHashCode()
        {
            return this.Strategy.ObjectId.GetHashCode();
        }



		virtual public global::System.String ElectronicAddressString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ElectronicAddressString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ElectronicAddressString.RelationType, value);
			}
		}

		virtual public bool ExistElectronicAddressString{
			get
			{
				return Strategy.ExistUnitRole(Meta.ElectronicAddressString.RelationType);
			}
		}

		virtual public void RemoveElectronicAddressString()
		{
			Strategy.RemoveUnitRole(Meta.ElectronicAddressString.RelationType);
		}


		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Description.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Description.RelationType, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.Description.RelationType);
			}
		}

		virtual public void RemoveDescription()
		{
			Strategy.RemoveUnitRole(Meta.Description.RelationType);
		}


		virtual public global::Allors.Extent<ContactMechanism> FollowTo
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.FollowTo.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.FollowTo.RelationType, value);
			}
		}

		virtual public void AddFollowTo (ContactMechanism value)
		{
			Strategy.AddCompositeRole(Meta.FollowTo.RelationType, value);
		}

		virtual public void RemoveFollowTo (ContactMechanism value)
		{
			Strategy.RemoveCompositeRole(Meta.FollowTo.RelationType, value);
		}

		virtual public bool ExistFollowTo
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.FollowTo.RelationType);
			}
		}

		virtual public void RemoveFollowTo()
		{
			Strategy.RemoveCompositeRoles(Meta.FollowTo.RelationType);
		}


		virtual public ContactMechanismType ContactMechanismType
		{ 
			get
			{
				return (ContactMechanismType) Strategy.GetCompositeRole(Meta.ContactMechanismType.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ContactMechanismType.RelationType, value);
			}
		}

		virtual public bool ExistContactMechanismType
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ContactMechanismType.RelationType);
			}
		}

		virtual public void RemoveContactMechanismType()
		{
			Strategy.RemoveCompositeRole(Meta.ContactMechanismType.RelationType);
		}


		virtual public User CreatedBy
		{ 
			get
			{
				return (User) Strategy.GetCompositeRole(Meta.CreatedBy.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CreatedBy.RelationType, value);
			}
		}

		virtual public bool ExistCreatedBy
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CreatedBy.RelationType);
			}
		}

		virtual public void RemoveCreatedBy()
		{
			Strategy.RemoveCompositeRole(Meta.CreatedBy.RelationType);
		}


		virtual public User LastModifiedBy
		{ 
			get
			{
				return (User) Strategy.GetCompositeRole(Meta.LastModifiedBy.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.LastModifiedBy.RelationType, value);
			}
		}

		virtual public bool ExistLastModifiedBy
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.LastModifiedBy.RelationType);
			}
		}

		virtual public void RemoveLastModifiedBy()
		{
			Strategy.RemoveCompositeRole(Meta.LastModifiedBy.RelationType);
		}


		virtual public global::System.DateTime? CreationDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.CreationDate.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.CreationDate.RelationType, value);
			}
		}

		virtual public bool ExistCreationDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.CreationDate.RelationType);
			}
		}

		virtual public void RemoveCreationDate()
		{
			Strategy.RemoveUnitRole(Meta.CreationDate.RelationType);
		}


		virtual public global::System.DateTime? LastModifiedDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.LastModifiedDate.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.LastModifiedDate.RelationType, value);
			}
		}

		virtual public bool ExistLastModifiedDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.LastModifiedDate.RelationType);
			}
		}

		virtual public void RemoveLastModifiedDate()
		{
			Strategy.RemoveUnitRole(Meta.LastModifiedDate.RelationType);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermissions.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermissions.RelationType, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermissions.RelationType, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermissions.RelationType, value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermissions.RelationType);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermissions.RelationType);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityTokens.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityTokens.RelationType, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityTokens.RelationType, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityTokens.RelationType, value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityTokens.RelationType);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityTokens.RelationType);
		}



		virtual public global::Allors.Extent<PartyVersion> PartyVersionsWhereGeneralEmail
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyVersionsWhereGeneralEmail.RelationType);
			}
		}

		virtual public bool ExistPartyVersionsWhereGeneralEmail
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyVersionsWhereGeneralEmail.RelationType);
			}
		}


		virtual public PartyVersion PartyVersionWherePersonalEmailAddress
		{ 
			get
			{
				return (PartyVersion) Strategy.GetCompositeAssociation(Meta.PartyVersionWherePersonalEmailAddress.RelationType);
			}
		} 

		virtual public bool ExistPartyVersionWherePersonalEmailAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.PartyVersionWherePersonalEmailAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<PartyVersion> PartyVersionsWhereInternetAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyVersionsWhereInternetAddress.RelationType);
			}
		}

		virtual public bool ExistPartyVersionsWhereInternetAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyVersionsWhereInternetAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereInternetAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereInternetAddress.RelationType);
			}
		}

		virtual public bool ExistPartiesWhereInternetAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereInternetAddress.RelationType);
			}
		}


		virtual public BankAccount BankAccountWhereContactMechanism
		{ 
			get
			{
				return (BankAccount) Strategy.GetCompositeAssociation(Meta.BankAccountWhereContactMechanism.RelationType);
			}
		} 

		virtual public bool ExistBankAccountWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.BankAccountWhereContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<BillingAccount> BillingAccountsWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.BillingAccountsWhereContactMechanism.RelationType);
			}
		}

		virtual public bool ExistBillingAccountsWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.BillingAccountsWhereContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWherePlacingContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWherePlacingContactMechanism.RelationType);
			}
		}

		virtual public bool ExistEngagementsWherePlacingContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWherePlacingContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWhereBillToContactMechanism.RelationType);
			}
		}

		virtual public bool ExistEngagementsWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWhereBillToContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWhereTakenViaContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWhereTakenViaContactMechanism.RelationType);
			}
		}

		virtual public bool ExistEngagementsWhereTakenViaContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWhereTakenViaContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<Facility> FacilitiesWhereFacilityContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.FacilitiesWhereFacilityContactMechanism.RelationType);
			}
		}

		virtual public bool ExistFacilitiesWhereFacilityContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.FacilitiesWhereFacilityContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereBillingAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereBillingAddress.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereBillingAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereBillingAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereOrderAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereOrderAddress.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereOrderAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereOrderAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereBillingInquiriesFax
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereBillingInquiriesFax.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereBillingInquiriesFax
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereBillingInquiriesFax.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereBillingInquiriesPhone
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereBillingInquiriesPhone.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereBillingInquiriesPhone
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereBillingInquiriesPhone.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereCellPhoneNumber
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereCellPhoneNumber.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereCellPhoneNumber
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereCellPhoneNumber.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereGeneralFaxNumber
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereGeneralFaxNumber.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereGeneralFaxNumber
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereGeneralFaxNumber.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereGeneralPhoneNumber
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereGeneralPhoneNumber.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereGeneralPhoneNumber
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereGeneralPhoneNumber.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereHeadQuarter
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereHeadQuarter.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereHeadQuarter
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereHeadQuarter.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereInternetAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereInternetAddress.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereInternetAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereInternetAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereOrderInquiriesFax
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereOrderInquiriesFax.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereOrderInquiriesFax
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereOrderInquiriesFax.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereOrderInquiriesPhone
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereOrderInquiriesPhone.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereOrderInquiriesPhone
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereOrderInquiriesPhone.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereGeneralEmailAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereGeneralEmailAddress.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereGeneralEmailAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereGeneralEmailAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereSalesOffice
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereSalesOffice.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereSalesOffice
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereSalesOffice.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereShippingInquiriesFax
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereShippingInquiriesFax.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereShippingInquiriesFax
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereShippingInquiriesFax.RelationType);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisation> InternalOrganisationsWhereShippingInquiriesPhone
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationsWhereShippingInquiriesPhone.RelationType);
			}
		}

		virtual public bool ExistInternalOrganisationsWhereShippingInquiriesPhone
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationsWhereShippingInquiriesPhone.RelationType);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrderVersion> PurchaseOrderVersionsWhereTakenViaContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrderVersionsWhereTakenViaContactMechanism.RelationType);
			}
		}

		virtual public bool ExistPurchaseOrderVersionsWhereTakenViaContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrderVersionsWhereTakenViaContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrderVersion> PurchaseOrderVersionsWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrderVersionsWhereBillToContactMechanism.RelationType);
			}
		}

		virtual public bool ExistPurchaseOrderVersionsWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrderVersionsWhereBillToContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesInvoiceVersion> SalesInvoiceVersionsWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoiceVersionsWhereBillToContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesInvoiceVersionsWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoiceVersionsWhereBillToContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesInvoiceVersion> SalesInvoiceVersionsWhereBilledFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoiceVersionsWhereBilledFromContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesInvoiceVersionsWhereBilledFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoiceVersionsWhereBilledFromContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesOrderVersion> SalesOrderVersionsWhereTakenByContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderVersionsWhereTakenByContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesOrderVersionsWhereTakenByContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderVersionsWhereTakenByContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesOrderVersion> SalesOrderVersionsWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderVersionsWhereBillToContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesOrderVersionsWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderVersionsWhereBillToContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesOrderVersion> SalesOrderVersionsWhereBillFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderVersionsWhereBillFromContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesOrderVersionsWhereBillFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderVersionsWhereBillFromContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesOrderVersion> SalesOrderVersionsWherePlacingContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderVersionsWherePlacingContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesOrderVersionsWherePlacingContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderVersionsWherePlacingContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<PartyContactMechanism> PartyContactMechanismsWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyContactMechanismsWhereContactMechanism.RelationType);
			}
		}

		virtual public bool ExistPartyContactMechanismsWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyContactMechanismsWhereContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereTakenViaContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereTakenViaContactMechanism.RelationType);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereTakenViaContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereTakenViaContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereBillToContactMechanism.RelationType);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereBillToContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<RespondingParty> RespondingPartiesWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RespondingPartiesWhereContactMechanism.RelationType);
			}
		}

		virtual public bool ExistRespondingPartiesWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RespondingPartiesWhereContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereBillToContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesInvoicesWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereBillToContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereBilledFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereBilledFromContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesInvoicesWhereBilledFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereBilledFromContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereTakenByContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereTakenByContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesOrdersWhereTakenByContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereTakenByContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereBillToContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesOrdersWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereBillToContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereBillFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereBillFromContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesOrdersWhereBillFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereBillFromContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWherePlacingContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWherePlacingContactMechanism.RelationType);
			}
		}

		virtual public bool ExistSalesOrdersWherePlacingContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWherePlacingContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<CommunicationEventVersion> CommunicationEventVersionsWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.CommunicationEventVersionsWhereContactMechanism.RelationType);
			}
		}

		virtual public bool ExistCommunicationEventVersionsWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.CommunicationEventVersionsWhereContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<CommunicationEvent> CommunicationEventsWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.CommunicationEventsWhereContactMechanism.RelationType);
			}
		}

		virtual public bool ExistCommunicationEventsWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.CommunicationEventsWhereContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<ContactMechanism> ContactMechanismsWhereFollowTo
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ContactMechanismsWhereFollowTo.RelationType);
			}
		}

		virtual public bool ExistContactMechanismsWhereFollowTo
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ContactMechanismsWhereFollowTo.RelationType);
			}
		}


		virtual public global::Allors.Extent<PartyVersion> PartyVersionsWhereHomeAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyVersionsWhereHomeAddress.RelationType);
			}
		}

		virtual public bool ExistPartyVersionsWhereHomeAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyVersionsWhereHomeAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<PartyVersion> PartyVersionsWhereSalesOffice
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyVersionsWhereSalesOffice.RelationType);
			}
		}

		virtual public bool ExistPartyVersionsWhereSalesOffice
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyVersionsWhereSalesOffice.RelationType);
			}
		}


		virtual public global::Allors.Extent<PartyVersion> PartyVersionsWhereBillingAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyVersionsWhereBillingAddress.RelationType);
			}
		}

		virtual public bool ExistPartyVersionsWhereBillingAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyVersionsWhereBillingAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<PartyVersion> PartyVersionsWhereHeadQuarter
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyVersionsWhereHeadQuarter.RelationType);
			}
		}

		virtual public bool ExistPartyVersionsWhereHeadQuarter
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyVersionsWhereHeadQuarter.RelationType);
			}
		}


		virtual public global::Allors.Extent<PartyVersion> PartyVersionsWhereOrderAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyVersionsWhereOrderAddress.RelationType);
			}
		}

		virtual public bool ExistPartyVersionsWhereOrderAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyVersionsWhereOrderAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<QuoteVersion> QuoteVersionsWhereFullfillContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.QuoteVersionsWhereFullfillContactMechanism.RelationType);
			}
		}

		virtual public bool ExistQuoteVersionsWhereFullfillContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.QuoteVersionsWhereFullfillContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<RequestVersion> RequestVersionsWhereFullfillContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequestVersionsWhereFullfillContactMechanism.RelationType);
			}
		}

		virtual public bool ExistRequestVersionsWhereFullfillContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequestVersionsWhereFullfillContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereHomeAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereHomeAddress.RelationType);
			}
		}

		virtual public bool ExistPartiesWhereHomeAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereHomeAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereSalesOffice
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereSalesOffice.RelationType);
			}
		}

		virtual public bool ExistPartiesWhereSalesOffice
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereSalesOffice.RelationType);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereBillingAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereBillingAddress.RelationType);
			}
		}

		virtual public bool ExistPartiesWhereBillingAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereBillingAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereHeadQuarter
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereHeadQuarter.RelationType);
			}
		}

		virtual public bool ExistPartiesWhereHeadQuarter
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereHeadQuarter.RelationType);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereOrderAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereOrderAddress.RelationType);
			}
		}

		virtual public bool ExistPartiesWhereOrderAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereOrderAddress.RelationType);
			}
		}


		virtual public global::Allors.Extent<Quote> QuotesWhereFullfillContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.QuotesWhereFullfillContactMechanism.RelationType);
			}
		}

		virtual public bool ExistQuotesWhereFullfillContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.QuotesWhereFullfillContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<Request> RequestsWhereFullfillContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequestsWhereFullfillContactMechanism.RelationType);
			}
		}

		virtual public bool ExistRequestsWhereFullfillContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequestsWhereFullfillContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<ShipmentVersion> ShipmentVersionsWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentVersionsWhereBillToContactMechanism.RelationType);
			}
		}

		virtual public bool ExistShipmentVersionsWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentVersionsWhereBillToContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<ShipmentVersion> ShipmentVersionsWhereReceiverContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentVersionsWhereReceiverContactMechanism.RelationType);
			}
		}

		virtual public bool ExistShipmentVersionsWhereReceiverContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentVersionsWhereReceiverContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<ShipmentVersion> ShipmentVersionsWhereInquireAboutContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentVersionsWhereInquireAboutContactMechanism.RelationType);
			}
		}

		virtual public bool ExistShipmentVersionsWhereInquireAboutContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentVersionsWhereInquireAboutContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<ShipmentVersion> ShipmentVersionsWhereBillFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentVersionsWhereBillFromContactMechanism.RelationType);
			}
		}

		virtual public bool ExistShipmentVersionsWhereBillFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentVersionsWhereBillFromContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereBillToContactMechanism.RelationType);
			}
		}

		virtual public bool ExistShipmentsWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereBillToContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereReceiverContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereReceiverContactMechanism.RelationType);
			}
		}

		virtual public bool ExistShipmentsWhereReceiverContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereReceiverContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereInquireAboutContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereInquireAboutContactMechanism.RelationType);
			}
		}

		virtual public bool ExistShipmentsWhereInquireAboutContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereInquireAboutContactMechanism.RelationType);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereBillFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereBillFromContactMechanism.RelationType);
			}
		}

		virtual public bool ExistShipmentsWhereBillFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereBillFromContactMechanism.RelationType);
			}
		}



		public ObjectOnBuild OnBuild()
		{ 
			var method = new WebAddressOnBuild(this);
            method.Execute();
            return method;
		}

		public ObjectOnBuild OnBuild(System.Action<ObjectOnBuild> action)
		{ 
			var method = new WebAddressOnBuild(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnPostBuild OnPostBuild()
		{ 
			var method = new WebAddressOnPostBuild(this);
            method.Execute();
            return method;
		}

		public ObjectOnPostBuild OnPostBuild(System.Action<ObjectOnPostBuild> action)
		{ 
			var method = new WebAddressOnPostBuild(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnPreDerive OnPreDerive()
		{ 
			var method = new WebAddressOnPreDerive(this);
            method.Execute();
            return method;
		}

		public ObjectOnPreDerive OnPreDerive(System.Action<ObjectOnPreDerive> action)
		{ 
			var method = new WebAddressOnPreDerive(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnDerive OnDerive()
		{ 
			var method = new WebAddressOnDerive(this);
            method.Execute();
            return method;
		}

		public ObjectOnDerive OnDerive(System.Action<ObjectOnDerive> action)
		{ 
			var method = new WebAddressOnDerive(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnPostDerive OnPostDerive()
		{ 
			var method = new WebAddressOnPostDerive(this);
            method.Execute();
            return method;
		}

		public ObjectOnPostDerive OnPostDerive(System.Action<ObjectOnPostDerive> action)
		{ 
			var method = new WebAddressOnPostDerive(this);
            action(method);
            method.Execute();
            return method;
		}

		public DeletableDelete Delete()
		{ 
			var method = new WebAddressDelete(this);
            method.Execute();
            return method;
		}

		public DeletableDelete Delete(System.Action<DeletableDelete> action)
		{ 
			var method = new WebAddressDelete(this);
            action(method);
            method.Execute();
            return method;
		}
	}

	public partial class WebAddressBuilder : Allors.ObjectBuilder<WebAddress> , ElectronicAddressBuilder, global::System.IDisposable
	{		
		public WebAddressBuilder(Allors.ISession session) : base(session)
	    {
	    }

		protected override void OnBuild(WebAddress instance)
		{

			instance.ElectronicAddressString = this.ElectronicAddressString;
		
		

			instance.Description = this.Description;
		
		
			

			if(this.CreationDate.HasValue)
			{
				instance.CreationDate = this.CreationDate.Value;
			}			
		
		
			

			if(this.LastModifiedDate.HasValue)
			{
				instance.LastModifiedDate = this.LastModifiedDate.Value;
			}			
		
		
			if(this.FollowTo!=null)
			{
				instance.FollowTo = this.FollowTo.ToArray();
			}
		

			instance.ContactMechanismType = this.ContactMechanismType;

		

			instance.CreatedBy = this.CreatedBy;

		

			instance.LastModifiedBy = this.LastModifiedBy;

		
			if(this.DeniedPermissions!=null)
			{
				instance.DeniedPermissions = this.DeniedPermissions.ToArray();
			}
		
			if(this.SecurityTokens!=null)
			{
				instance.SecurityTokens = this.SecurityTokens.ToArray();
			}
		
		}


				public global::System.String ElectronicAddressString {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithElectronicAddressString(global::System.String value)
		        {
				    if(this.ElectronicAddressString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ElectronicAddressString = value;
		            return this;
		        }	

				public global::System.String Description {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithDescription(global::System.String value)
		        {
				    if(this.Description!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Description = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<ContactMechanism> FollowTo {get; set;}	

				/// <exclude/>
				public WebAddressBuilder WithFollowTo(ContactMechanism value)
		        {
					if(this.FollowTo == null)
					{
						this.FollowTo = new global::System.Collections.Generic.List<ContactMechanism>(); 
					}
		            this.FollowTo.Add(value);
		            return this;
		        }		

				
				public ContactMechanismType ContactMechanismType {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithContactMechanismType(ContactMechanismType value)
		        {
		            if(this.ContactMechanismType!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ContactMechanismType = value;
		            return this;
		        }		

				
				public User CreatedBy {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithCreatedBy(User value)
		        {
		            if(this.CreatedBy!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CreatedBy = value;
		            return this;
		        }		

				
				public User LastModifiedBy {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithLastModifiedBy(User value)
		        {
		            if(this.LastModifiedBy!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.LastModifiedBy = value;
		            return this;
		        }		

				
				public global::System.DateTime? CreationDate {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithCreationDate(global::System.DateTime? value)
		        {
				    if(this.CreationDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.CreationDate = value;
		            return this;
		        }	

				public global::System.DateTime? LastModifiedDate {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithLastModifiedDate(global::System.DateTime? value)
		        {
				    if(this.LastModifiedDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.LastModifiedDate = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public WebAddressBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public WebAddressBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				

	}

	public partial class WebAddresses : global::Allors.ObjectsBase<WebAddress>
	{
		public WebAddresses(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaWebAddress Meta
		{
			get
			{
				return Allors.Meta.MetaWebAddress.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}