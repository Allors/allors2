// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPostBuild : Allors.Meta.Method
	{
		protected ObjectOnPostBuild(Object @object) : base(@object)
		{
		}
	}

	public partial class EmailMessageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnPostBuild); 

		public EmailMessageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnPostBuildMethodInvocation;
			}
		}
	}public partial class EventOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EventOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Event.ObjectType, Allors.Meta.M.Event.OnPostBuild); 

		public EventOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventOnPostBuildMethodInvocation;
			}
		}
	}public partial class EventRegistrationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EventRegistrationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EventRegistration.ObjectType, Allors.Meta.M.EventRegistration.OnPostBuild); 

		public EventRegistrationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventRegistrationOnPostBuildMethodInvocation;
			}
		}
	}public partial class FiscalYearInvoiceNumberOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FiscalYearInvoiceNumberOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FiscalYearInvoiceNumber.ObjectType, Allors.Meta.M.FiscalYearInvoiceNumber.OnPostBuild); 

		public FiscalYearInvoiceNumberOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FiscalYearInvoiceNumberOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderItemBillingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderItemBillingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderItemBilling.ObjectType, Allors.Meta.M.OrderItemBilling.OnPostBuild); 

		public OrderItemBillingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderItemBillingOnPostBuildMethodInvocation;
			}
		}
	}public partial class ServiceEntryBillingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryBillingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceEntryBilling.ObjectType, Allors.Meta.M.ServiceEntryBilling.OnPostBuild); 

		public ServiceEntryBillingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryBillingOnPostBuildMethodInvocation;
			}
		}
	}public partial class TransitionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Transition.ObjectType, Allors.Meta.M.Transition.OnPostBuild); 

		public TransitionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortBillingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortBillingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortBilling.ObjectType, Allors.Meta.M.WorkEffortBilling.OnPostBuild); 

		public WorkEffortBillingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortBillingOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccessControlOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnPostBuild); 

		public AccessControlOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnPostBuild); 

		public MediaOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaContentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnPostBuild); 

		public MediaContentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPostBuildMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnPostBuild); 

		public LocalisedTextOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPostBuildMethodInvocation;
			}
		}
	}public partial class LoginOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnPostBuild); 

		public LoginOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPostBuildMethodInvocation;
			}
		}
	}public partial class PermissionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnPostBuild); 

		public PermissionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnPostBuild); 

		public SecurityTokenOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPostBuildMethodInvocation;
			}
		}
	}public partial class NotificationListOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnPostBuild); 

		public NotificationListOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnPostBuild); 

		public PersonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnPostBuild); 

		public TaskAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaskListOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnPostBuild); 

		public TaskListOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnPostBuildMethodInvocation;
			}
		}
	}public partial class CatalogueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CatalogueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Catalogue.ObjectType, Allors.Meta.M.Catalogue.OnPostBuild); 

		public CatalogueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CatalogueOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerRelationship.ObjectType, Allors.Meta.M.CustomerRelationship.OnPostBuild); 

		public CustomerRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Employment.ObjectType, Allors.Meta.M.Employment.OnPostBuild); 

		public EmploymentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentOnPostBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InternalOrganisationRevenue.ObjectType, Allors.Meta.M.InternalOrganisationRevenue.OnPostBuild); 

		public InternalOrganisationRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class ItemIssuanceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ItemIssuance.ObjectType, Allors.Meta.M.ItemIssuance.OnPostBuild); 

		public ItemIssuanceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderShipmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderShipment.ObjectType, Allors.Meta.M.OrderShipment.OnPostBuild); 

		public OrderShipmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnPostBuild); 

		public OrganisationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackageRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackageRevenue.ObjectType, Allors.Meta.M.PackageRevenue.OnPostBuild); 

		public PackageRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyContactMechanismOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyContactMechanismOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyContactMechanism.ObjectType, Allors.Meta.M.PartyContactMechanism.OnPostBuild); 

		public PartyContactMechanismOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyContactMechanismOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyPackageRevenue.ObjectType, Allors.Meta.M.PartyPackageRevenue.OnPostBuild); 

		public PartyPackageRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyProductCategoryRevenue.ObjectType, Allors.Meta.M.PartyProductCategoryRevenue.OnPostBuild); 

		public PartyProductCategoryRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyProductRevenue.ObjectType, Allors.Meta.M.PartyProductRevenue.OnPostBuild); 

		public PartyProductRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyRevenue.ObjectType, Allors.Meta.M.PartyRevenue.OnPostBuild); 

		public PartyRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class PickListItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListItem.ObjectType, Allors.Meta.M.PickListItem.OnPostBuild); 

		public PickListItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class PostalBoundaryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalBoundaryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalBoundary.ObjectType, Allors.Meta.M.PostalBoundary.OnPostBuild); 

		public PostalBoundaryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalBoundaryOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductCategoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCategory.ObjectType, Allors.Meta.M.ProductCategory.OnPostBuild); 

		public ProductCategoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCategoryRevenue.ObjectType, Allors.Meta.M.ProductCategoryRevenue.OnPostBuild); 

		public ProductCategoryRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductCharacteristicValueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCharacteristicValueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCharacteristicValue.ObjectType, Allors.Meta.M.ProductCharacteristicValue.OnPostBuild); 

		public ProductCharacteristicValueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCharacteristicValueOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductRevenue.ObjectType, Allors.Meta.M.ProductRevenue.OnPostBuild); 

		public ProductRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class QuoteItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItem.ObjectType, Allors.Meta.M.QuoteItem.OnPostBuild); 

		public QuoteItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItem.ObjectType, Allors.Meta.M.RequestItem.OnPostBuild); 

		public RequestItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesChannelRevenue.ObjectType, Allors.Meta.M.SalesChannelRevenue.OnPostBuild); 

		public SalesChannelRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepPartyProductCategoryRevenue.ObjectType, Allors.Meta.M.SalesRepPartyProductCategoryRevenue.OnPostBuild); 

		public SalesRepPartyProductCategoryRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepPartyRevenue.ObjectType, Allors.Meta.M.SalesRepPartyRevenue.OnPostBuild); 

		public SalesRepPartyRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepProductCategoryRevenue.ObjectType, Allors.Meta.M.SalesRepProductCategoryRevenue.OnPostBuild); 

		public SalesRepProductCategoryRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepRevenue.ObjectType, Allors.Meta.M.SalesRepRevenue.OnPostBuild); 

		public SalesRepRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentItem.ObjectType, Allors.Meta.M.ShipmentItem.OnPostBuild); 

		public ShipmentItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class StoreRevenueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StoreRevenue.ObjectType, Allors.Meta.M.StoreRevenue.OnPostBuild); 

		public StoreRevenueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueOnPostBuildMethodInvocation;
			}
		}
	}public partial class SupplierRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SupplierRelationship.ObjectType, Allors.Meta.M.SupplierRelationship.OnPostBuild); 

		public SupplierRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortAssignment.ObjectType, Allors.Meta.M.WorkEffortAssignment.OnPostBuild); 

		public WorkEffortAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmailCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailCommunication.ObjectType, Allors.Meta.M.EmailCommunication.OnPostBuild); 

		public EmailCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaceToFaceCommunication.ObjectType, Allors.Meta.M.FaceToFaceCommunication.OnPostBuild); 

		public FaceToFaceCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class FaxCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaxCommunication.ObjectType, Allors.Meta.M.FaxCommunication.OnPostBuild); 

		public FaxCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LetterCorrespondence.ObjectType, Allors.Meta.M.LetterCorrespondence.OnPostBuild); 

		public LetterCorrespondenceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceOnPostBuildMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PhoneCommunication.ObjectType, Allors.Meta.M.PhoneCommunication.OnPostBuild); 

		public PhoneCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebSiteCommunication.ObjectType, Allors.Meta.M.WebSiteCommunication.OnPostBuild); 

		public WebSiteCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class PostalAddressOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalAddressOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalAddress.ObjectType, Allors.Meta.M.PostalAddress.OnPostBuild); 

		public PostalAddressOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalAddressOnPostBuildMethodInvocation;
			}
		}
	}public partial class TelecommunicationsNumberOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TelecommunicationsNumberOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TelecommunicationsNumber.ObjectType, Allors.Meta.M.TelecommunicationsNumber.OnPostBuild); 

		public TelecommunicationsNumberOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TelecommunicationsNumberOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmailAddressOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailAddressOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailAddress.ObjectType, Allors.Meta.M.EmailAddress.OnPostBuild); 

		public EmailAddressOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailAddressOnPostBuildMethodInvocation;
			}
		}
	}public partial class WebAddressOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WebAddressOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebAddress.ObjectType, Allors.Meta.M.WebAddress.OnPostBuild); 

		public WebAddressOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebAddressOnPostBuildMethodInvocation;
			}
		}
	}public partial class EstimatedLaborCostOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedLaborCostOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedLaborCost.ObjectType, Allors.Meta.M.EstimatedLaborCost.OnPostBuild); 

		public EstimatedLaborCostOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedLaborCostOnPostBuildMethodInvocation;
			}
		}
	}public partial class EstimatedMaterialCostOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedMaterialCostOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedMaterialCost.ObjectType, Allors.Meta.M.EstimatedMaterialCost.OnPostBuild); 

		public EstimatedMaterialCostOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedMaterialCostOnPostBuildMethodInvocation;
			}
		}
	}public partial class EstimatedOtherCostOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedOtherCostOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedOtherCost.ObjectType, Allors.Meta.M.EstimatedOtherCost.OnPostBuild); 

		public EstimatedOtherCostOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedOtherCostOnPostBuildMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItemVersion.ObjectType, Allors.Meta.M.NonSerialisedInventoryItemVersion.OnPostBuild); 

		public NonSerialisedInventoryItemVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItemVersion.ObjectType, Allors.Meta.M.SerialisedInventoryItemVersion.OnPostBuild); 

		public SerialisedInventoryItemVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItem.ObjectType, Allors.Meta.M.NonSerialisedInventoryItem.OnPostBuild); 

		public NonSerialisedInventoryItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItem.ObjectType, Allors.Meta.M.SerialisedInventoryItem.OnPostBuild); 

		public SerialisedInventoryItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItem.ObjectType, Allors.Meta.M.PurchaseInvoiceItem.OnPostBuild); 

		public PurchaseInvoiceItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItem.ObjectType, Allors.Meta.M.SalesInvoiceItem.OnPostBuild); 

		public SalesInvoiceItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationContactRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationContactRelationship.ObjectType, Allors.Meta.M.OrganisationContactRelationship.OnPostBuild); 

		public OrganisationContactRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationRollUpOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRollUpOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationRollUp.ObjectType, Allors.Meta.M.OrganisationRollUp.OnPostBuild); 

		public OrganisationRollUpOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRollUpOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalServicesRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalServicesRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalServicesRelationship.ObjectType, Allors.Meta.M.ProfessionalServicesRelationship.OnPostBuild); 

		public ProfessionalServicesRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalServicesRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepRelationship.ObjectType, Allors.Meta.M.SalesRepRelationship.OnPostBuild); 

		public SalesRepRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class SubContractorRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubContractorRelationship.ObjectType, Allors.Meta.M.SubContractorRelationship.OnPostBuild); 

		public SubContractorRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItem.ObjectType, Allors.Meta.M.PurchaseOrderItem.OnPostBuild); 

		public PurchaseOrderItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItem.ObjectType, Allors.Meta.M.SalesOrderItem.OnPostBuild); 

		public SalesOrderItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class BasePriceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BasePrice.ObjectType, Allors.Meta.M.BasePrice.OnPostBuild); 

		public BasePriceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceOnPostBuildMethodInvocation;
			}
		}
	}public partial class DiscountComponentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountComponentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountComponent.ObjectType, Allors.Meta.M.DiscountComponent.OnPostBuild); 

		public DiscountComponentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountComponentOnPostBuildMethodInvocation;
			}
		}
	}public partial class ManufacturerSuggestedRetailPriceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturerSuggestedRetailPriceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturerSuggestedRetailPrice.ObjectType, Allors.Meta.M.ManufacturerSuggestedRetailPrice.OnPostBuild); 

		public ManufacturerSuggestedRetailPriceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturerSuggestedRetailPriceOnPostBuildMethodInvocation;
			}
		}
	}public partial class OneTimeChargeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OneTimeChargeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OneTimeCharge.ObjectType, Allors.Meta.M.OneTimeCharge.OnPostBuild); 

		public OneTimeChargeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneTimeChargeOnPostBuildMethodInvocation;
			}
		}
	}public partial class RecurringChargeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RecurringChargeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RecurringCharge.ObjectType, Allors.Meta.M.RecurringCharge.OnPostBuild); 

		public RecurringChargeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RecurringChargeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SurchargeComponentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeComponentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SurchargeComponent.ObjectType, Allors.Meta.M.SurchargeComponent.OnPostBuild); 

		public SurchargeComponentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeComponentOnPostBuildMethodInvocation;
			}
		}
	}public partial class UtilizationChargeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UtilizationChargeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UtilizationCharge.ObjectType, Allors.Meta.M.UtilizationCharge.OnPostBuild); 

		public UtilizationChargeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UtilizationChargeOnPostBuildMethodInvocation;
			}
		}
	}public partial class GoodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Good.ObjectType, Allors.Meta.M.Good.OnPostBuild); 

		public GoodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeliverableBasedServiceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableBasedServiceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableBasedService.ObjectType, Allors.Meta.M.DeliverableBasedService.OnPostBuild); 

		public DeliverableBasedServiceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableBasedServiceOnPostBuildMethodInvocation;
			}
		}
	}public partial class TimeAndMaterialsServiceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeAndMaterialsServiceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeAndMaterialsService.ObjectType, Allors.Meta.M.TimeAndMaterialsService.OnPostBuild); 

		public TimeAndMaterialsServiceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeAndMaterialsServiceOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkTaskOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkTaskOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkTask.ObjectType, Allors.Meta.M.WorkTask.OnPostBuild); 

		public WorkTaskOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkTaskOnPostBuildMethodInvocation;
			}
		}
	}public partial class CounterOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnPostBuild); 

		public CounterOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPostBuildMethodInvocation;
			}
		}
	}public partial class RoleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnPostBuild); 

		public RoleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPostBuildMethodInvocation;
			}
		}
	}public partial class UserGroupOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnPostBuild); 

		public UserGroupOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPostBuildMethodInvocation;
			}
		}
	}public partial class CarrierOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CarrierOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Carrier.ObjectType, Allors.Meta.M.Carrier.OnPostBuild); 

		public CarrierOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CarrierOnPostBuildMethodInvocation;
			}
		}
	}public partial class CaseOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Case.ObjectType, Allors.Meta.M.Case.OnPostBuild); 

		public CaseOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseOnPostBuildMethodInvocation;
			}
		}
	}public partial class ChartOfAccountsOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ChartOfAccountsOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ChartOfAccounts.ObjectType, Allors.Meta.M.ChartOfAccounts.OnPostBuild); 

		public ChartOfAccountsOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ChartOfAccountsOnPostBuildMethodInvocation;
			}
		}
	}public partial class CostCenterOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenter.ObjectType, Allors.Meta.M.CostCenter.OnPostBuild); 

		public CostCenterOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterOnPostBuildMethodInvocation;
			}
		}
	}public partial class CostCenterCategoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterCategoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenterCategory.ObjectType, Allors.Meta.M.CostCenterCategory.OnPostBuild); 

		public CostCenterCategoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterCategoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccount.ObjectType, Allors.Meta.M.GeneralLedgerAccount.OnPostBuild); 

		public GeneralLedgerAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InternalOrganisation.ObjectType, Allors.Meta.M.InternalOrganisation.OnPostBuild); 

		public InternalOrganisationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderKindOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderKindOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderKind.ObjectType, Allors.Meta.M.OrderKind.OnPostBuild); 

		public OrderKindOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderKindOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationContactKindOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactKindOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationContactKind.ObjectType, Allors.Meta.M.OrganisationContactKind.OnPostBuild); 

		public OrganisationContactKindOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactKindOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Package.ObjectType, Allors.Meta.M.Package.OnPostBuild); 

		public PackageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecification.ObjectType, Allors.Meta.M.PartSpecification.OnPostBuild); 

		public PartSpecificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductType.ObjectType, Allors.Meta.M.ProductType.OnPostBuild); 

		public ProductTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequirementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Requirement.ObjectType, Allors.Meta.M.Requirement.OnPostBuild); 

		public RequirementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentPackageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentPackageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentPackage.ObjectType, Allors.Meta.M.ShipmentPackage.OnPostBuild); 

		public ShipmentPackageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentPackageOnPostBuildMethodInvocation;
			}
		}
	}public partial class StoreOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StoreOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Store.ObjectType, Allors.Meta.M.Store.OnPostBuild); 

		public StoreOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreOnPostBuildMethodInvocation;
			}
		}
	}public partial class StringTemplateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StringTemplate.ObjectType, Allors.Meta.M.StringTemplate.OnPostBuild); 

		public StringTemplateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccountingTransactionTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionType.ObjectType, Allors.Meta.M.AccountingTransactionType.OnPostBuild); 

		public AccountingTransactionTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class AssetAssignmentStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AssetAssignmentStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AssetAssignmentStatus.ObjectType, Allors.Meta.M.AssetAssignmentStatus.OnPostBuild); 

		public AssetAssignmentStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AssetAssignmentStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class CatScopeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CatScopeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CatScope.ObjectType, Allors.Meta.M.CatScope.OnPostBuild); 

		public CatScopeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CatScopeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ColourOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ColourOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Colour.ObjectType, Allors.Meta.M.Colour.OnPostBuild); 

		public ColourOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ColourOnPostBuildMethodInvocation;
			}
		}
	}public partial class CommunicationEventPurposeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventPurposeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CommunicationEventPurpose.ObjectType, Allors.Meta.M.CommunicationEventPurpose.OnPostBuild); 

		public CommunicationEventPurposeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventPurposeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ContactMechanismPurposeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismPurposeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ContactMechanismPurpose.ObjectType, Allors.Meta.M.ContactMechanismPurpose.OnPostBuild); 

		public ContactMechanismPurposeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismPurposeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ContactMechanismTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ContactMechanismType.ObjectType, Allors.Meta.M.ContactMechanismType.OnPostBuild); 

		public ContactMechanismTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class CostCenterSplitMethodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterSplitMethodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenterSplitMethod.ObjectType, Allors.Meta.M.CostCenterSplitMethod.OnPostBuild); 

		public CostCenterSplitMethodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterSplitMethodOnPostBuildMethodInvocation;
			}
		}
	}public partial class CostOfGoodsSoldMethodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostOfGoodsSoldMethodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostOfGoodsSoldMethod.ObjectType, Allors.Meta.M.CostOfGoodsSoldMethod.OnPostBuild); 

		public CostOfGoodsSoldMethodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostOfGoodsSoldMethodOnPostBuildMethodInvocation;
			}
		}
	}public partial class DebitCreditConstantOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DebitCreditConstantOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DebitCreditConstant.ObjectType, Allors.Meta.M.DebitCreditConstant.OnPostBuild); 

		public DebitCreditConstantOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DebitCreditConstantOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeductionTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeductionType.ObjectType, Allors.Meta.M.DeductionType.OnPostBuild); 

		public DeductionTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeliverableTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableType.ObjectType, Allors.Meta.M.DeliverableType.OnPostBuild); 

		public DeliverableTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class DunningTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DunningTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DunningType.ObjectType, Allors.Meta.M.DunningType.OnPostBuild); 

		public DunningTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DunningTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationSourceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationSourceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplicationSource.ObjectType, Allors.Meta.M.EmploymentApplicationSource.OnPostBuild); 

		public EmploymentApplicationSourceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationSourceOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplicationStatus.ObjectType, Allors.Meta.M.EmploymentApplicationStatus.OnPostBuild); 

		public EmploymentApplicationStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentTermination.ObjectType, Allors.Meta.M.EmploymentTermination.OnPostBuild); 

		public EmploymentTerminationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationReasonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationReasonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentTerminationReason.ObjectType, Allors.Meta.M.EmploymentTerminationReason.OnPostBuild); 

		public EmploymentTerminationReasonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationReasonOnPostBuildMethodInvocation;
			}
		}
	}public partial class EuSalesListTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EuSalesListTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EuSalesListType.ObjectType, Allors.Meta.M.EuSalesListType.OnPostBuild); 

		public EuSalesListTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EuSalesListTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class FacilityTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FacilityTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FacilityType.ObjectType, Allors.Meta.M.FacilityType.OnPostBuild); 

		public FacilityTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FacilityTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class GenderTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GenderTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GenderType.ObjectType, Allors.Meta.M.GenderType.OnPostBuild); 

		public GenderTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class HobbyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HobbyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Hobby.ObjectType, Allors.Meta.M.Hobby.OnPostBuild); 

		public HobbyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HobbyOnPostBuildMethodInvocation;
			}
		}
	}public partial class InventoryItemKindOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemKindOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InventoryItemKind.ObjectType, Allors.Meta.M.InventoryItemKind.OnPostBuild); 

		public InventoryItemKindOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemKindOnPostBuildMethodInvocation;
			}
		}
	}public partial class InvoiceSequenceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceSequenceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceSequence.ObjectType, Allors.Meta.M.InvoiceSequence.OnPostBuild); 

		public InvoiceSequenceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceSequenceOnPostBuildMethodInvocation;
			}
		}
	}public partial class JournalTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalType.ObjectType, Allors.Meta.M.JournalType.OnPostBuild); 

		public JournalTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class MaritalStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MaritalStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MaritalStatus.ObjectType, Allors.Meta.M.MaritalStatus.OnPostBuild); 

		public MaritalStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaritalStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class ModelOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ModelOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Model.ObjectType, Allors.Meta.M.Model.OnPostBuild); 

		public ModelOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ModelOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationType.ObjectType, Allors.Meta.M.PartSpecificationType.OnPostBuild); 

		public PartSpecificationTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class OwnershipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OwnershipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Ownership.ObjectType, Allors.Meta.M.Ownership.OnPostBuild); 

		public OwnershipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnershipOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProcessFlowOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProcessFlowOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProcessFlow.ObjectType, Allors.Meta.M.ProcessFlow.OnPostBuild); 

		public ProcessFlowOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProcessFlowOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrdinalOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrdinalOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Ordinal.ObjectType, Allors.Meta.M.Ordinal.OnPostBuild); 

		public OrdinalOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrdinalOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationRoleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRoleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationRole.ObjectType, Allors.Meta.M.OrganisationRole.OnPostBuild); 

		public OrganisationRoleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRoleOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationUnitOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationUnitOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationUnit.ObjectType, Allors.Meta.M.OrganisationUnit.OnPostBuild); 

		public OrganisationUnitOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationUnitOnPostBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReviewItemType.ObjectType, Allors.Meta.M.PerformanceReviewItemType.OnPostBuild); 

		public PerformanceReviewItemTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonalTitleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonalTitleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonalTitle.ObjectType, Allors.Meta.M.PersonalTitle.OnPostBuild); 

		public PersonalTitleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonalTitleOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonRoleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonRoleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonRole.ObjectType, Allors.Meta.M.PersonRole.OnPostBuild); 

		public PersonRoleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonRoleOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionStatus.ObjectType, Allors.Meta.M.PositionStatus.OnPostBuild); 

		public PositionStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class PriorityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PriorityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Priority.ObjectType, Allors.Meta.M.Priority.OnPostBuild); 

		public PriorityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PriorityOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductCharacteristicOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCharacteristicOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCharacteristic.ObjectType, Allors.Meta.M.ProductCharacteristic.OnPostBuild); 

		public ProductCharacteristicOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCharacteristicOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductQualityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQualityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuality.ObjectType, Allors.Meta.M.ProductQuality.OnPostBuild); 

		public ProductQualityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQualityOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemType.ObjectType, Allors.Meta.M.PurchaseInvoiceItemType.OnPostBuild); 

		public PurchaseInvoiceItemTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceType.ObjectType, Allors.Meta.M.PurchaseInvoiceType.OnPostBuild); 

		public PurchaseInvoiceTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class QualificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QualificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Qualification.ObjectType, Allors.Meta.M.Qualification.OnPostBuild); 

		public QualificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QualificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class RateTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RateTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RateType.ObjectType, Allors.Meta.M.RateType.OnPostBuild); 

		public RateTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RateTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class RatingTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RatingTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RatingType.ObjectType, Allors.Meta.M.RatingType.OnPostBuild); 

		public RatingTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RatingTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesChannelOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesChannel.ObjectType, Allors.Meta.M.SalesChannel.OnPostBuild); 

		public SalesChannelOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemType.ObjectType, Allors.Meta.M.SalesInvoiceItemType.OnPostBuild); 

		public SalesInvoiceItemTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceType.ObjectType, Allors.Meta.M.SalesInvoiceType.OnPostBuild); 

		public SalesInvoiceTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalutationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalutationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Salutation.ObjectType, Allors.Meta.M.Salutation.OnPostBuild); 

		public SalutationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalutationOnPostBuildMethodInvocation;
			}
		}
	}public partial class ServiceFeatureOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceFeatureOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceFeature.ObjectType, Allors.Meta.M.ServiceFeature.OnPostBuild); 

		public ServiceFeatureOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceFeatureOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentMethodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentMethodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentMethod.ObjectType, Allors.Meta.M.ShipmentMethod.OnPostBuild); 

		public ShipmentMethodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentMethodOnPostBuildMethodInvocation;
			}
		}
	}public partial class SizeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SizeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Size.ObjectType, Allors.Meta.M.Size.OnPostBuild); 

		public SizeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SizeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SkillOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Skill.ObjectType, Allors.Meta.M.Skill.OnPostBuild); 

		public SkillOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillOnPostBuildMethodInvocation;
			}
		}
	}public partial class SkillLevelOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillLevelOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SkillLevel.ObjectType, Allors.Meta.M.SkillLevel.OnPostBuild); 

		public SkillLevelOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillLevelOnPostBuildMethodInvocation;
			}
		}
	}public partial class SkillRatingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillRatingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SkillRating.ObjectType, Allors.Meta.M.SkillRating.OnPostBuild); 

		public SkillRatingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillRatingOnPostBuildMethodInvocation;
			}
		}
	}public partial class SoftwareFeatureOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SoftwareFeatureOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SoftwareFeature.ObjectType, Allors.Meta.M.SoftwareFeature.OnPostBuild); 

		public SoftwareFeatureOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SoftwareFeatureOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequirementTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementType.ObjectType, Allors.Meta.M.RequirementType.OnPostBuild); 

		public RequirementTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class TimeFrequencyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeFrequencyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeFrequency.ObjectType, Allors.Meta.M.TimeFrequency.OnPostBuild); 

		public TimeFrequencyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeFrequencyOnPostBuildMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitOfMeasure.ObjectType, Allors.Meta.M.UnitOfMeasure.OnPostBuild); 

		public UnitOfMeasureOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureOnPostBuildMethodInvocation;
			}
		}
	}public partial class VarianceReasonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VarianceReasonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VarianceReason.ObjectType, Allors.Meta.M.VarianceReason.OnPostBuild); 

		public VarianceReasonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VarianceReasonOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatCalculationMethodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatCalculationMethodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatCalculationMethod.ObjectType, Allors.Meta.M.VatCalculationMethod.OnPostBuild); 

		public VatCalculationMethodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatCalculationMethodOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatRatePurchaseKindOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRatePurchaseKindOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRatePurchaseKind.ObjectType, Allors.Meta.M.VatRatePurchaseKind.OnPostBuild); 

		public VatRatePurchaseKindOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRatePurchaseKindOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatRateUsageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateUsageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRateUsage.ObjectType, Allors.Meta.M.VatRateUsage.OnPostBuild); 

		public VatRateUsageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateUsageOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatRegimeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRegimeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRegime.ObjectType, Allors.Meta.M.VatRegime.OnPostBuild); 

		public VatRegimeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRegimeOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatTariffOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatTariffOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatTariff.ObjectType, Allors.Meta.M.VatTariff.OnPostBuild); 

		public VatTariffOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatTariffOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPurposeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPurposeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPurpose.ObjectType, Allors.Meta.M.WorkEffortPurpose.OnPostBuild); 

		public WorkEffortPurposeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPurposeOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeKindOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeKindOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortTypeKind.ObjectType, Allors.Meta.M.WorkEffortTypeKind.OnPostBuild); 

		public WorkEffortTypeKindOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeKindOnPostBuildMethodInvocation;
			}
		}
	}public partial class IncoTermTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IncoTermTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IncoTermType.ObjectType, Allors.Meta.M.IncoTermType.OnPostBuild); 

		public IncoTermTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncoTermTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class InvoiceTermTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceTermType.ObjectType, Allors.Meta.M.InvoiceTermType.OnPostBuild); 

		public InvoiceTermTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetState.ObjectType, Allors.Meta.M.BudgetState.OnPostBuild); 

		public BudgetStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class CaseStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CaseState.ObjectType, Allors.Meta.M.CaseState.OnPostBuild); 

		public CaseStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class CommunicationEventStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CommunicationEventState.ObjectType, Allors.Meta.M.CommunicationEventState.OnPostBuild); 

		public CommunicationEventStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturnState.ObjectType, Allors.Meta.M.CustomerReturnState.OnPostBuild); 

		public CustomerReturnStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipmentState.ObjectType, Allors.Meta.M.CustomerShipmentState.OnPostBuild); 

		public CustomerShipmentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipmentState.ObjectType, Allors.Meta.M.DropShipmentState.OnPostBuild); 

		public DropShipmentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChangeObjectState.ObjectType, Allors.Meta.M.EngineeringChangeObjectState.OnPostBuild); 

		public EngineeringChangeObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItemState.ObjectType, Allors.Meta.M.NonSerialisedInventoryItemState.OnPostBuild); 

		public NonSerialisedInventoryItemStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerializedInventoryItemObjectState.ObjectType, Allors.Meta.M.NonSerializedInventoryItemObjectState.OnPostBuild); 

		public NonSerializedInventoryItemObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderPaymentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderPaymentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderPaymentState.ObjectType, Allors.Meta.M.PurchaseOrderPaymentState.OnPostBuild); 

		public PurchaseOrderPaymentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderPaymentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderShipmentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderShipmentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderShipmentState.ObjectType, Allors.Meta.M.PurchaseOrderShipmentState.OnPostBuild); 

		public PurchaseOrderShipmentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderShipmentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemShipmentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemShipmentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemShipmentState.ObjectType, Allors.Meta.M.SalesOrderItemShipmentState.OnPostBuild); 

		public SalesOrderItemShipmentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemShipmentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemPaymentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemPaymentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemPaymentState.ObjectType, Allors.Meta.M.SalesOrderItemPaymentState.OnPostBuild); 

		public SalesOrderItemPaymentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemPaymentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderPaymentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderPaymentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderPaymentState.ObjectType, Allors.Meta.M.SalesOrderPaymentState.OnPostBuild); 

		public SalesOrderPaymentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderPaymentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderShipmentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderShipmentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderShipmentState.ObjectType, Allors.Meta.M.SalesOrderShipmentState.OnPostBuild); 

		public SalesOrderShipmentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderShipmentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationState.ObjectType, Allors.Meta.M.PartSpecificationState.OnPostBuild); 

		public PartSpecificationStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PickListStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListState.ObjectType, Allors.Meta.M.PickListState.OnPostBuild); 

		public PickListStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemState.ObjectType, Allors.Meta.M.PurchaseInvoiceItemState.OnPostBuild); 

		public PurchaseInvoiceItemStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceState.ObjectType, Allors.Meta.M.PurchaseInvoiceState.OnPostBuild); 

		public PurchaseInvoiceStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItemState.ObjectType, Allors.Meta.M.PurchaseOrderItemState.OnPostBuild); 

		public PurchaseOrderItemStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderState.ObjectType, Allors.Meta.M.PurchaseOrderState.OnPostBuild); 

		public PurchaseOrderStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturnState.ObjectType, Allors.Meta.M.PurchaseReturnState.OnPostBuild); 

		public PurchaseReturnStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipmentState.ObjectType, Allors.Meta.M.PurchaseShipmentState.OnPostBuild); 

		public PurchaseShipmentStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class QuoteStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteState.ObjectType, Allors.Meta.M.QuoteState.OnPostBuild); 

		public QuoteStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class QuoteItemStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItemState.ObjectType, Allors.Meta.M.QuoteItemState.OnPostBuild); 

		public QuoteItemStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequirementStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementState.ObjectType, Allors.Meta.M.RequirementState.OnPostBuild); 

		public RequirementStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemState.ObjectType, Allors.Meta.M.SalesInvoiceItemState.OnPostBuild); 

		public SalesInvoiceItemStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceState.ObjectType, Allors.Meta.M.SalesInvoiceState.OnPostBuild); 

		public SalesInvoiceStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestItemStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItemState.ObjectType, Allors.Meta.M.RequestItemState.OnPostBuild); 

		public RequestItemStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemState.ObjectType, Allors.Meta.M.SalesOrderItemState.OnPostBuild); 

		public SalesOrderItemStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestState.ObjectType, Allors.Meta.M.RequestState.OnPostBuild); 

		public RequestStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderState.ObjectType, Allors.Meta.M.SalesOrderState.OnPostBuild); 

		public SalesOrderStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItemState.ObjectType, Allors.Meta.M.SerialisedInventoryItemState.OnPostBuild); 

		public SerialisedInventoryItemStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemObjectStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemObjectStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerializedInventoryItemObjectState.ObjectType, Allors.Meta.M.SerializedInventoryItemObjectState.OnPostBuild); 

		public SerializedInventoryItemObjectStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemObjectStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class TransferStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TransferState.ObjectType, Allors.Meta.M.TransferState.OnPostBuild); 

		public TransferStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortStateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortStateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortState.ObjectType, Allors.Meta.M.WorkEffortState.OnPostBuild); 

		public WorkEffortStateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortStateOnPostBuildMethodInvocation;
			}
		}
	}public partial class ClientAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ClientAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ClientAgreement.ObjectType, Allors.Meta.M.ClientAgreement.OnPostBuild); 

		public ClientAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentAgreement.ObjectType, Allors.Meta.M.EmploymentAgreement.OnPostBuild); 

		public EmploymentAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseAgreement.ObjectType, Allors.Meta.M.PurchaseAgreement.OnPostBuild); 

		public PurchaseAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesAgreement.ObjectType, Allors.Meta.M.SalesAgreement.OnPostBuild); 

		public SalesAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class SubContractorAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubContractorAgreement.ObjectType, Allors.Meta.M.SubContractorAgreement.OnPostBuild); 

		public SubContractorAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccountingPeriodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriod.ObjectType, Allors.Meta.M.AccountingPeriod.OnPostBuild); 

		public AccountingPeriodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodOnPostBuildMethodInvocation;
			}
		}
	}public partial class CapitalBudgetOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudget.ObjectType, Allors.Meta.M.CapitalBudget.OnPostBuild); 

		public CapitalBudgetOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetOnPostBuildMethodInvocation;
			}
		}
	}public partial class OperatingBudgetOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudget.ObjectType, Allors.Meta.M.OperatingBudget.OnPostBuild); 

		public OperatingBudgetOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetOnPostBuildMethodInvocation;
			}
		}
	}public partial class FacilityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FacilityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Facility.ObjectType, Allors.Meta.M.Facility.OnPostBuild); 

		public FacilityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FacilityOnPostBuildMethodInvocation;
			}
		}
	}public partial class CountryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnPostBuild); 

		public CountryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPostBuildMethodInvocation;
			}
		}
	}public partial class CityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.City.ObjectType, Allors.Meta.M.City.OnPostBuild); 

		public CityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CityOnPostBuildMethodInvocation;
			}
		}
	}public partial class CountyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.County.ObjectType, Allors.Meta.M.County.OnPostBuild); 

		public CountyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountyOnPostBuildMethodInvocation;
			}
		}
	}public partial class PostalCodeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalCodeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalCode.ObjectType, Allors.Meta.M.PostalCode.OnPostBuild); 

		public PostalCodeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalCodeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProvinceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProvinceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Province.ObjectType, Allors.Meta.M.Province.OnPostBuild); 

		public ProvinceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProvinceOnPostBuildMethodInvocation;
			}
		}
	}public partial class StateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.State.ObjectType, Allors.Meta.M.State.OnPostBuild); 

		public StateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StateOnPostBuildMethodInvocation;
			}
		}
	}public partial class TerritoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TerritoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Territory.ObjectType, Allors.Meta.M.Territory.OnPostBuild); 

		public TerritoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TerritoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class RegionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RegionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Region.ObjectType, Allors.Meta.M.Region.OnPostBuild); 

		public RegionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RegionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesTerritoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesTerritoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesTerritory.ObjectType, Allors.Meta.M.SalesTerritory.OnPostBuild); 

		public SalesTerritoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesTerritoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class ServiceTerritoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceTerritoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceTerritory.ObjectType, Allors.Meta.M.ServiceTerritory.OnPostBuild); 

		public ServiceTerritoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceTerritoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class CurrencyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnPostBuild); 

		public CurrencyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPostBuildMethodInvocation;
			}
		}
	}public partial class FinishedGoodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinishedGoodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinishedGood.ObjectType, Allors.Meta.M.FinishedGood.OnPostBuild); 

		public FinishedGoodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinishedGoodOnPostBuildMethodInvocation;
			}
		}
	}public partial class RawMaterialOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RawMaterialOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RawMaterial.ObjectType, Allors.Meta.M.RawMaterial.OnPostBuild); 

		public RawMaterialOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RawMaterialOnPostBuildMethodInvocation;
			}
		}
	}public partial class SubAssemblyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubAssemblyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubAssembly.ObjectType, Allors.Meta.M.SubAssembly.OnPostBuild); 

		public SubAssemblyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAssemblyOnPostBuildMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnPostBuild); 

		public AutomatedAgentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPostBuildMethodInvocation;
			}
		}
	}public partial class DisbursementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Disbursement.ObjectType, Allors.Meta.M.Disbursement.OnPostBuild); 

		public DisbursementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementOnPostBuildMethodInvocation;
			}
		}
	}public partial class PayCheckOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayCheckOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayCheck.ObjectType, Allors.Meta.M.PayCheck.OnPostBuild); 

		public PayCheckOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayCheckOnPostBuildMethodInvocation;
			}
		}
	}public partial class ReceiptOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Receipt.ObjectType, Allors.Meta.M.Receipt.OnPostBuild); 

		public ReceiptOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptOnPostBuildMethodInvocation;
			}
		}
	}public partial class CashOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CashOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Cash.ObjectType, Allors.Meta.M.Cash.OnPostBuild); 

		public CashOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CashOnPostBuildMethodInvocation;
			}
		}
	}public partial class OwnBankAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OwnBankAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OwnBankAccount.ObjectType, Allors.Meta.M.OwnBankAccount.OnPostBuild); 

		public OwnBankAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnBankAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class OwnCreditCardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OwnCreditCardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OwnCreditCard.ObjectType, Allors.Meta.M.OwnCreditCard.OnPostBuild); 

		public OwnCreditCardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnCreditCardOnPostBuildMethodInvocation;
			}
		}
	}public partial class BrandOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BrandOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Brand.ObjectType, Allors.Meta.M.Brand.OnPostBuild); 

		public BrandOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BrandOnPostBuildMethodInvocation;
			}
		}
	}public partial class DimensionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DimensionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dimension.ObjectType, Allors.Meta.M.Dimension.OnPostBuild); 

		public DimensionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DimensionOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturn.ObjectType, Allors.Meta.M.CustomerReturn.OnPostBuild); 

		public CustomerReturnOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipment.ObjectType, Allors.Meta.M.CustomerShipment.OnPostBuild); 

		public CustomerShipmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountAdjustment.ObjectType, Allors.Meta.M.DiscountAdjustment.OnPostBuild); 

		public DiscountAdjustmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipment.ObjectType, Allors.Meta.M.DropShipment.OnPostBuild); 

		public DropShipmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PickListOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickList.ObjectType, Allors.Meta.M.PickList.OnPostBuild); 

		public PickListOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductQuoteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuote.ObjectType, Allors.Meta.M.ProductQuote.OnPostBuild); 

		public ProductQuoteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProposalOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Proposal.ObjectType, Allors.Meta.M.Proposal.OnPostBuild); 

		public ProposalOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoice.ObjectType, Allors.Meta.M.PurchaseInvoice.OnPostBuild); 

		public PurchaseInvoiceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrder.ObjectType, Allors.Meta.M.PurchaseOrder.OnPostBuild); 

		public PurchaseOrderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturn.ObjectType, Allors.Meta.M.PurchaseReturn.OnPostBuild); 

		public PurchaseReturnOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipment.ObjectType, Allors.Meta.M.PurchaseShipment.OnPostBuild); 

		public PurchaseShipmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestForInformationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForInformation.ObjectType, Allors.Meta.M.RequestForInformation.OnPostBuild); 

		public RequestForInformationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestForProposalOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForProposal.ObjectType, Allors.Meta.M.RequestForProposal.OnPostBuild); 

		public RequestForProposalOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestForQuoteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForQuote.ObjectType, Allors.Meta.M.RequestForQuote.OnPostBuild); 

		public RequestForQuoteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoice.ObjectType, Allors.Meta.M.SalesInvoice.OnPostBuild); 

		public SalesInvoiceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrder.ObjectType, Allors.Meta.M.SalesOrder.OnPostBuild); 

		public SalesOrderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderOnPostBuildMethodInvocation;
			}
		}
	}public partial class StatementOfWorkOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWork.ObjectType, Allors.Meta.M.StatementOfWork.OnPostBuild); 

		public StatementOfWorkOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkOnPostBuildMethodInvocation;
			}
		}
	}public partial class TransferOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Transfer.ObjectType, Allors.Meta.M.Transfer.OnPostBuild); 

		public TransferOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferOnPostBuildMethodInvocation;
			}
		}
	}public partial class LanguageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnPostBuild); 

		public LanguageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPostBuildMethodInvocation;
			}
		}
	}public partial class LocaleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnPostBuild); 

		public LocaleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPostBuildMethodInvocation;
			}
		}
	}public partial class NotificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnPostBuild); 

		public NotificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccountingTransactionDetailOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionDetailOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionDetail.ObjectType, Allors.Meta.M.AccountingTransactionDetail.OnPostBuild); 

		public AccountingTransactionDetailOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionDetailOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccountingTransactionNumberOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionNumberOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionNumber.ObjectType, Allors.Meta.M.AccountingTransactionNumber.OnPostBuild); 

		public AccountingTransactionNumberOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionNumberOnPostBuildMethodInvocation;
			}
		}
	}public partial class AddendumOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AddendumOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Addendum.ObjectType, Allors.Meta.M.Addendum.OnPostBuild); 

		public AddendumOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AddendumOnPostBuildMethodInvocation;
			}
		}
	}public partial class AmountDueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AmountDueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AmountDue.ObjectType, Allors.Meta.M.AmountDue.OnPostBuild); 

		public AmountDueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmountDueOnPostBuildMethodInvocation;
			}
		}
	}public partial class BankOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BankOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Bank.ObjectType, Allors.Meta.M.Bank.OnPostBuild); 

		public BankOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankOnPostBuildMethodInvocation;
			}
		}
	}public partial class BenefitOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BenefitOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Benefit.ObjectType, Allors.Meta.M.Benefit.OnPostBuild); 

		public BenefitOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BenefitOnPostBuildMethodInvocation;
			}
		}
	}public partial class BillingAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BillingAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BillingAccount.ObjectType, Allors.Meta.M.BillingAccount.OnPostBuild); 

		public BillingAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillingAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetItem.ObjectType, Allors.Meta.M.BudgetItem.OnPostBuild); 

		public BudgetItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetReviewOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetReviewOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetReview.ObjectType, Allors.Meta.M.BudgetReview.OnPostBuild); 

		public BudgetReviewOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetReviewOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetRevisionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetRevision.ObjectType, Allors.Meta.M.BudgetRevision.OnPostBuild); 

		public BudgetRevisionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionOnPostBuildMethodInvocation;
			}
		}
	}public partial class BudgetRevisionImpactOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionImpactOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetRevisionImpact.ObjectType, Allors.Meta.M.BudgetRevisionImpact.OnPostBuild); 

		public BudgetRevisionImpactOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionImpactOnPostBuildMethodInvocation;
			}
		}
	}public partial class CitizenshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CitizenshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Citizenship.ObjectType, Allors.Meta.M.Citizenship.OnPostBuild); 

		public CitizenshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CitizenshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class CreditCardCompanyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardCompanyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditCardCompany.ObjectType, Allors.Meta.M.CreditCardCompany.OnPostBuild); 

		public CreditCardCompanyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardCompanyOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeductionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deduction.ObjectType, Allors.Meta.M.Deduction.OnPostBuild); 

		public DeductionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeliverableOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deliverable.ObjectType, Allors.Meta.M.Deliverable.OnPostBuild); 

		public DeliverableOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeploymentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeploymentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deployment.ObjectType, Allors.Meta.M.Deployment.OnPostBuild); 

		public DeploymentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeploymentOnPostBuildMethodInvocation;
			}
		}
	}public partial class DepreciationMethodOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationMethodOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DepreciationMethod.ObjectType, Allors.Meta.M.DepreciationMethod.OnPostBuild); 

		public DepreciationMethodOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationMethodOnPostBuildMethodInvocation;
			}
		}
	}public partial class DesiredProductFeatureOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DesiredProductFeatureOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DesiredProductFeature.ObjectType, Allors.Meta.M.DesiredProductFeature.OnPostBuild); 

		public DesiredProductFeatureOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DesiredProductFeatureOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmailTemplateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailTemplateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailTemplate.ObjectType, Allors.Meta.M.EmailTemplate.OnPostBuild); 

		public EmailTemplateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailTemplateOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplication.ObjectType, Allors.Meta.M.EmploymentApplication.OnPostBuild); 

		public EmploymentApplicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngagementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Engagement.ObjectType, Allors.Meta.M.Engagement.OnPostBuild); 

		public EngagementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngagementRateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementRateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngagementRate.ObjectType, Allors.Meta.M.EngagementRate.OnPostBuild); 

		public EngagementRateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementRateOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChangeStatus.ObjectType, Allors.Meta.M.EngineeringChangeStatus.OnPostBuild); 

		public EngineeringChangeStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountGroupOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountGroupOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccountGroup.ObjectType, Allors.Meta.M.GeneralLedgerAccountGroup.OnPostBuild); 

		public GeneralLedgerAccountGroupOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountGroupOnPostBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccountType.ObjectType, Allors.Meta.M.GeneralLedgerAccountType.OnPostBuild); 

		public GeneralLedgerAccountTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class GlBudgetAllocationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GlBudgetAllocationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GlBudgetAllocation.ObjectType, Allors.Meta.M.GlBudgetAllocation.OnPostBuild); 

		public GlBudgetAllocationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GlBudgetAllocationOnPostBuildMethodInvocation;
			}
		}
	}public partial class InventoryItemVarianceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemVarianceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InventoryItemVariance.ObjectType, Allors.Meta.M.InventoryItemVariance.OnPostBuild); 

		public InventoryItemVarianceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemVarianceOnPostBuildMethodInvocation;
			}
		}
	}public partial class InvoiceVatRateItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceVatRateItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceVatRateItem.ObjectType, Allors.Meta.M.InvoiceVatRateItem.OnPostBuild); 

		public InvoiceVatRateItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceVatRateItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class JournalOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Journal.ObjectType, Allors.Meta.M.Journal.OnPostBuild); 

		public JournalOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalOnPostBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntry.ObjectType, Allors.Meta.M.JournalEntry.OnPostBuild); 

		public JournalEntryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryOnPostBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryDetailOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryDetailOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntryDetail.ObjectType, Allors.Meta.M.JournalEntryDetail.OnPostBuild); 

		public JournalEntryDetailOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryDetailOnPostBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryNumberOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryNumberOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntryNumber.ObjectType, Allors.Meta.M.JournalEntryNumber.OnPostBuild); 

		public JournalEntryNumberOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryNumberOnPostBuildMethodInvocation;
			}
		}
	}public partial class LegalFormOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LegalFormOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LegalForm.ObjectType, Allors.Meta.M.LegalForm.OnPostBuild); 

		public LegalFormOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalFormOnPostBuildMethodInvocation;
			}
		}
	}public partial class LotOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LotOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Lot.ObjectType, Allors.Meta.M.Lot.OnPostBuild); 

		public LotOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LotOnPostBuildMethodInvocation;
			}
		}
	}public partial class NeededSkillOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NeededSkillOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NeededSkill.ObjectType, Allors.Meta.M.NeededSkill.OnPostBuild); 

		public NeededSkillOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NeededSkillOnPostBuildMethodInvocation;
			}
		}
	}public partial class NewsItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NewsItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NewsItem.ObjectType, Allors.Meta.M.NewsItem.OnPostBuild); 

		public NewsItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NewsItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerializedInventoryItemStatus.ObjectType, Allors.Meta.M.NonSerializedInventoryItemStatus.OnPostBuild); 

		public NonSerializedInventoryItemStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderQuantityBreakOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderQuantityBreakOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderQuantityBreak.ObjectType, Allors.Meta.M.OrderQuantityBreak.OnPostBuild); 

		public OrderQuantityBreakOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderQuantityBreakOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderRequirementCommitmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderRequirementCommitmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderRequirementCommitment.ObjectType, Allors.Meta.M.OrderRequirementCommitment.OnPostBuild); 

		public OrderRequirementCommitmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderRequirementCommitmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderTerm.ObjectType, Allors.Meta.M.OrderTerm.OnPostBuild); 

		public OrderTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrderValueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderValueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderValue.ObjectType, Allors.Meta.M.OrderValue.OnPostBuild); 

		public OrderValueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderValueOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationGlAccount.ObjectType, Allors.Meta.M.OrganisationGlAccount.OnPostBuild); 

		public OrganisationGlAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountBalanceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountBalanceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationGlAccountBalance.ObjectType, Allors.Meta.M.OrganisationGlAccountBalance.OnPostBuild); 

		public OrganisationGlAccountBalanceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountBalanceOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackageQuantityBreakOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageQuantityBreakOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackageQuantityBreak.ObjectType, Allors.Meta.M.PackageQuantityBreak.OnPostBuild); 

		public PackageQuantityBreakOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageQuantityBreakOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackagingContentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingContentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackagingContent.ObjectType, Allors.Meta.M.PackagingContent.OnPostBuild); 

		public PackagingContentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingContentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartBillOfMaterialSubstituteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartBillOfMaterialSubstituteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartBillOfMaterialSubstitute.ObjectType, Allors.Meta.M.PartBillOfMaterialSubstitute.OnPostBuild); 

		public PartBillOfMaterialSubstituteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartBillOfMaterialSubstituteOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartRevisionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartRevisionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartRevision.ObjectType, Allors.Meta.M.PartRevision.OnPostBuild); 

		public PartRevisionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartRevisionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartSubstituteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSubstituteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSubstitute.ObjectType, Allors.Meta.M.PartSubstitute.OnPostBuild); 

		public PartSubstituteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSubstituteOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyBenefitOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyBenefitOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyBenefit.ObjectType, Allors.Meta.M.PartyBenefit.OnPostBuild); 

		public PartyBenefitOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyBenefitOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartyFixedAssetAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyFixedAssetAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyFixedAssetAssignment.ObjectType, Allors.Meta.M.PartyFixedAssetAssignment.OnPostBuild); 

		public PartyFixedAssetAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyFixedAssetAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartySkillOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartySkillOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartySkill.ObjectType, Allors.Meta.M.PartySkill.OnPostBuild); 

		public PartySkillOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartySkillOnPostBuildMethodInvocation;
			}
		}
	}public partial class PassportOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PassportOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Passport.ObjectType, Allors.Meta.M.Passport.OnPostBuild); 

		public PassportOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PassportOnPostBuildMethodInvocation;
			}
		}
	}public partial class PayGradeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayGradeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayGrade.ObjectType, Allors.Meta.M.PayGrade.OnPostBuild); 

		public PayGradeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayGradeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PayHistoryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayHistoryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayHistory.ObjectType, Allors.Meta.M.PayHistory.OnPostBuild); 

		public PayHistoryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayHistoryOnPostBuildMethodInvocation;
			}
		}
	}public partial class PaymentApplicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentApplicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentApplication.ObjectType, Allors.Meta.M.PaymentApplication.OnPostBuild); 

		public PaymentApplicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentApplicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class PaymentBudgetAllocationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentBudgetAllocationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentBudgetAllocation.ObjectType, Allors.Meta.M.PaymentBudgetAllocation.OnPostBuild); 

		public PaymentBudgetAllocationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentBudgetAllocationOnPostBuildMethodInvocation;
			}
		}
	}public partial class PayrollPreferenceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayrollPreferenceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayrollPreference.ObjectType, Allors.Meta.M.PayrollPreference.OnPostBuild); 

		public PayrollPreferenceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayrollPreferenceOnPostBuildMethodInvocation;
			}
		}
	}public partial class PerformanceNoteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceNoteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceNote.ObjectType, Allors.Meta.M.PerformanceNote.OnPostBuild); 

		public PerformanceNoteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceNoteOnPostBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReview.ObjectType, Allors.Meta.M.PerformanceReview.OnPostBuild); 

		public PerformanceReviewOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewOnPostBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReviewItem.ObjectType, Allors.Meta.M.PerformanceReviewItem.OnPostBuild); 

		public PerformanceReviewItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonTrainingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonTrainingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonTraining.ObjectType, Allors.Meta.M.PersonTraining.OnPostBuild); 

		public PersonTrainingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonTrainingOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Position.ObjectType, Allors.Meta.M.Position.OnPostBuild); 

		public PositionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionFulfillmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionFulfillmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionFulfillment.ObjectType, Allors.Meta.M.PositionFulfillment.OnPostBuild); 

		public PositionFulfillmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionFulfillmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionReportingStructureOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionReportingStructureOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionReportingStructure.ObjectType, Allors.Meta.M.PositionReportingStructure.OnPostBuild); 

		public PositionReportingStructureOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionReportingStructureOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionResponsibilityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionResponsibilityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionResponsibility.ObjectType, Allors.Meta.M.PositionResponsibility.OnPostBuild); 

		public PositionResponsibilityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionResponsibilityOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionType.ObjectType, Allors.Meta.M.PositionType.OnPostBuild); 

		public PositionTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PositionTypeRateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeRateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionTypeRate.ObjectType, Allors.Meta.M.PositionTypeRate.OnPostBuild); 

		public PositionTypeRateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeRateOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductDeliverySkillRequirementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDeliverySkillRequirementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductDeliverySkillRequirement.ObjectType, Allors.Meta.M.ProductDeliverySkillRequirement.OnPostBuild); 

		public ProductDeliverySkillRequirementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDeliverySkillRequirementOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductFeatureApplicabilityRelationshipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductFeatureApplicabilityRelationshipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductFeatureApplicabilityRelationship.ObjectType, Allors.Meta.M.ProductFeatureApplicabilityRelationship.OnPostBuild); 

		public ProductFeatureApplicabilityRelationshipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductFeatureApplicabilityRelationshipOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductPurchasePriceOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductPurchasePriceOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductPurchasePrice.ObjectType, Allors.Meta.M.ProductPurchasePrice.OnPostBuild); 

		public ProductPurchasePriceOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductPurchasePriceOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalAssignment.ObjectType, Allors.Meta.M.ProfessionalAssignment.OnPostBuild); 

		public ProfessionalAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class QuoteTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteTerm.ObjectType, Allors.Meta.M.QuoteTerm.OnPostBuild); 

		public QuoteTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequirementBudgetAllocationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementBudgetAllocationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementBudgetAllocation.ObjectType, Allors.Meta.M.RequirementBudgetAllocation.OnPostBuild); 

		public RequirementBudgetAllocationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementBudgetAllocationOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequirementCommunicationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementCommunicationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementCommunication.ObjectType, Allors.Meta.M.RequirementCommunication.OnPostBuild); 

		public RequirementCommunicationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementCommunicationOnPostBuildMethodInvocation;
			}
		}
	}public partial class RespondingPartyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RespondingPartyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RespondingParty.ObjectType, Allors.Meta.M.RespondingParty.OnPostBuild); 

		public RespondingPartyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RespondingPartyOnPostBuildMethodInvocation;
			}
		}
	}public partial class ResponsibilityOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResponsibilityOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Responsibility.ObjectType, Allors.Meta.M.Responsibility.OnPostBuild); 

		public ResponsibilityOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResponsibilityOnPostBuildMethodInvocation;
			}
		}
	}public partial class ResumeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResumeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Resume.ObjectType, Allors.Meta.M.Resume.OnPostBuild); 

		public ResumeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResumeOnPostBuildMethodInvocation;
			}
		}
	}public partial class RevenueQuantityBreakOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueQuantityBreakOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RevenueQuantityBreak.ObjectType, Allors.Meta.M.RevenueQuantityBreak.OnPostBuild); 

		public RevenueQuantityBreakOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueQuantityBreakOnPostBuildMethodInvocation;
			}
		}
	}public partial class RevenueValueBreakOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueValueBreakOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RevenueValueBreak.ObjectType, Allors.Meta.M.RevenueValueBreak.OnPostBuild); 

		public RevenueValueBreakOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueValueBreakOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalaryStepOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalaryStepOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalaryStep.ObjectType, Allors.Meta.M.SalaryStep.OnPostBuild); 

		public SalaryStepOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalaryStepOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesRepCommissionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepCommissionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepCommission.ObjectType, Allors.Meta.M.SalesRepCommission.OnPostBuild); 

		public SalesRepCommissionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepCommissionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemStatusOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemStatusOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerializedInventoryItemStatus.ObjectType, Allors.Meta.M.SerializedInventoryItemStatus.OnPostBuild); 

		public SerializedInventoryItemStatusOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemStatusOnPostBuildMethodInvocation;
			}
		}
	}public partial class ServiceEntryHeaderOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryHeaderOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceEntryHeader.ObjectType, Allors.Meta.M.ServiceEntryHeader.OnPostBuild); 

		public ServiceEntryHeaderOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryHeaderOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentReceiptOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentReceiptOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentReceipt.ObjectType, Allors.Meta.M.ShipmentReceipt.OnPostBuild); 

		public ShipmentReceiptOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentReceiptOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentRouteSegmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentRouteSegmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentRouteSegment.ObjectType, Allors.Meta.M.ShipmentRouteSegment.OnPostBuild); 

		public ShipmentRouteSegmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentRouteSegmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShipmentValueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentValueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentValue.ObjectType, Allors.Meta.M.ShipmentValue.OnPostBuild); 

		public ShipmentValueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentValueOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingComponentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingComponentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShippingAndHandlingComponent.ObjectType, Allors.Meta.M.ShippingAndHandlingComponent.OnPostBuild); 

		public ShippingAndHandlingComponentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingComponentOnPostBuildMethodInvocation;
			}
		}
	}public partial class SupplierOfferingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierOfferingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SupplierOffering.ObjectType, Allors.Meta.M.SupplierOffering.OnPostBuild); 

		public SupplierOfferingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierOfferingOnPostBuildMethodInvocation;
			}
		}
	}public partial class TrainingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TrainingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Training.ObjectType, Allors.Meta.M.Training.OnPostBuild); 

		public TrainingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TrainingOnPostBuildMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureConversionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureConversionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitOfMeasureConversion.ObjectType, Allors.Meta.M.UnitOfMeasureConversion.OnPostBuild); 

		public UnitOfMeasureConversionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureConversionOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatFormOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatFormOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatForm.ObjectType, Allors.Meta.M.VatForm.OnPostBuild); 

		public VatFormOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatFormOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatRateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRate.ObjectType, Allors.Meta.M.VatRate.OnPostBuild); 

		public VatRateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatReturnBoxOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatReturnBox.ObjectType, Allors.Meta.M.VatReturnBox.OnPostBuild); 

		public VatReturnBoxOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxOnPostBuildMethodInvocation;
			}
		}
	}public partial class VatReturnBoxTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatReturnBoxType.ObjectType, Allors.Meta.M.VatReturnBoxType.OnPostBuild); 

		public VatReturnBoxTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentRateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentRateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortAssignmentRate.ObjectType, Allors.Meta.M.WorkEffortAssignmentRate.OnPostBuild); 

		public WorkEffortAssignmentRateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentRateOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortFixedAssetAssignment.ObjectType, Allors.Meta.M.WorkEffortFixedAssetAssignment.OnPostBuild); 

		public WorkEffortFixedAssetAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetStandardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetStandardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortFixedAssetStandard.ObjectType, Allors.Meta.M.WorkEffortFixedAssetStandard.OnPostBuild); 

		public WorkEffortFixedAssetStandardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetStandardOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortGoodStandardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortGoodStandardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortGoodStandard.ObjectType, Allors.Meta.M.WorkEffortGoodStandard.OnPostBuild); 

		public WorkEffortGoodStandardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortGoodStandardOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortInventoryAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortInventoryAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortInventoryAssignment.ObjectType, Allors.Meta.M.WorkEffortInventoryAssignment.OnPostBuild); 

		public WorkEffortInventoryAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortInventoryAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPartStandardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartStandardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPartStandard.ObjectType, Allors.Meta.M.WorkEffortPartStandard.OnPostBuild); 

		public WorkEffortPartStandardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartStandardOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPartyAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartyAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPartyAssignment.ObjectType, Allors.Meta.M.WorkEffortPartyAssignment.OnPostBuild); 

		public WorkEffortPartyAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartyAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortSkillStandardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortSkillStandardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortSkillStandard.ObjectType, Allors.Meta.M.WorkEffortSkillStandard.OnPostBuild); 

		public WorkEffortSkillStandardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortSkillStandardOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortType.ObjectType, Allors.Meta.M.WorkEffortType.OnPostBuild); 

		public WorkEffortTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class CaseVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CaseVersion.ObjectType, Allors.Meta.M.CaseVersion.OnPostBuild); 

		public CaseVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationVersion.ObjectType, Allors.Meta.M.PartSpecificationVersion.OnPostBuild); 

		public PartSpecificationVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PickListVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListVersion.ObjectType, Allors.Meta.M.PickListVersion.OnPostBuild); 

		public PickListVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class QuoteItemVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItemVersion.ObjectType, Allors.Meta.M.QuoteItemVersion.OnPostBuild); 

		public QuoteItemVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestItemVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItemVersion.ObjectType, Allors.Meta.M.RequestItemVersion.OnPostBuild); 

		public RequestItemVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequirementVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementVersion.ObjectType, Allors.Meta.M.RequirementVersion.OnPostBuild); 

		public RequirementVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccountingPeriodVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriodVersion.ObjectType, Allors.Meta.M.AccountingPeriodVersion.OnPostBuild); 

		public AccountingPeriodVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class CapitalBudgetVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudgetVersion.ObjectType, Allors.Meta.M.CapitalBudgetVersion.OnPostBuild); 

		public CapitalBudgetVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class OperatingBudgetVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudgetVersion.ObjectType, Allors.Meta.M.OperatingBudgetVersion.OnPostBuild); 

		public OperatingBudgetVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmailCommunicationVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailCommunicationVersion.ObjectType, Allors.Meta.M.EmailCommunicationVersion.OnPostBuild); 

		public EmailCommunicationVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaceToFaceCommunicationVersion.ObjectType, Allors.Meta.M.FaceToFaceCommunicationVersion.OnPostBuild); 

		public FaceToFaceCommunicationVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class FaxCommunicationVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaxCommunicationVersion.ObjectType, Allors.Meta.M.FaxCommunicationVersion.OnPostBuild); 

		public FaxCommunicationVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LetterCorrespondenceVersion.ObjectType, Allors.Meta.M.LetterCorrespondenceVersion.OnPostBuild); 

		public LetterCorrespondenceVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PhoneCommunicationVersion.ObjectType, Allors.Meta.M.PhoneCommunicationVersion.OnPostBuild); 

		public PhoneCommunicationVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebSiteCommunicationVersion.ObjectType, Allors.Meta.M.WebSiteCommunicationVersion.OnPostBuild); 

		public WebSiteCommunicationVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceVersion.ObjectType, Allors.Meta.M.PurchaseInvoiceVersion.OnPostBuild); 

		public PurchaseInvoiceVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceVersion.ObjectType, Allors.Meta.M.SalesInvoiceVersion.OnPostBuild); 

		public SalesInvoiceVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountAdjustmentVersion.ObjectType, Allors.Meta.M.DiscountAdjustmentVersion.OnPostBuild); 

		public DiscountAdjustmentVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderVersion.ObjectType, Allors.Meta.M.PurchaseOrderVersion.OnPostBuild); 

		public PurchaseOrderVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderVersion.ObjectType, Allors.Meta.M.SalesOrderVersion.OnPostBuild); 

		public SalesOrderVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class AutomatedAgentVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgentVersion.ObjectType, Allors.Meta.M.AutomatedAgentVersion.OnPostBuild); 

		public AutomatedAgentVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationVersion.ObjectType, Allors.Meta.M.OrganisationVersion.OnPostBuild); 

		public OrganisationVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonVersion.ObjectType, Allors.Meta.M.PersonVersion.OnPostBuild); 

		public PersonVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemVersion.ObjectType, Allors.Meta.M.PurchaseInvoiceItemVersion.OnPostBuild); 

		public PurchaseInvoiceItemVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemVersion.ObjectType, Allors.Meta.M.SalesInvoiceItemVersion.OnPostBuild); 

		public SalesInvoiceItemVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItemVersion.ObjectType, Allors.Meta.M.PurchaseOrderItemVersion.OnPostBuild); 

		public PurchaseOrderItemVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemVersion.ObjectType, Allors.Meta.M.SalesOrderItemVersion.OnPostBuild); 

		public SalesOrderItemVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductQuoteVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuoteVersion.ObjectType, Allors.Meta.M.ProductQuoteVersion.OnPostBuild); 

		public ProductQuoteVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProposalVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProposalVersion.ObjectType, Allors.Meta.M.ProposalVersion.OnPostBuild); 

		public ProposalVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class StatementOfWorkVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWorkVersion.ObjectType, Allors.Meta.M.StatementOfWorkVersion.OnPostBuild); 

		public StatementOfWorkVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestForInformationVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForInformationVersion.ObjectType, Allors.Meta.M.RequestForInformationVersion.OnPostBuild); 

		public RequestForInformationVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestForProposalVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForProposalVersion.ObjectType, Allors.Meta.M.RequestForProposalVersion.OnPostBuild); 

		public RequestForProposalVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class RequestForQuoteVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForQuoteVersion.ObjectType, Allors.Meta.M.RequestForQuoteVersion.OnPostBuild); 

		public RequestForQuoteVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturnVersion.ObjectType, Allors.Meta.M.CustomerReturnVersion.OnPostBuild); 

		public CustomerReturnVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipmentVersion.ObjectType, Allors.Meta.M.CustomerShipmentVersion.OnPostBuild); 

		public CustomerShipmentVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipmentVersion.ObjectType, Allors.Meta.M.DropShipmentVersion.OnPostBuild); 

		public DropShipmentVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturnVersion.ObjectType, Allors.Meta.M.PurchaseReturnVersion.OnPostBuild); 

		public PurchaseReturnVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipmentVersion.ObjectType, Allors.Meta.M.PurchaseShipmentVersion.OnPostBuild); 

		public PurchaseShipmentVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class TransferVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TransferVersion.ObjectType, Allors.Meta.M.TransferVersion.OnPostBuild); 

		public TransferVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class WorkTaskVersionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkTaskVersionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkTaskVersion.ObjectType, Allors.Meta.M.WorkTaskVersion.OnPostBuild); 

		public WorkTaskVersionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkTaskVersionOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChange.ObjectType, Allors.Meta.M.EngineeringChange.OnPostBuild); 

		public EngineeringChangeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ItemVarianceAccountingTransactionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ItemVarianceAccountingTransactionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ItemVarianceAccountingTransaction.ObjectType, Allors.Meta.M.ItemVarianceAccountingTransaction.OnPostBuild); 

		public ItemVarianceAccountingTransactionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemVarianceAccountingTransactionOnPostBuildMethodInvocation;
			}
		}
	}public partial class CreditLineOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditLineOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditLine.ObjectType, Allors.Meta.M.CreditLine.OnPostBuild); 

		public CreditLineOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditLineOnPostBuildMethodInvocation;
			}
		}
	}public partial class DisbursementAccountingTransactionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementAccountingTransactionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DisbursementAccountingTransaction.ObjectType, Allors.Meta.M.DisbursementAccountingTransaction.OnPostBuild); 

		public DisbursementAccountingTransactionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementAccountingTransactionOnPostBuildMethodInvocation;
			}
		}
	}public partial class NoteOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NoteOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Note.ObjectType, Allors.Meta.M.Note.OnPostBuild); 

		public NoteOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NoteOnPostBuildMethodInvocation;
			}
		}
	}public partial class ObligationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ObligationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Obligation.ObjectType, Allors.Meta.M.Obligation.OnPostBuild); 

		public ObligationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ObligationOnPostBuildMethodInvocation;
			}
		}
	}public partial class ReceiptAccountingTransactionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptAccountingTransactionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ReceiptAccountingTransaction.ObjectType, Allors.Meta.M.ReceiptAccountingTransaction.OnPostBuild); 

		public ReceiptAccountingTransactionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptAccountingTransactionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SalesAccountingTransactionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAccountingTransactionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesAccountingTransaction.ObjectType, Allors.Meta.M.SalesAccountingTransaction.OnPostBuild); 

		public SalesAccountingTransactionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAccountingTransactionOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaxDueOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDueOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaxDue.ObjectType, Allors.Meta.M.TaxDue.OnPostBuild); 

		public TaxDueOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDueOnPostBuildMethodInvocation;
			}
		}
	}public partial class AmortizationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AmortizationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Amortization.ObjectType, Allors.Meta.M.Amortization.OnPostBuild); 

		public AmortizationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmortizationOnPostBuildMethodInvocation;
			}
		}
	}public partial class CapitalizationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalizationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Capitalization.ObjectType, Allors.Meta.M.Capitalization.OnPostBuild); 

		public CapitalizationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalizationOnPostBuildMethodInvocation;
			}
		}
	}public partial class DepreciationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Depreciation.ObjectType, Allors.Meta.M.Depreciation.OnPostBuild); 

		public DepreciationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationOnPostBuildMethodInvocation;
			}
		}
	}public partial class AgreementExhibitOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementExhibitOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementExhibit.ObjectType, Allors.Meta.M.AgreementExhibit.OnPostBuild); 

		public AgreementExhibitOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementExhibitOnPostBuildMethodInvocation;
			}
		}
	}public partial class AgreementPricingProgramOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementPricingProgramOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementPricingProgram.ObjectType, Allors.Meta.M.AgreementPricingProgram.OnPostBuild); 

		public AgreementPricingProgramOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementPricingProgramOnPostBuildMethodInvocation;
			}
		}
	}public partial class AgreementSectionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementSectionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementSection.ObjectType, Allors.Meta.M.AgreementSection.OnPostBuild); 

		public AgreementSectionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementSectionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SubAgreementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubAgreementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubAgreement.ObjectType, Allors.Meta.M.SubAgreement.OnPostBuild); 

		public SubAgreementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAgreementOnPostBuildMethodInvocation;
			}
		}
	}public partial class FinancialTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinancialTerm.ObjectType, Allors.Meta.M.FinancialTerm.OnPostBuild); 

		public FinancialTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class IncentiveOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IncentiveOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Incentive.ObjectType, Allors.Meta.M.Incentive.OnPostBuild); 

		public IncentiveOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncentiveOnPostBuildMethodInvocation;
			}
		}
	}public partial class IncoTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IncoTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IncoTerm.ObjectType, Allors.Meta.M.IncoTerm.OnPostBuild); 

		public IncoTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncoTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class InvoiceTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceTerm.ObjectType, Allors.Meta.M.InvoiceTerm.OnPostBuild); 

		public InvoiceTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class LegalTermOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LegalTermOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LegalTerm.ObjectType, Allors.Meta.M.LegalTerm.OnPostBuild); 

		public LegalTermOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalTermOnPostBuildMethodInvocation;
			}
		}
	}public partial class ThresholdOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThresholdOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Threshold.ObjectType, Allors.Meta.M.Threshold.OnPostBuild); 

		public ThresholdOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThresholdOnPostBuildMethodInvocation;
			}
		}
	}public partial class SingletonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnPostBuild); 

		public SingletonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPostBuildMethodInvocation;
			}
		}
	}public partial class ActivityUsageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityUsageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ActivityUsage.ObjectType, Allors.Meta.M.ActivityUsage.OnPostBuild); 

		public ActivityUsageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityUsageOnPostBuildMethodInvocation;
			}
		}
	}public partial class TimePeriodUsageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimePeriodUsageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimePeriodUsage.ObjectType, Allors.Meta.M.TimePeriodUsage.OnPostBuild); 

		public TimePeriodUsageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimePeriodUsageOnPostBuildMethodInvocation;
			}
		}
	}public partial class VolumeUsageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VolumeUsageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VolumeUsage.ObjectType, Allors.Meta.M.VolumeUsage.OnPostBuild); 

		public VolumeUsageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VolumeUsageOnPostBuildMethodInvocation;
			}
		}
	}public partial class BillOfLadingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BillOfLadingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BillOfLading.ObjectType, Allors.Meta.M.BillOfLading.OnPostBuild); 

		public BillOfLadingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillOfLadingOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngineeringDocumentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringDocumentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringDocument.ObjectType, Allors.Meta.M.EngineeringDocument.OnPostBuild); 

		public EngineeringDocumentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringDocumentOnPostBuildMethodInvocation;
			}
		}
	}public partial class ExportDocumentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExportDocumentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ExportDocument.ObjectType, Allors.Meta.M.ExportDocument.OnPostBuild); 

		public ExportDocumentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExportDocumentOnPostBuildMethodInvocation;
			}
		}
	}public partial class HazardousMaterialsDocumentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HazardousMaterialsDocumentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.HazardousMaterialsDocument.ObjectType, Allors.Meta.M.HazardousMaterialsDocument.OnPostBuild); 

		public HazardousMaterialsDocumentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HazardousMaterialsDocumentOnPostBuildMethodInvocation;
			}
		}
	}public partial class ManifestOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManifestOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Manifest.ObjectType, Allors.Meta.M.Manifest.OnPostBuild); 

		public ManifestOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManifestOnPostBuildMethodInvocation;
			}
		}
	}public partial class MarketingMaterialOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingMaterialOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MarketingMaterial.ObjectType, Allors.Meta.M.MarketingMaterial.OnPostBuild); 

		public MarketingMaterialOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingMaterialOnPostBuildMethodInvocation;
			}
		}
	}public partial class PackagingSlipOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingSlipOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackagingSlip.ObjectType, Allors.Meta.M.PackagingSlip.OnPostBuild); 

		public PackagingSlipOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingSlipOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductDrawingOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDrawingOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductDrawing.ObjectType, Allors.Meta.M.ProductDrawing.OnPostBuild); 

		public ProductDrawingOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDrawingOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductModelOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductModelOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductModel.ObjectType, Allors.Meta.M.ProductModel.OnPostBuild); 

		public ProductModelOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductModelOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaxDocumentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDocumentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaxDocument.ObjectType, Allors.Meta.M.TaxDocument.OnPostBuild); 

		public TaxDocumentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDocumentOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomEngagementItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomEngagementItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomEngagementItem.ObjectType, Allors.Meta.M.CustomEngagementItem.OnPostBuild); 

		public CustomEngagementItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomEngagementItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeliverableOrderItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOrderItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableOrderItem.ObjectType, Allors.Meta.M.DeliverableOrderItem.OnPostBuild); 

		public DeliverableOrderItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOrderItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class GoodOrderItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOrderItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GoodOrderItem.ObjectType, Allors.Meta.M.GoodOrderItem.OnPostBuild); 

		public GoodOrderItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOrderItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalPlacementOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalPlacementOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalPlacement.ObjectType, Allors.Meta.M.ProfessionalPlacement.OnPostBuild); 

		public ProfessionalPlacementOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalPlacementOnPostBuildMethodInvocation;
			}
		}
	}public partial class StandardServiceOrderItemOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StandardServiceOrderItemOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StandardServiceOrderItem.ObjectType, Allors.Meta.M.StandardServiceOrderItem.OnPostBuild); 

		public StandardServiceOrderItemOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StandardServiceOrderItemOnPostBuildMethodInvocation;
			}
		}
	}public partial class BankAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BankAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BankAccount.ObjectType, Allors.Meta.M.BankAccount.OnPostBuild); 

		public BankAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class CreditCardOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditCard.ObjectType, Allors.Meta.M.CreditCard.OnPostBuild); 

		public CreditCardOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardOnPostBuildMethodInvocation;
			}
		}
	}public partial class InvestmentAccountOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvestmentAccountOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvestmentAccount.ObjectType, Allors.Meta.M.InvestmentAccount.OnPostBuild); 

		public InvestmentAccountOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvestmentAccountOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccountAdjustmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountAdjustmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountAdjustment.ObjectType, Allors.Meta.M.AccountAdjustment.OnPostBuild); 

		public AccountAdjustmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountAdjustmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class DepositOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepositOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deposit.ObjectType, Allors.Meta.M.Deposit.OnPostBuild); 

		public DepositOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepositOnPostBuildMethodInvocation;
			}
		}
	}public partial class FinancialAccountAdjustmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialAccountAdjustmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinancialAccountAdjustment.ObjectType, Allors.Meta.M.FinancialAccountAdjustment.OnPostBuild); 

		public FinancialAccountAdjustmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialAccountAdjustmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class WithdrawalOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WithdrawalOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Withdrawal.ObjectType, Allors.Meta.M.Withdrawal.OnPostBuild); 

		public WithdrawalOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WithdrawalOnPostBuildMethodInvocation;
			}
		}
	}public partial class EquipmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EquipmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Equipment.ObjectType, Allors.Meta.M.Equipment.OnPostBuild); 

		public EquipmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EquipmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PropertyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PropertyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Property.ObjectType, Allors.Meta.M.Property.OnPostBuild); 

		public PropertyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PropertyOnPostBuildMethodInvocation;
			}
		}
	}public partial class VehicleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VehicleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Vehicle.ObjectType, Allors.Meta.M.Vehicle.OnPostBuild); 

		public VehicleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VehicleOnPostBuildMethodInvocation;
			}
		}
	}public partial class ManufacturingConfigurationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingConfigurationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturingConfiguration.ObjectType, Allors.Meta.M.ManufacturingConfiguration.OnPostBuild); 

		public ManufacturingConfigurationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingConfigurationOnPostBuildMethodInvocation;
			}
		}
	}public partial class ServiceConfigurationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceConfigurationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceConfiguration.ObjectType, Allors.Meta.M.ServiceConfiguration.OnPostBuild); 

		public ServiceConfigurationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceConfigurationOnPostBuildMethodInvocation;
			}
		}
	}public partial class FeeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FeeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Fee.ObjectType, Allors.Meta.M.Fee.OnPostBuild); 

		public FeeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FeeOnPostBuildMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingChargeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingChargeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShippingAndHandlingCharge.ObjectType, Allors.Meta.M.ShippingAndHandlingCharge.OnPostBuild); 

		public ShippingAndHandlingChargeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingChargeOnPostBuildMethodInvocation;
			}
		}
	}public partial class SurchargeAdjustmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeAdjustmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SurchargeAdjustment.ObjectType, Allors.Meta.M.SurchargeAdjustment.OnPostBuild); 

		public SurchargeAdjustmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeAdjustmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class EngineeringBomOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringBomOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringBom.ObjectType, Allors.Meta.M.EngineeringBom.OnPostBuild); 

		public EngineeringBomOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringBomOnPostBuildMethodInvocation;
			}
		}
	}public partial class ManufacturingBomOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingBomOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturingBom.ObjectType, Allors.Meta.M.ManufacturingBom.OnPostBuild); 

		public ManufacturingBomOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingBomOnPostBuildMethodInvocation;
			}
		}
	}public partial class CustomOrganisationClassificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomOrganisationClassificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomOrganisationClassification.ObjectType, Allors.Meta.M.CustomOrganisationClassification.OnPostBuild); 

		public CustomOrganisationClassificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomOrganisationClassificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class IndustryClassificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IndustryClassificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IndustryClassification.ObjectType, Allors.Meta.M.IndustryClassification.OnPostBuild); 

		public IndustryClassificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IndustryClassificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class MarketingPackageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingPackageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MarketingPackage.ObjectType, Allors.Meta.M.MarketingPackage.OnPostBuild); 

		public MarketingPackageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingPackageOnPostBuildMethodInvocation;
			}
		}
	}public partial class ProductConfigurationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductConfigurationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductConfiguration.ObjectType, Allors.Meta.M.ProductConfiguration.OnPostBuild); 

		public ProductConfigurationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductConfigurationOnPostBuildMethodInvocation;
			}
		}
	}public partial class DeliverableTurnoverOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTurnoverOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableTurnover.ObjectType, Allors.Meta.M.DeliverableTurnover.OnPostBuild); 

		public DeliverableTurnoverOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTurnoverOnPostBuildMethodInvocation;
			}
		}
	}public partial class ExpenseEntryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExpenseEntryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ExpenseEntry.ObjectType, Allors.Meta.M.ExpenseEntry.OnPostBuild); 

		public ExpenseEntryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExpenseEntryOnPostBuildMethodInvocation;
			}
		}
	}public partial class MaterialsUsageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MaterialsUsageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MaterialsUsage.ObjectType, Allors.Meta.M.MaterialsUsage.OnPostBuild); 

		public MaterialsUsageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaterialsUsageOnPostBuildMethodInvocation;
			}
		}
	}public partial class TimeEntryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeEntryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeEntry.ObjectType, Allors.Meta.M.TimeEntry.OnPostBuild); 

		public TimeEntryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeEntryOnPostBuildMethodInvocation;
			}
		}
	}
}