// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class SalesInvoiceItemVersion : Allors.IObject , InvoiceItemVersion
	{
		private readonly IStrategy strategy;

		public SalesInvoiceItemVersion(Allors.IStrategy strategy) 
		{
			this.strategy = strategy;
		}

		public Allors.Meta.MetaSalesInvoiceItemVersion Meta
		{
			get
			{
				return Allors.Meta.MetaSalesInvoiceItemVersion.Instance;
			}
		}

		public long Id
		{
			get { return this.strategy.ObjectId; }
		}

		public IStrategy Strategy
        {
            [System.Diagnostics.DebuggerStepThrough]
            get { return this.strategy; }
        }

		public static SalesInvoiceItemVersion Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (SalesInvoiceItemVersion) allorsSession.Instantiate(allorsObjectId);		
		}

		public override bool Equals(object obj)
        {
            var typedObj = obj as IObject;
            return typedObj != null &&
                   typedObj.Strategy.ObjectId.Equals(this.Strategy.ObjectId) &&
                   typedObj.Strategy.Session.Database.Id.Equals(this.Strategy.Session.Database.Id);
        }

		public override int GetHashCode()
        {
            return this.Strategy.ObjectId.GetHashCode();
        }



		virtual public SalesInvoiceItemState SalesInvoiceItemState
		{ 
			get
			{
				return (SalesInvoiceItemState) Strategy.GetCompositeRole(Meta.SalesInvoiceItemState.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SalesInvoiceItemState.RelationType, value);
			}
		}

		virtual public bool ExistSalesInvoiceItemState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SalesInvoiceItemState.RelationType);
			}
		}

		virtual public void RemoveSalesInvoiceItemState()
		{
			Strategy.RemoveCompositeRole(Meta.SalesInvoiceItemState.RelationType);
		}


		virtual public ProductFeature ProductFeature
		{ 
			get
			{
				return (ProductFeature) Strategy.GetCompositeRole(Meta.ProductFeature.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ProductFeature.RelationType, value);
			}
		}

		virtual public bool ExistProductFeature
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ProductFeature.RelationType);
			}
		}

		virtual public void RemoveProductFeature()
		{
			Strategy.RemoveCompositeRole(Meta.ProductFeature.RelationType);
		}


		virtual public global::System.Decimal? RequiredProfitMargin 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.RequiredProfitMargin.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.RequiredProfitMargin.RelationType, value);
			}
		}

		virtual public bool ExistRequiredProfitMargin{
			get
			{
				return Strategy.ExistUnitRole(Meta.RequiredProfitMargin.RelationType);
			}
		}

		virtual public void RemoveRequiredProfitMargin()
		{
			Strategy.RemoveUnitRole(Meta.RequiredProfitMargin.RelationType);
		}


		virtual public global::System.Decimal InitialMarkupPercentage 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.InitialMarkupPercentage.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.InitialMarkupPercentage.RelationType, value);
			}
		}

		virtual public bool ExistInitialMarkupPercentage{
			get
			{
				return Strategy.ExistUnitRole(Meta.InitialMarkupPercentage.RelationType);
			}
		}

		virtual public void RemoveInitialMarkupPercentage()
		{
			Strategy.RemoveUnitRole(Meta.InitialMarkupPercentage.RelationType);
		}


		virtual public global::System.Decimal MaintainedMarkupPercentage 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.MaintainedMarkupPercentage.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.MaintainedMarkupPercentage.RelationType, value);
			}
		}

		virtual public bool ExistMaintainedMarkupPercentage{
			get
			{
				return Strategy.ExistUnitRole(Meta.MaintainedMarkupPercentage.RelationType);
			}
		}

		virtual public void RemoveMaintainedMarkupPercentage()
		{
			Strategy.RemoveUnitRole(Meta.MaintainedMarkupPercentage.RelationType);
		}


		virtual public Product Product
		{ 
			get
			{
				return (Product) Strategy.GetCompositeRole(Meta.Product.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Product.RelationType, value);
			}
		}

		virtual public bool ExistProduct
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Product.RelationType);
			}
		}

		virtual public void RemoveProduct()
		{
			Strategy.RemoveCompositeRole(Meta.Product.RelationType);
		}


		virtual public global::System.Decimal UnitPurchasePrice 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.UnitPurchasePrice.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitPurchasePrice.RelationType, value);
			}
		}

		virtual public bool ExistUnitPurchasePrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitPurchasePrice.RelationType);
			}
		}

		virtual public void RemoveUnitPurchasePrice()
		{
			Strategy.RemoveUnitRole(Meta.UnitPurchasePrice.RelationType);
		}


		virtual public SalesOrderItem SalesOrderItem
		{ 
			get
			{
				return (SalesOrderItem) Strategy.GetCompositeRole(Meta.SalesOrderItem.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SalesOrderItem.RelationType, value);
			}
		}

		virtual public bool ExistSalesOrderItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SalesOrderItem.RelationType);
			}
		}

		virtual public void RemoveSalesOrderItem()
		{
			Strategy.RemoveCompositeRole(Meta.SalesOrderItem.RelationType);
		}


		virtual public SalesInvoiceItemType SalesInvoiceItemType
		{ 
			get
			{
				return (SalesInvoiceItemType) Strategy.GetCompositeRole(Meta.SalesInvoiceItemType.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SalesInvoiceItemType.RelationType, value);
			}
		}

		virtual public bool ExistSalesInvoiceItemType
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SalesInvoiceItemType.RelationType);
			}
		}

		virtual public void RemoveSalesInvoiceItemType()
		{
			Strategy.RemoveCompositeRole(Meta.SalesInvoiceItemType.RelationType);
		}


		virtual public Person SalesRep
		{ 
			get
			{
				return (Person) Strategy.GetCompositeRole(Meta.SalesRep.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SalesRep.RelationType, value);
			}
		}

		virtual public bool ExistSalesRep
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SalesRep.RelationType);
			}
		}

		virtual public void RemoveSalesRep()
		{
			Strategy.RemoveCompositeRole(Meta.SalesRep.RelationType);
		}


		virtual public global::System.Decimal InitialProfitMargin 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.InitialProfitMargin.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.InitialProfitMargin.RelationType, value);
			}
		}

		virtual public bool ExistInitialProfitMargin{
			get
			{
				return Strategy.ExistUnitRole(Meta.InitialProfitMargin.RelationType);
			}
		}

		virtual public void RemoveInitialProfitMargin()
		{
			Strategy.RemoveUnitRole(Meta.InitialProfitMargin.RelationType);
		}


		virtual public global::System.Decimal MaintainedProfitMargin 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.MaintainedProfitMargin.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.MaintainedProfitMargin.RelationType, value);
			}
		}

		virtual public bool ExistMaintainedProfitMargin{
			get
			{
				return Strategy.ExistUnitRole(Meta.MaintainedProfitMargin.RelationType);
			}
		}

		virtual public void RemoveMaintainedProfitMargin()
		{
			Strategy.RemoveUnitRole(Meta.MaintainedProfitMargin.RelationType);
		}


		virtual public global::Allors.Extent<TimeEntry> TimeEntries
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.TimeEntries.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.TimeEntries.RelationType, value);
			}
		}

		virtual public void AddTimeEntry (TimeEntry value)
		{
			Strategy.AddCompositeRole(Meta.TimeEntries.RelationType, value);
		}

		virtual public void RemoveTimeEntry (TimeEntry value)
		{
			Strategy.RemoveCompositeRole(Meta.TimeEntries.RelationType, value);
		}

		virtual public bool ExistTimeEntries
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.TimeEntries.RelationType);
			}
		}

		virtual public void RemoveTimeEntries()
		{
			Strategy.RemoveCompositeRoles(Meta.TimeEntries.RelationType);
		}


		virtual public global::System.Decimal? RequiredMarkupPercentage 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.RequiredMarkupPercentage.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.RequiredMarkupPercentage.RelationType, value);
			}
		}

		virtual public bool ExistRequiredMarkupPercentage{
			get
			{
				return Strategy.ExistUnitRole(Meta.RequiredMarkupPercentage.RelationType);
			}
		}

		virtual public void RemoveRequiredMarkupPercentage()
		{
			Strategy.RemoveUnitRole(Meta.RequiredMarkupPercentage.RelationType);
		}


		virtual public global::System.String InternalComment 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.InternalComment.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.InternalComment.RelationType, value);
			}
		}

		virtual public bool ExistInternalComment{
			get
			{
				return Strategy.ExistUnitRole(Meta.InternalComment.RelationType);
			}
		}

		virtual public void RemoveInternalComment()
		{
			Strategy.RemoveUnitRole(Meta.InternalComment.RelationType);
		}


		virtual public global::Allors.Extent<AgreementTerm> InvoiceTerms
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.InvoiceTerms.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.InvoiceTerms.RelationType, value);
			}
		}

		virtual public void AddInvoiceTerm (AgreementTerm value)
		{
			Strategy.AddCompositeRole(Meta.InvoiceTerms.RelationType, value);
		}

		virtual public void RemoveInvoiceTerm (AgreementTerm value)
		{
			Strategy.RemoveCompositeRole(Meta.InvoiceTerms.RelationType, value);
		}

		virtual public bool ExistInvoiceTerms
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.InvoiceTerms.RelationType);
			}
		}

		virtual public void RemoveInvoiceTerms()
		{
			Strategy.RemoveCompositeRoles(Meta.InvoiceTerms.RelationType);
		}


		virtual public global::System.Decimal TotalInvoiceAdjustment 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalInvoiceAdjustment.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalInvoiceAdjustment.RelationType, value);
			}
		}

		virtual public bool ExistTotalInvoiceAdjustment{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalInvoiceAdjustment.RelationType);
			}
		}

		virtual public void RemoveTotalInvoiceAdjustment()
		{
			Strategy.RemoveUnitRole(Meta.TotalInvoiceAdjustment.RelationType);
		}


		virtual public global::Allors.Extent<InvoiceVatRateItem> InvoiceVatRateItems
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.InvoiceVatRateItems.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.InvoiceVatRateItems.RelationType, value);
			}
		}

		virtual public void AddInvoiceVatRateItem (InvoiceVatRateItem value)
		{
			Strategy.AddCompositeRole(Meta.InvoiceVatRateItems.RelationType, value);
		}

		virtual public void RemoveInvoiceVatRateItem (InvoiceVatRateItem value)
		{
			Strategy.RemoveCompositeRole(Meta.InvoiceVatRateItems.RelationType, value);
		}

		virtual public bool ExistInvoiceVatRateItems
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.InvoiceVatRateItems.RelationType);
			}
		}

		virtual public void RemoveInvoiceVatRateItems()
		{
			Strategy.RemoveCompositeRoles(Meta.InvoiceVatRateItems.RelationType);
		}


		virtual public InvoiceItem AdjustmentFor
		{ 
			get
			{
				return (InvoiceItem) Strategy.GetCompositeRole(Meta.AdjustmentFor.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.AdjustmentFor.RelationType, value);
			}
		}

		virtual public bool ExistAdjustmentFor
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.AdjustmentFor.RelationType);
			}
		}

		virtual public void RemoveAdjustmentFor()
		{
			Strategy.RemoveCompositeRole(Meta.AdjustmentFor.RelationType);
		}


		virtual public SerialisedInventoryItem SerializedInventoryItem
		{ 
			get
			{
				return (SerialisedInventoryItem) Strategy.GetCompositeRole(Meta.SerializedInventoryItem.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SerializedInventoryItem.RelationType, value);
			}
		}

		virtual public bool ExistSerializedInventoryItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SerializedInventoryItem.RelationType);
			}
		}

		virtual public void RemoveSerializedInventoryItem()
		{
			Strategy.RemoveCompositeRole(Meta.SerializedInventoryItem.RelationType);
		}


		virtual public global::System.String Message 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Message.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Message.RelationType, value);
			}
		}

		virtual public bool ExistMessage{
			get
			{
				return Strategy.ExistUnitRole(Meta.Message.RelationType);
			}
		}

		virtual public void RemoveMessage()
		{
			Strategy.RemoveUnitRole(Meta.Message.RelationType);
		}


		virtual public global::System.Decimal TotalInvoiceAdjustmentCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalInvoiceAdjustmentCustomerCurrency.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalInvoiceAdjustmentCustomerCurrency.RelationType, value);
			}
		}

		virtual public bool ExistTotalInvoiceAdjustmentCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalInvoiceAdjustmentCustomerCurrency.RelationType);
			}
		}

		virtual public void RemoveTotalInvoiceAdjustmentCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalInvoiceAdjustmentCustomerCurrency.RelationType);
		}


		virtual public global::System.Decimal AmountPaid 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.AmountPaid.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.AmountPaid.RelationType, value);
			}
		}

		virtual public bool ExistAmountPaid{
			get
			{
				return Strategy.ExistUnitRole(Meta.AmountPaid.RelationType);
			}
		}

		virtual public void RemoveAmountPaid()
		{
			Strategy.RemoveUnitRole(Meta.AmountPaid.RelationType);
		}


		virtual public global::System.Decimal Quantity 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.Quantity.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Quantity.RelationType, value);
			}
		}

		virtual public bool ExistQuantity{
			get
			{
				return Strategy.ExistUnitRole(Meta.Quantity.RelationType);
			}
		}

		virtual public void RemoveQuantity()
		{
			Strategy.RemoveUnitRole(Meta.Quantity.RelationType);
		}


		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Description.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Description.RelationType, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.Description.RelationType);
			}
		}

		virtual public void RemoveDescription()
		{
			Strategy.RemoveUnitRole(Meta.Description.RelationType);
		}


		virtual public global::System.Decimal? TotalDiscountAsPercentage 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalDiscountAsPercentage.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalDiscountAsPercentage.RelationType, value);
			}
		}

		virtual public bool ExistTotalDiscountAsPercentage{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalDiscountAsPercentage.RelationType);
			}
		}

		virtual public void RemoveTotalDiscountAsPercentage()
		{
			Strategy.RemoveUnitRole(Meta.TotalDiscountAsPercentage.RelationType);
		}


		virtual public DiscountAdjustment DiscountAdjustment
		{ 
			get
			{
				return (DiscountAdjustment) Strategy.GetCompositeRole(Meta.DiscountAdjustment.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DiscountAdjustment.RelationType, value);
			}
		}

		virtual public bool ExistDiscountAdjustment
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DiscountAdjustment.RelationType);
			}
		}

		virtual public void RemoveDiscountAdjustment()
		{
			Strategy.RemoveCompositeRole(Meta.DiscountAdjustment.RelationType);
		}


		virtual public global::System.Decimal UnitVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.UnitVat.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitVat.RelationType, value);
			}
		}

		virtual public bool ExistUnitVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitVat.RelationType);
			}
		}

		virtual public void RemoveUnitVat()
		{
			Strategy.RemoveUnitRole(Meta.UnitVat.RelationType);
		}


		virtual public global::System.Decimal TotalVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalVatCustomerCurrency.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalVatCustomerCurrency.RelationType, value);
			}
		}

		virtual public bool ExistTotalVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalVatCustomerCurrency.RelationType);
			}
		}

		virtual public void RemoveTotalVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalVatCustomerCurrency.RelationType);
		}


		virtual public VatRegime VatRegime
		{ 
			get
			{
				return (VatRegime) Strategy.GetCompositeRole(Meta.VatRegime.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.VatRegime.RelationType, value);
			}
		}

		virtual public bool ExistVatRegime
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.VatRegime.RelationType);
			}
		}

		virtual public void RemoveVatRegime()
		{
			Strategy.RemoveCompositeRole(Meta.VatRegime.RelationType);
		}


		virtual public global::System.Decimal TotalVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalVat.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalVat.RelationType, value);
			}
		}

		virtual public bool ExistTotalVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalVat.RelationType);
			}
		}

		virtual public void RemoveTotalVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalVat.RelationType);
		}


		virtual public global::System.Decimal UnitSurcharge 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.UnitSurcharge.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitSurcharge.RelationType, value);
			}
		}

		virtual public bool ExistUnitSurcharge{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitSurcharge.RelationType);
			}
		}

		virtual public void RemoveUnitSurcharge()
		{
			Strategy.RemoveUnitRole(Meta.UnitSurcharge.RelationType);
		}


		virtual public global::System.Decimal UnitDiscount 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.UnitDiscount.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitDiscount.RelationType, value);
			}
		}

		virtual public bool ExistUnitDiscount{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitDiscount.RelationType);
			}
		}

		virtual public void RemoveUnitDiscount()
		{
			Strategy.RemoveUnitRole(Meta.UnitDiscount.RelationType);
		}


		virtual public global::System.Decimal TotalExVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalExVatCustomerCurrency.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalExVatCustomerCurrency.RelationType, value);
			}
		}

		virtual public bool ExistTotalExVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalExVatCustomerCurrency.RelationType);
			}
		}

		virtual public void RemoveTotalExVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalExVatCustomerCurrency.RelationType);
		}


		virtual public VatRate DerivedVatRate
		{ 
			get
			{
				return (VatRate) Strategy.GetCompositeRole(Meta.DerivedVatRate.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DerivedVatRate.RelationType, value);
			}
		}

		virtual public bool ExistDerivedVatRate
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DerivedVatRate.RelationType);
			}
		}

		virtual public void RemoveDerivedVatRate()
		{
			Strategy.RemoveCompositeRole(Meta.DerivedVatRate.RelationType);
		}


		virtual public global::System.Decimal? ActualUnitPrice 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.ActualUnitPrice.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ActualUnitPrice.RelationType, value);
			}
		}

		virtual public bool ExistActualUnitPrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.ActualUnitPrice.RelationType);
			}
		}

		virtual public void RemoveActualUnitPrice()
		{
			Strategy.RemoveUnitRole(Meta.ActualUnitPrice.RelationType);
		}


		virtual public global::System.Decimal TotalIncVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalIncVatCustomerCurrency.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalIncVatCustomerCurrency.RelationType, value);
			}
		}

		virtual public bool ExistTotalIncVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalIncVatCustomerCurrency.RelationType);
			}
		}

		virtual public void RemoveTotalIncVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalIncVatCustomerCurrency.RelationType);
		}


		virtual public global::System.Decimal UnitBasePrice 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.UnitBasePrice.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitBasePrice.RelationType, value);
			}
		}

		virtual public bool ExistUnitBasePrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitBasePrice.RelationType);
			}
		}

		virtual public void RemoveUnitBasePrice()
		{
			Strategy.RemoveUnitRole(Meta.UnitBasePrice.RelationType);
		}


		virtual public global::System.Decimal CalculatedUnitPrice 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.CalculatedUnitPrice.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.CalculatedUnitPrice.RelationType, value);
			}
		}

		virtual public bool ExistCalculatedUnitPrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.CalculatedUnitPrice.RelationType);
			}
		}

		virtual public void RemoveCalculatedUnitPrice()
		{
			Strategy.RemoveUnitRole(Meta.CalculatedUnitPrice.RelationType);
		}


		virtual public global::System.Decimal TotalSurchargeCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalSurchargeCustomerCurrency.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalSurchargeCustomerCurrency.RelationType, value);
			}
		}

		virtual public bool ExistTotalSurchargeCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalSurchargeCustomerCurrency.RelationType);
			}
		}

		virtual public void RemoveTotalSurchargeCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalSurchargeCustomerCurrency.RelationType);
		}


		virtual public global::System.Decimal TotalIncVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalIncVat.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalIncVat.RelationType, value);
			}
		}

		virtual public bool ExistTotalIncVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalIncVat.RelationType);
			}
		}

		virtual public void RemoveTotalIncVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalIncVat.RelationType);
		}


		virtual public global::System.Decimal? TotalSurchargeAsPercentage 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalSurchargeAsPercentage.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalSurchargeAsPercentage.RelationType, value);
			}
		}

		virtual public bool ExistTotalSurchargeAsPercentage{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalSurchargeAsPercentage.RelationType);
			}
		}

		virtual public void RemoveTotalSurchargeAsPercentage()
		{
			Strategy.RemoveUnitRole(Meta.TotalSurchargeAsPercentage.RelationType);
		}


		virtual public global::System.Decimal TotalDiscountCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalDiscountCustomerCurrency.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalDiscountCustomerCurrency.RelationType, value);
			}
		}

		virtual public bool ExistTotalDiscountCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalDiscountCustomerCurrency.RelationType);
			}
		}

		virtual public void RemoveTotalDiscountCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalDiscountCustomerCurrency.RelationType);
		}


		virtual public global::System.Decimal TotalDiscount 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalDiscount.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalDiscount.RelationType, value);
			}
		}

		virtual public bool ExistTotalDiscount{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalDiscount.RelationType);
			}
		}

		virtual public void RemoveTotalDiscount()
		{
			Strategy.RemoveUnitRole(Meta.TotalDiscount.RelationType);
		}


		virtual public global::System.Decimal TotalSurcharge 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalSurcharge.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalSurcharge.RelationType, value);
			}
		}

		virtual public bool ExistTotalSurcharge{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalSurcharge.RelationType);
			}
		}

		virtual public void RemoveTotalSurcharge()
		{
			Strategy.RemoveUnitRole(Meta.TotalSurcharge.RelationType);
		}


		virtual public VatRegime AssignedVatRegime
		{ 
			get
			{
				return (VatRegime) Strategy.GetCompositeRole(Meta.AssignedVatRegime.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.AssignedVatRegime.RelationType, value);
			}
		}

		virtual public bool ExistAssignedVatRegime
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.AssignedVatRegime.RelationType);
			}
		}

		virtual public void RemoveAssignedVatRegime()
		{
			Strategy.RemoveCompositeRole(Meta.AssignedVatRegime.RelationType);
		}


		virtual public global::System.Decimal TotalBasePrice 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalBasePrice.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalBasePrice.RelationType, value);
			}
		}

		virtual public bool ExistTotalBasePrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalBasePrice.RelationType);
			}
		}

		virtual public void RemoveTotalBasePrice()
		{
			Strategy.RemoveUnitRole(Meta.TotalBasePrice.RelationType);
		}


		virtual public global::System.Decimal TotalExVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalExVat.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalExVat.RelationType, value);
			}
		}

		virtual public bool ExistTotalExVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalExVat.RelationType);
			}
		}

		virtual public void RemoveTotalExVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalExVat.RelationType);
		}


		virtual public global::System.Decimal TotalBasePriceCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalBasePriceCustomerCurrency.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalBasePriceCustomerCurrency.RelationType, value);
			}
		}

		virtual public bool ExistTotalBasePriceCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalBasePriceCustomerCurrency.RelationType);
			}
		}

		virtual public void RemoveTotalBasePriceCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalBasePriceCustomerCurrency.RelationType);
		}


		virtual public global::Allors.Extent<PriceComponent> CurrentPriceComponents
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.CurrentPriceComponents.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.CurrentPriceComponents.RelationType, value);
			}
		}

		virtual public void AddCurrentPriceComponent (PriceComponent value)
		{
			Strategy.AddCompositeRole(Meta.CurrentPriceComponents.RelationType, value);
		}

		virtual public void RemoveCurrentPriceComponent (PriceComponent value)
		{
			Strategy.RemoveCompositeRole(Meta.CurrentPriceComponents.RelationType, value);
		}

		virtual public bool ExistCurrentPriceComponents
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.CurrentPriceComponents.RelationType);
			}
		}

		virtual public void RemoveCurrentPriceComponents()
		{
			Strategy.RemoveCompositeRoles(Meta.CurrentPriceComponents.RelationType);
		}


		virtual public SurchargeAdjustment SurchargeAdjustment
		{ 
			get
			{
				return (SurchargeAdjustment) Strategy.GetCompositeRole(Meta.SurchargeAdjustment.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SurchargeAdjustment.RelationType, value);
			}
		}

		virtual public bool ExistSurchargeAdjustment
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SurchargeAdjustment.RelationType);
			}
		}

		virtual public void RemoveSurchargeAdjustment()
		{
			Strategy.RemoveCompositeRole(Meta.SurchargeAdjustment.RelationType);
		}


		virtual public global::System.Guid? DerivationId 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(Meta.DerivationId.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DerivationId.RelationType, value);
			}
		}

		virtual public bool ExistDerivationId{
			get
			{
				return Strategy.ExistUnitRole(Meta.DerivationId.RelationType);
			}
		}

		virtual public void RemoveDerivationId()
		{
			Strategy.RemoveUnitRole(Meta.DerivationId.RelationType);
		}


		virtual public global::System.DateTime? DerivationTimeStamp 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.DerivationTimeStamp.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DerivationTimeStamp.RelationType, value);
			}
		}

		virtual public bool ExistDerivationTimeStamp{
			get
			{
				return Strategy.ExistUnitRole(Meta.DerivationTimeStamp.RelationType);
			}
		}

		virtual public void RemoveDerivationTimeStamp()
		{
			Strategy.RemoveUnitRole(Meta.DerivationTimeStamp.RelationType);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermissions.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermissions.RelationType, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermissions.RelationType, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermissions.RelationType, value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermissions.RelationType);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermissions.RelationType);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityTokens.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityTokens.RelationType, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityTokens.RelationType, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityTokens.RelationType, value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityTokens.RelationType);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityTokens.RelationType);
		}



		virtual public SalesInvoiceItem SalesInvoiceItemWhereCurrentVersion
		{ 
			get
			{
				return (SalesInvoiceItem) Strategy.GetCompositeAssociation(Meta.SalesInvoiceItemWhereCurrentVersion.RelationType);
			}
		} 

		virtual public bool ExistSalesInvoiceItemWhereCurrentVersion
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.SalesInvoiceItemWhereCurrentVersion.RelationType);
			}
		}


		virtual public SalesInvoiceItem SalesInvoiceItemWhereAllVersion
		{ 
			get
			{
				return (SalesInvoiceItem) Strategy.GetCompositeAssociation(Meta.SalesInvoiceItemWhereAllVersion.RelationType);
			}
		} 

		virtual public bool ExistSalesInvoiceItemWhereAllVersion
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.SalesInvoiceItemWhereAllVersion.RelationType);
			}
		}



		public ObjectOnBuild OnBuild()
		{ 
			var method = new SalesInvoiceItemVersionOnBuild(this);
            method.Execute();
            return method;
		}

		public ObjectOnBuild OnBuild(System.Action<ObjectOnBuild> action)
		{ 
			var method = new SalesInvoiceItemVersionOnBuild(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnPostBuild OnPostBuild()
		{ 
			var method = new SalesInvoiceItemVersionOnPostBuild(this);
            method.Execute();
            return method;
		}

		public ObjectOnPostBuild OnPostBuild(System.Action<ObjectOnPostBuild> action)
		{ 
			var method = new SalesInvoiceItemVersionOnPostBuild(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnPreDerive OnPreDerive()
		{ 
			var method = new SalesInvoiceItemVersionOnPreDerive(this);
            method.Execute();
            return method;
		}

		public ObjectOnPreDerive OnPreDerive(System.Action<ObjectOnPreDerive> action)
		{ 
			var method = new SalesInvoiceItemVersionOnPreDerive(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnDerive OnDerive()
		{ 
			var method = new SalesInvoiceItemVersionOnDerive(this);
            method.Execute();
            return method;
		}

		public ObjectOnDerive OnDerive(System.Action<ObjectOnDerive> action)
		{ 
			var method = new SalesInvoiceItemVersionOnDerive(this);
            action(method);
            method.Execute();
            return method;
		}

		public ObjectOnPostDerive OnPostDerive()
		{ 
			var method = new SalesInvoiceItemVersionOnPostDerive(this);
            method.Execute();
            return method;
		}

		public ObjectOnPostDerive OnPostDerive(System.Action<ObjectOnPostDerive> action)
		{ 
			var method = new SalesInvoiceItemVersionOnPostDerive(this);
            action(method);
            method.Execute();
            return method;
		}
	}

	public partial class SalesInvoiceItemVersionBuilder : Allors.ObjectBuilder<SalesInvoiceItemVersion> , InvoiceItemVersionBuilder, global::System.IDisposable
	{		
		public SalesInvoiceItemVersionBuilder(Allors.ISession session) : base(session)
	    {
	    }

		protected override void OnBuild(SalesInvoiceItemVersion instance)
		{
			

			if(this.RequiredProfitMargin.HasValue)
			{
				instance.RequiredProfitMargin = this.RequiredProfitMargin.Value;
			}			
		
												
			

			if(this.RequiredMarkupPercentage.HasValue)
			{
				instance.RequiredMarkupPercentage = this.RequiredMarkupPercentage.Value;
			}			
		
		

			instance.InternalComment = this.InternalComment;
		
				

			instance.Message = this.Message;
		
						
			

			if(this.Quantity.HasValue)
			{
				instance.Quantity = this.Quantity.Value;
			}			
		
		

			instance.Description = this.Description;
		
																
			

			if(this.ActualUnitPrice.HasValue)
			{
				instance.ActualUnitPrice = this.ActualUnitPrice.Value;
			}			
		
																										
			

			if(this.DerivationId.HasValue)
			{
				instance.DerivationId = this.DerivationId.Value;
			}			
		
		
			

			if(this.DerivationTimeStamp.HasValue)
			{
				instance.DerivationTimeStamp = this.DerivationTimeStamp.Value;
			}			
		
		

			instance.SalesInvoiceItemState = this.SalesInvoiceItemState;

		

			instance.ProductFeature = this.ProductFeature;

		

			instance.Product = this.Product;

				

			instance.SalesInvoiceItemType = this.SalesInvoiceItemType;

		

			instance.SalesRep = this.SalesRep;

		
			if(this.TimeEntries!=null)
			{
				instance.TimeEntries = this.TimeEntries.ToArray();
			}
		
			if(this.InvoiceTerms!=null)
			{
				instance.InvoiceTerms = this.InvoiceTerms.ToArray();
			}
		
			if(this.InvoiceVatRateItems!=null)
			{
				instance.InvoiceVatRateItems = this.InvoiceVatRateItems.ToArray();
			}
		

			instance.AdjustmentFor = this.AdjustmentFor;

		

			instance.SerializedInventoryItem = this.SerializedInventoryItem;

		

			instance.DiscountAdjustment = this.DiscountAdjustment;

						

			instance.AssignedVatRegime = this.AssignedVatRegime;

				

			instance.SurchargeAdjustment = this.SurchargeAdjustment;

		
			if(this.DeniedPermissions!=null)
			{
				instance.DeniedPermissions = this.DeniedPermissions.ToArray();
			}
		
			if(this.SecurityTokens!=null)
			{
				instance.SecurityTokens = this.SecurityTokens.ToArray();
			}
		
		}


				public SalesInvoiceItemState SalesInvoiceItemState {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithSalesInvoiceItemState(SalesInvoiceItemState value)
		        {
		            if(this.SalesInvoiceItemState!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SalesInvoiceItemState = value;
		            return this;
		        }		

				
				public ProductFeature ProductFeature {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithProductFeature(ProductFeature value)
		        {
		            if(this.ProductFeature!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ProductFeature = value;
		            return this;
		        }		

				
				public global::System.Decimal? RequiredProfitMargin {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithRequiredProfitMargin(global::System.Decimal? value)
		        {
				    if(this.RequiredProfitMargin!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.RequiredProfitMargin = value;
		            return this;
		        }	

				public Product Product {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithProduct(Product value)
		        {
		            if(this.Product!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Product = value;
		            return this;
		        }		

				
				public SalesInvoiceItemType SalesInvoiceItemType {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithSalesInvoiceItemType(SalesInvoiceItemType value)
		        {
		            if(this.SalesInvoiceItemType!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SalesInvoiceItemType = value;
		            return this;
		        }		

				
				public Person SalesRep {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithSalesRep(Person value)
		        {
		            if(this.SalesRep!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SalesRep = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<TimeEntry> TimeEntries {get; set;}	

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithTimeEntry(TimeEntry value)
		        {
					if(this.TimeEntries == null)
					{
						this.TimeEntries = new global::System.Collections.Generic.List<TimeEntry>(); 
					}
		            this.TimeEntries.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? RequiredMarkupPercentage {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithRequiredMarkupPercentage(global::System.Decimal? value)
		        {
				    if(this.RequiredMarkupPercentage!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.RequiredMarkupPercentage = value;
		            return this;
		        }	

				public global::System.String InternalComment {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithInternalComment(global::System.String value)
		        {
				    if(this.InternalComment!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.InternalComment = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<AgreementTerm> InvoiceTerms {get; set;}	

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithInvoiceTerm(AgreementTerm value)
		        {
					if(this.InvoiceTerms == null)
					{
						this.InvoiceTerms = new global::System.Collections.Generic.List<AgreementTerm>(); 
					}
		            this.InvoiceTerms.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<InvoiceVatRateItem> InvoiceVatRateItems {get; set;}	

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithInvoiceVatRateItem(InvoiceVatRateItem value)
		        {
					if(this.InvoiceVatRateItems == null)
					{
						this.InvoiceVatRateItems = new global::System.Collections.Generic.List<InvoiceVatRateItem>(); 
					}
		            this.InvoiceVatRateItems.Add(value);
		            return this;
		        }		

				
				public InvoiceItem AdjustmentFor {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithAdjustmentFor(InvoiceItem value)
		        {
		            if(this.AdjustmentFor!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.AdjustmentFor = value;
		            return this;
		        }		

				
				public SerialisedInventoryItem SerializedInventoryItem {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithSerializedInventoryItem(SerialisedInventoryItem value)
		        {
		            if(this.SerializedInventoryItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SerializedInventoryItem = value;
		            return this;
		        }		

				
				public global::System.String Message {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithMessage(global::System.String value)
		        {
				    if(this.Message!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Message = value;
		            return this;
		        }	

				public global::System.Decimal? Quantity {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithQuantity(global::System.Decimal? value)
		        {
				    if(this.Quantity!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Quantity = value;
		            return this;
		        }	

				public global::System.String Description {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithDescription(global::System.String value)
		        {
				    if(this.Description!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Description = value;
		            return this;
		        }	

				public DiscountAdjustment DiscountAdjustment {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithDiscountAdjustment(DiscountAdjustment value)
		        {
		            if(this.DiscountAdjustment!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DiscountAdjustment = value;
		            return this;
		        }		

				
				public global::System.Decimal? ActualUnitPrice {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithActualUnitPrice(global::System.Decimal? value)
		        {
				    if(this.ActualUnitPrice!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ActualUnitPrice = value;
		            return this;
		        }	

				public VatRegime AssignedVatRegime {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithAssignedVatRegime(VatRegime value)
		        {
		            if(this.AssignedVatRegime!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.AssignedVatRegime = value;
		            return this;
		        }		

				
				public SurchargeAdjustment SurchargeAdjustment {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithSurchargeAdjustment(SurchargeAdjustment value)
		        {
		            if(this.SurchargeAdjustment!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SurchargeAdjustment = value;
		            return this;
		        }		

				
				public global::System.Guid? DerivationId {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithDerivationId(global::System.Guid? value)
		        {
				    if(this.DerivationId!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DerivationId = value;
		            return this;
		        }	

				public global::System.DateTime? DerivationTimeStamp {get; set;}

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithDerivationTimeStamp(global::System.DateTime? value)
		        {
				    if(this.DerivationTimeStamp!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DerivationTimeStamp = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public SalesInvoiceItemVersionBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				

	}

	public partial class SalesInvoiceItemVersions : global::Allors.ObjectsBase<SalesInvoiceItemVersion>
	{
		public SalesInvoiceItemVersions(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaSalesInvoiceItemVersion Meta
		{
			get
			{
				return Allors.Meta.MetaSalesInvoiceItemVersion.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}