// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface IUnitOfMeasure :  AccessControlledObject,UniquelyIdentifiable, Allors.IObject
	{


		global::System.String Description 
		{
			get;
			set;
		}

		bool ExistDescription{get;}

		void RemoveDescription();


		global::Allors.Extent<UnitOfMeasureConversion> UnitOfMeasureConversions
		{ 
			get;
			set;
		}

		void AddUnitOfMeasureConversion (UnitOfMeasureConversion value);

		void RemoveUnitOfMeasureConversion (UnitOfMeasureConversion value);

		bool ExistUnitOfMeasureConversions
		{
			get;
		}

		void RemoveUnitOfMeasureConversions();


		global::System.String Abbreviation 
		{
			get;
			set;
		}

		bool ExistAbbreviation{get;}

		void RemoveAbbreviation();



		global::Allors.Extent<UnitOfMeasureConversion> UnitOfMeasureConversionsWhereToUnitOfMeasure
		{ 
			get;
		}

		bool ExistUnitOfMeasureConversionsWhereToUnitOfMeasure
		{
			get;
		}

	}

	public partial interface IUnitOfMeasureBuilder : AccessControlledObjectBuilder ,UniquelyIdentifiableBuilder , global::System.IDisposable
	{	
		global::System.String Description {get;}
		


		global::System.Collections.Generic.List<UnitOfMeasureConversion> UnitOfMeasureConversions {get;}		

		

		global::System.String Abbreviation {get;}
		

	}

	public partial class IUnitOfMeasures : global::Allors.ObjectsBase<IUnitOfMeasure>
	{
		public IUnitOfMeasures(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaIUnitOfMeasure Meta
		{
			get
			{
				return Allors.Meta.MetaIUnitOfMeasure.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}