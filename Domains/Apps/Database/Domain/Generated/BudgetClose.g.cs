// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class BudgetClose : Allors.Meta.Method
	{
		protected BudgetClose(Budget @object) : base(@object)
		{
		}
	}

	public partial class AccountingPeriodClose : BudgetClose
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodCloseMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriod.ObjectType, Allors.Meta.M.AccountingPeriod.Close); 

		public AccountingPeriodClose(Budget @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodCloseMethodInvocation;
			}
		}
	}public partial class CapitalBudgetClose : BudgetClose
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetCloseMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudget.ObjectType, Allors.Meta.M.CapitalBudget.Close); 

		public CapitalBudgetClose(Budget @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetCloseMethodInvocation;
			}
		}
	}public partial class OperatingBudgetClose : BudgetClose
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetCloseMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudget.ObjectType, Allors.Meta.M.OperatingBudget.Close); 

		public OperatingBudgetClose(Budget @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetCloseMethodInvocation;
			}
		}
	}
}