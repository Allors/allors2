// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface EngagementItem :  AccessControlledObject, Allors.IObject
	{


		QuoteItem QuoteItem
		{ 
			get;
			set;
		}

		bool ExistQuoteItem
		{
			get;
		}

		void RemoveQuoteItem();


		global::System.String Description 
		{
			get;
			set;
		}

		bool ExistDescription{get;}

		void RemoveDescription();


		global::System.DateTime? ExpectedStartDate 
		{
			get;
			set;
		}

		bool ExistExpectedStartDate{get;}

		void RemoveExpectedStartDate();


		global::System.DateTime? ExpectedEndDate 
		{
			get;
			set;
		}

		bool ExistExpectedEndDate{get;}

		void RemoveExpectedEndDate();


		WorkEffort EngagementWorkFulfillment
		{ 
			get;
			set;
		}

		bool ExistEngagementWorkFulfillment
		{
			get;
		}

		void RemoveEngagementWorkFulfillment();


		global::Allors.Extent<EngagementRate> EngagementRates
		{ 
			get;
			set;
		}

		void AddEngagementRate (EngagementRate value);

		void RemoveEngagementRate (EngagementRate value);

		bool ExistEngagementRates
		{
			get;
		}

		void RemoveEngagementRates();


		EngagementRate CurrentEngagementRate
		{ 
			get;
			set;
		}

		bool ExistCurrentEngagementRate
		{
			get;
		}

		void RemoveCurrentEngagementRate();


		global::Allors.Extent<EngagementItem> OrderedWiths
		{ 
			get;
			set;
		}

		void AddOrderedWith (EngagementItem value);

		void RemoveOrderedWith (EngagementItem value);

		bool ExistOrderedWiths
		{
			get;
		}

		void RemoveOrderedWiths();


		Person CurrentAssignedProfessional
		{ 
			get;
			set;
		}

		bool ExistCurrentAssignedProfessional
		{
			get;
		}

		void RemoveCurrentAssignedProfessional();


		Product Product
		{ 
			get;
			set;
		}

		bool ExistProduct
		{
			get;
		}

		void RemoveProduct();


		ProductFeature ProductFeature
		{ 
			get;
			set;
		}

		bool ExistProductFeature
		{
			get;
		}

		void RemoveProductFeature();



		Engagement EngagementWhereEngagementItem
		{
			get;
		}

		bool ExistEngagementWhereEngagementItem
		{
			get;
		}


		global::Allors.Extent<ProfessionalAssignment> ProfessionalAssignmentsWhereEngagementItem
		{ 
			get;
		}

		bool ExistProfessionalAssignmentsWhereEngagementItem
		{
			get;
		}


		EngagementItem EngagementItemWhereOrderedWith
		{
			get;
		}

		bool ExistEngagementItemWhereOrderedWith
		{
			get;
		}


		global::Allors.Extent<ServiceEntry> ServiceEntriesWhereEngagementItem
		{ 
			get;
		}

		bool ExistServiceEntriesWhereEngagementItem
		{
			get;
		}

	}

	public partial interface EngagementItemBuilder : AccessControlledObjectBuilder , global::System.IDisposable
	{	
		QuoteItem QuoteItem {get;}

		

		global::System.String Description {get;}
		

		global::System.DateTime? ExpectedStartDate {get;}
		

		global::System.DateTime? ExpectedEndDate {get;}
		

		WorkEffort EngagementWorkFulfillment {get;}

		


		global::System.Collections.Generic.List<EngagementRate> EngagementRates {get;}		

		


		global::System.Collections.Generic.List<EngagementItem> OrderedWiths {get;}		

		

		Product Product {get;}

		

		ProductFeature ProductFeature {get;}

		

	}

	public partial class EngagementItems : global::Allors.ObjectsBase<EngagementItem>
	{
		public EngagementItems(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaEngagementItem Meta
		{
			get
			{
				return Allors.Meta.MetaEngagementItem.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}