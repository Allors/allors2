// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface Priceable :  Commentable,Transitional, Allors.IObject
	{


		global::System.Decimal? TotalDiscountAsPercentage 
		{
			get;
			set;
		}

		bool ExistTotalDiscountAsPercentage{get;}

		void RemoveTotalDiscountAsPercentage();


		DiscountAdjustment DiscountAdjustment
		{ 
			get;
			set;
		}

		bool ExistDiscountAdjustment
		{
			get;
		}

		void RemoveDiscountAdjustment();


		global::System.Decimal UnitVat 
		{
			get;
			set;
		}

		bool ExistUnitVat{get;}

		void RemoveUnitVat();


		global::System.Decimal TotalVatCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalVatCustomerCurrency{get;}

		void RemoveTotalVatCustomerCurrency();


		VatRegime VatRegime
		{ 
			get;
			set;
		}

		bool ExistVatRegime
		{
			get;
		}

		void RemoveVatRegime();


		global::System.Decimal TotalVat 
		{
			get;
			set;
		}

		bool ExistTotalVat{get;}

		void RemoveTotalVat();


		global::System.Decimal UnitSurcharge 
		{
			get;
			set;
		}

		bool ExistUnitSurcharge{get;}

		void RemoveUnitSurcharge();


		global::System.Decimal UnitDiscount 
		{
			get;
			set;
		}

		bool ExistUnitDiscount{get;}

		void RemoveUnitDiscount();


		global::System.Decimal TotalExVatCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalExVatCustomerCurrency{get;}

		void RemoveTotalExVatCustomerCurrency();


		VatRate DerivedVatRate
		{ 
			get;
			set;
		}

		bool ExistDerivedVatRate
		{
			get;
		}

		void RemoveDerivedVatRate();


		global::System.Decimal? ActualUnitPrice 
		{
			get;
			set;
		}

		bool ExistActualUnitPrice{get;}

		void RemoveActualUnitPrice();


		global::System.Decimal TotalIncVatCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalIncVatCustomerCurrency{get;}

		void RemoveTotalIncVatCustomerCurrency();


		global::System.Decimal UnitBasePrice 
		{
			get;
			set;
		}

		bool ExistUnitBasePrice{get;}

		void RemoveUnitBasePrice();


		global::System.Decimal CalculatedUnitPrice 
		{
			get;
			set;
		}

		bool ExistCalculatedUnitPrice{get;}

		void RemoveCalculatedUnitPrice();


		global::System.Decimal TotalSurchargeCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalSurchargeCustomerCurrency{get;}

		void RemoveTotalSurchargeCustomerCurrency();


		global::System.Decimal TotalIncVat 
		{
			get;
			set;
		}

		bool ExistTotalIncVat{get;}

		void RemoveTotalIncVat();


		global::System.Decimal? TotalSurchargeAsPercentage 
		{
			get;
			set;
		}

		bool ExistTotalSurchargeAsPercentage{get;}

		void RemoveTotalSurchargeAsPercentage();


		global::System.Decimal TotalDiscountCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalDiscountCustomerCurrency{get;}

		void RemoveTotalDiscountCustomerCurrency();


		global::System.Decimal TotalDiscount 
		{
			get;
			set;
		}

		bool ExistTotalDiscount{get;}

		void RemoveTotalDiscount();


		global::System.Decimal TotalSurcharge 
		{
			get;
			set;
		}

		bool ExistTotalSurcharge{get;}

		void RemoveTotalSurcharge();


		VatRegime AssignedVatRegime
		{ 
			get;
			set;
		}

		bool ExistAssignedVatRegime
		{
			get;
		}

		void RemoveAssignedVatRegime();


		global::System.Decimal TotalBasePrice 
		{
			get;
			set;
		}

		bool ExistTotalBasePrice{get;}

		void RemoveTotalBasePrice();


		global::System.Decimal TotalExVat 
		{
			get;
			set;
		}

		bool ExistTotalExVat{get;}

		void RemoveTotalExVat();


		global::System.Decimal TotalBasePriceCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalBasePriceCustomerCurrency{get;}

		void RemoveTotalBasePriceCustomerCurrency();


		global::Allors.Extent<PriceComponent> CurrentPriceComponents
		{ 
			get;
			set;
		}

		void AddCurrentPriceComponent (PriceComponent value);

		void RemoveCurrentPriceComponent (PriceComponent value);

		bool ExistCurrentPriceComponents
		{
			get;
		}

		void RemoveCurrentPriceComponents();


		SurchargeAdjustment SurchargeAdjustment
		{ 
			get;
			set;
		}

		bool ExistSurchargeAdjustment
		{
			get;
		}

		void RemoveSurchargeAdjustment();

	}

	public partial interface PriceableBuilder : CommentableBuilder ,TransitionalBuilder , global::System.IDisposable
	{	
		DiscountAdjustment DiscountAdjustment {get;}

		

		global::System.Decimal? ActualUnitPrice {get;}
		

		VatRegime AssignedVatRegime {get;}

		

		SurchargeAdjustment SurchargeAdjustment {get;}

		

	}

	public partial class Priceables : global::Allors.ObjectsBase<Priceable>
	{
		public Priceables(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaPriceable Meta
		{
			get
			{
				return Allors.Meta.MetaPriceable.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}