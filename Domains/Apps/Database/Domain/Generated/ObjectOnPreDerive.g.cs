// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPreDerive : Allors.Meta.Method
	{
		protected ObjectOnPreDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class EmailMessageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnPreDerive); 

		public EmailMessageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EventOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Event.ObjectType, Allors.Meta.M.Event.OnPreDerive); 

		public EventOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EventRegistrationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EventRegistrationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EventRegistration.ObjectType, Allors.Meta.M.EventRegistration.OnPreDerive); 

		public EventRegistrationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventRegistrationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FiscalYearInvoiceNumberOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FiscalYearInvoiceNumberOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FiscalYearInvoiceNumber.ObjectType, Allors.Meta.M.FiscalYearInvoiceNumber.OnPreDerive); 

		public FiscalYearInvoiceNumberOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FiscalYearInvoiceNumberOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderItemBillingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderItemBillingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderItemBilling.ObjectType, Allors.Meta.M.OrderItemBilling.OnPreDerive); 

		public OrderItemBillingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderItemBillingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryBillingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryBillingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceEntryBilling.ObjectType, Allors.Meta.M.ServiceEntryBilling.OnPreDerive); 

		public ServiceEntryBillingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryBillingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TransitionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Transition.ObjectType, Allors.Meta.M.Transition.OnPreDerive); 

		public TransitionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortBillingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortBillingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortBilling.ObjectType, Allors.Meta.M.WorkEffortBilling.OnPreDerive); 

		public WorkEffortBillingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortBillingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnPreDerive); 

		public AccessControlOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnPreDerive); 

		public MediaOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnPreDerive); 

		public MediaContentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnPreDerive); 

		public LoginOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnPreDerive); 

		public PermissionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnPreDerive); 

		public SecurityTokenOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NotificationListOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnPreDerive); 

		public NotificationListOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnPreDerive); 

		public PersonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnPreDerive); 

		public TaskAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TaskListOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnPreDerive); 

		public TaskListOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BasePriceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BasePrice.ObjectType, Allors.Meta.M.BasePrice.OnPreDerive); 

		public BasePriceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CatalogueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CatalogueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Catalogue.ObjectType, Allors.Meta.M.Catalogue.OnPreDerive); 

		public CatalogueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CatalogueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerRelationship.ObjectType, Allors.Meta.M.CustomerRelationship.OnPreDerive); 

		public CustomerRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Employment.ObjectType, Allors.Meta.M.Employment.OnPreDerive); 

		public EmploymentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InternalOrganisationRevenue.ObjectType, Allors.Meta.M.InternalOrganisationRevenue.OnPreDerive); 

		public InternalOrganisationRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ItemIssuanceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ItemIssuance.ObjectType, Allors.Meta.M.ItemIssuance.OnPreDerive); 

		public ItemIssuanceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderShipmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderShipment.ObjectType, Allors.Meta.M.OrderShipment.OnPreDerive); 

		public OrderShipmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnPreDerive); 

		public OrganisationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackageRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackageRevenue.ObjectType, Allors.Meta.M.PackageRevenue.OnPreDerive); 

		public PackageRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyContactMechanismOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyContactMechanismOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyContactMechanism.ObjectType, Allors.Meta.M.PartyContactMechanism.OnPreDerive); 

		public PartyContactMechanismOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyContactMechanismOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyPackageRevenue.ObjectType, Allors.Meta.M.PartyPackageRevenue.OnPreDerive); 

		public PartyPackageRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyProductCategoryRevenue.ObjectType, Allors.Meta.M.PartyProductCategoryRevenue.OnPreDerive); 

		public PartyProductCategoryRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyProductRevenue.ObjectType, Allors.Meta.M.PartyProductRevenue.OnPreDerive); 

		public PartyProductRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyRevenue.ObjectType, Allors.Meta.M.PartyRevenue.OnPreDerive); 

		public PartyRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PickListItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListItem.ObjectType, Allors.Meta.M.PickListItem.OnPreDerive); 

		public PickListItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PostalBoundaryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalBoundaryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalBoundary.ObjectType, Allors.Meta.M.PostalBoundary.OnPreDerive); 

		public PostalBoundaryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalBoundaryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCategory.ObjectType, Allors.Meta.M.ProductCategory.OnPreDerive); 

		public ProductCategoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCategoryRevenue.ObjectType, Allors.Meta.M.ProductCategoryRevenue.OnPreDerive); 

		public ProductCategoryRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductCharacteristicValueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCharacteristicValueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCharacteristicValue.ObjectType, Allors.Meta.M.ProductCharacteristicValue.OnPreDerive); 

		public ProductCharacteristicValueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCharacteristicValueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductRevenue.ObjectType, Allors.Meta.M.ProductRevenue.OnPreDerive); 

		public ProductRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItem.ObjectType, Allors.Meta.M.QuoteItem.OnPreDerive); 

		public QuoteItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItem.ObjectType, Allors.Meta.M.RequestItem.OnPreDerive); 

		public RequestItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesChannelRevenue.ObjectType, Allors.Meta.M.SalesChannelRevenue.OnPreDerive); 

		public SalesChannelRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepPartyProductCategoryRevenue.ObjectType, Allors.Meta.M.SalesRepPartyProductCategoryRevenue.OnPreDerive); 

		public SalesRepPartyProductCategoryRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepPartyRevenue.ObjectType, Allors.Meta.M.SalesRepPartyRevenue.OnPreDerive); 

		public SalesRepPartyRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepProductCategoryRevenue.ObjectType, Allors.Meta.M.SalesRepProductCategoryRevenue.OnPreDerive); 

		public SalesRepProductCategoryRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepRevenue.ObjectType, Allors.Meta.M.SalesRepRevenue.OnPreDerive); 

		public SalesRepRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentItem.ObjectType, Allors.Meta.M.ShipmentItem.OnPreDerive); 

		public ShipmentItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StoreRevenueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StoreRevenue.ObjectType, Allors.Meta.M.StoreRevenue.OnPreDerive); 

		public StoreRevenueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SupplierRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SupplierRelationship.ObjectType, Allors.Meta.M.SupplierRelationship.OnPreDerive); 

		public SupplierRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortAssignment.ObjectType, Allors.Meta.M.WorkEffortAssignment.OnPreDerive); 

		public WorkEffortAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmailCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailCommunication.ObjectType, Allors.Meta.M.EmailCommunication.OnPreDerive); 

		public EmailCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaceToFaceCommunication.ObjectType, Allors.Meta.M.FaceToFaceCommunication.OnPreDerive); 

		public FaceToFaceCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FaxCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaxCommunication.ObjectType, Allors.Meta.M.FaxCommunication.OnPreDerive); 

		public FaxCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LetterCorrespondence.ObjectType, Allors.Meta.M.LetterCorrespondence.OnPreDerive); 

		public LetterCorrespondenceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PhoneCommunication.ObjectType, Allors.Meta.M.PhoneCommunication.OnPreDerive); 

		public PhoneCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebSiteCommunication.ObjectType, Allors.Meta.M.WebSiteCommunication.OnPreDerive); 

		public WebSiteCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PostalAddressOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalAddressOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalAddress.ObjectType, Allors.Meta.M.PostalAddress.OnPreDerive); 

		public PostalAddressOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalAddressOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TelecommunicationsNumberOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TelecommunicationsNumberOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TelecommunicationsNumber.ObjectType, Allors.Meta.M.TelecommunicationsNumber.OnPreDerive); 

		public TelecommunicationsNumberOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TelecommunicationsNumberOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmailAddressOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailAddressOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailAddress.ObjectType, Allors.Meta.M.EmailAddress.OnPreDerive); 

		public EmailAddressOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailAddressOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WebAddressOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebAddressOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebAddress.ObjectType, Allors.Meta.M.WebAddress.OnPreDerive); 

		public WebAddressOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebAddressOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItem.ObjectType, Allors.Meta.M.PurchaseInvoiceItem.OnPreDerive); 

		public PurchaseInvoiceItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItem.ObjectType, Allors.Meta.M.SalesInvoiceItem.OnPreDerive); 

		public SalesInvoiceItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationContactRelationship.ObjectType, Allors.Meta.M.OrganisationContactRelationship.OnPreDerive); 

		public OrganisationContactRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationRollUpOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRollUpOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationRollUp.ObjectType, Allors.Meta.M.OrganisationRollUp.OnPreDerive); 

		public OrganisationRollUpOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRollUpOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalServicesRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalServicesRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalServicesRelationship.ObjectType, Allors.Meta.M.ProfessionalServicesRelationship.OnPreDerive); 

		public ProfessionalServicesRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalServicesRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepRelationship.ObjectType, Allors.Meta.M.SalesRepRelationship.OnPreDerive); 

		public SalesRepRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubContractorRelationship.ObjectType, Allors.Meta.M.SubContractorRelationship.OnPreDerive); 

		public SubContractorRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItem.ObjectType, Allors.Meta.M.PurchaseOrderItem.OnPreDerive); 

		public PurchaseOrderItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItem.ObjectType, Allors.Meta.M.SalesOrderItem.OnPreDerive); 

		public SalesOrderItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GoodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Good.ObjectType, Allors.Meta.M.Good.OnPreDerive); 

		public GoodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableBasedServiceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableBasedServiceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableBasedService.ObjectType, Allors.Meta.M.DeliverableBasedService.OnPreDerive); 

		public DeliverableBasedServiceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableBasedServiceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TimeAndMaterialsServiceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeAndMaterialsServiceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeAndMaterialsService.ObjectType, Allors.Meta.M.TimeAndMaterialsService.OnPreDerive); 

		public TimeAndMaterialsServiceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeAndMaterialsServiceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkTaskOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkTaskOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkTask.ObjectType, Allors.Meta.M.WorkTask.OnPreDerive); 

		public WorkTaskOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkTaskOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnPreDerive); 

		public CounterOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnPreDerive); 

		public RoleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnPreDerive); 

		public UserGroupOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CarrierOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CarrierOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Carrier.ObjectType, Allors.Meta.M.Carrier.OnPreDerive); 

		public CarrierOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CarrierOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CaseOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Case.ObjectType, Allors.Meta.M.Case.OnPreDerive); 

		public CaseOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ChartOfAccountsOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ChartOfAccountsOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ChartOfAccounts.ObjectType, Allors.Meta.M.ChartOfAccounts.OnPreDerive); 

		public ChartOfAccountsOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ChartOfAccountsOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenter.ObjectType, Allors.Meta.M.CostCenter.OnPreDerive); 

		public CostCenterOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterCategoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterCategoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenterCategory.ObjectType, Allors.Meta.M.CostCenterCategory.OnPreDerive); 

		public CostCenterCategoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterCategoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccount.ObjectType, Allors.Meta.M.GeneralLedgerAccount.OnPreDerive); 

		public GeneralLedgerAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InternalOrganisationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InternalOrganisation.ObjectType, Allors.Meta.M.InternalOrganisation.OnPreDerive); 

		public InternalOrganisationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderKindOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderKindOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderKind.ObjectType, Allors.Meta.M.OrderKind.OnPreDerive); 

		public OrderKindOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderKindOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationContactKindOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactKindOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationContactKind.ObjectType, Allors.Meta.M.OrganisationContactKind.OnPreDerive); 

		public OrganisationContactKindOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactKindOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Package.ObjectType, Allors.Meta.M.Package.OnPreDerive); 

		public PackageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecification.ObjectType, Allors.Meta.M.PartSpecification.OnPreDerive); 

		public PartSpecificationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductType.ObjectType, Allors.Meta.M.ProductType.OnPreDerive); 

		public ProductTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequirementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Requirement.ObjectType, Allors.Meta.M.Requirement.OnPreDerive); 

		public RequirementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentPackageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentPackageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentPackage.ObjectType, Allors.Meta.M.ShipmentPackage.OnPreDerive); 

		public ShipmentPackageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentPackageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StoreOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StoreOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Store.ObjectType, Allors.Meta.M.Store.OnPreDerive); 

		public StoreOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StringTemplateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StringTemplate.ObjectType, Allors.Meta.M.StringTemplate.OnPreDerive); 

		public StringTemplateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionType.ObjectType, Allors.Meta.M.AccountingTransactionType.OnPreDerive); 

		public AccountingTransactionTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AssetAssignmentStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AssetAssignmentStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AssetAssignmentStatus.ObjectType, Allors.Meta.M.AssetAssignmentStatus.OnPreDerive); 

		public AssetAssignmentStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AssetAssignmentStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CatScopeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CatScopeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CatScope.ObjectType, Allors.Meta.M.CatScope.OnPreDerive); 

		public CatScopeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CatScopeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ColourOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ColourOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Colour.ObjectType, Allors.Meta.M.Colour.OnPreDerive); 

		public ColourOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ColourOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventPurposeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventPurposeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CommunicationEventPurpose.ObjectType, Allors.Meta.M.CommunicationEventPurpose.OnPreDerive); 

		public CommunicationEventPurposeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventPurposeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ContactMechanismPurposeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismPurposeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ContactMechanismPurpose.ObjectType, Allors.Meta.M.ContactMechanismPurpose.OnPreDerive); 

		public ContactMechanismPurposeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismPurposeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ContactMechanismTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ContactMechanismType.ObjectType, Allors.Meta.M.ContactMechanismType.OnPreDerive); 

		public ContactMechanismTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CostCenterSplitMethodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterSplitMethodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenterSplitMethod.ObjectType, Allors.Meta.M.CostCenterSplitMethod.OnPreDerive); 

		public CostCenterSplitMethodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterSplitMethodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CostOfGoodsSoldMethodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CostOfGoodsSoldMethodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostOfGoodsSoldMethod.ObjectType, Allors.Meta.M.CostOfGoodsSoldMethod.OnPreDerive); 

		public CostOfGoodsSoldMethodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostOfGoodsSoldMethodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DebitCreditConstantOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DebitCreditConstantOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DebitCreditConstant.ObjectType, Allors.Meta.M.DebitCreditConstant.OnPreDerive); 

		public DebitCreditConstantOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DebitCreditConstantOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeductionTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeductionType.ObjectType, Allors.Meta.M.DeductionType.OnPreDerive); 

		public DeductionTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableType.ObjectType, Allors.Meta.M.DeliverableType.OnPreDerive); 

		public DeliverableTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DunningTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DunningTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DunningType.ObjectType, Allors.Meta.M.DunningType.OnPreDerive); 

		public DunningTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DunningTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationSourceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationSourceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplicationSource.ObjectType, Allors.Meta.M.EmploymentApplicationSource.OnPreDerive); 

		public EmploymentApplicationSourceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationSourceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplicationStatus.ObjectType, Allors.Meta.M.EmploymentApplicationStatus.OnPreDerive); 

		public EmploymentApplicationStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentTermination.ObjectType, Allors.Meta.M.EmploymentTermination.OnPreDerive); 

		public EmploymentTerminationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationReasonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationReasonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentTerminationReason.ObjectType, Allors.Meta.M.EmploymentTerminationReason.OnPreDerive); 

		public EmploymentTerminationReasonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationReasonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EuSalesListTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EuSalesListTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EuSalesListType.ObjectType, Allors.Meta.M.EuSalesListType.OnPreDerive); 

		public EuSalesListTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EuSalesListTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FacilityTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FacilityTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FacilityType.ObjectType, Allors.Meta.M.FacilityType.OnPreDerive); 

		public FacilityTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FacilityTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GenderTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GenderTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GenderType.ObjectType, Allors.Meta.M.GenderType.OnPreDerive); 

		public GenderTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class HobbyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HobbyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Hobby.ObjectType, Allors.Meta.M.Hobby.OnPreDerive); 

		public HobbyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HobbyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemKindOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemKindOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InventoryItemKind.ObjectType, Allors.Meta.M.InventoryItemKind.OnPreDerive); 

		public InventoryItemKindOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemKindOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceSequenceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceSequenceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceSequence.ObjectType, Allors.Meta.M.InvoiceSequence.OnPreDerive); 

		public InvoiceSequenceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceSequenceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class JournalTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalType.ObjectType, Allors.Meta.M.JournalType.OnPreDerive); 

		public JournalTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MaritalStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaritalStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MaritalStatus.ObjectType, Allors.Meta.M.MaritalStatus.OnPreDerive); 

		public MaritalStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaritalStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ModelOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ModelOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Model.ObjectType, Allors.Meta.M.Model.OnPreDerive); 

		public ModelOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ModelOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationType.ObjectType, Allors.Meta.M.PartSpecificationType.OnPreDerive); 

		public PartSpecificationTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OwnershipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnershipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Ownership.ObjectType, Allors.Meta.M.Ownership.OnPreDerive); 

		public OwnershipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnershipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProcessFlowOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProcessFlowOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProcessFlow.ObjectType, Allors.Meta.M.ProcessFlow.OnPreDerive); 

		public ProcessFlowOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProcessFlowOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrdinalOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrdinalOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Ordinal.ObjectType, Allors.Meta.M.Ordinal.OnPreDerive); 

		public OrdinalOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrdinalOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationRoleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRoleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationRole.ObjectType, Allors.Meta.M.OrganisationRole.OnPreDerive); 

		public OrganisationRoleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRoleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationUnitOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationUnitOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationUnit.ObjectType, Allors.Meta.M.OrganisationUnit.OnPreDerive); 

		public OrganisationUnitOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationUnitOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReviewItemType.ObjectType, Allors.Meta.M.PerformanceReviewItemType.OnPreDerive); 

		public PerformanceReviewItemTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PersonalTitleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonalTitleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonalTitle.ObjectType, Allors.Meta.M.PersonalTitle.OnPreDerive); 

		public PersonalTitleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonalTitleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PersonRoleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonRoleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonRole.ObjectType, Allors.Meta.M.PersonRole.OnPreDerive); 

		public PersonRoleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonRoleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionStatus.ObjectType, Allors.Meta.M.PositionStatus.OnPreDerive); 

		public PositionStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PriorityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PriorityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Priority.ObjectType, Allors.Meta.M.Priority.OnPreDerive); 

		public PriorityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PriorityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductCharacteristicOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCharacteristicOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCharacteristic.ObjectType, Allors.Meta.M.ProductCharacteristic.OnPreDerive); 

		public ProductCharacteristicOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCharacteristicOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductQualityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQualityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuality.ObjectType, Allors.Meta.M.ProductQuality.OnPreDerive); 

		public ProductQualityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQualityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemType.ObjectType, Allors.Meta.M.PurchaseInvoiceItemType.OnPreDerive); 

		public PurchaseInvoiceItemTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceType.ObjectType, Allors.Meta.M.PurchaseInvoiceType.OnPreDerive); 

		public PurchaseInvoiceTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class QualificationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QualificationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Qualification.ObjectType, Allors.Meta.M.Qualification.OnPreDerive); 

		public QualificationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QualificationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RateTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RateTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RateType.ObjectType, Allors.Meta.M.RateType.OnPreDerive); 

		public RateTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RateTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RatingTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RatingTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RatingType.ObjectType, Allors.Meta.M.RatingType.OnPreDerive); 

		public RatingTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RatingTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesChannelOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesChannel.ObjectType, Allors.Meta.M.SalesChannel.OnPreDerive); 

		public SalesChannelOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemType.ObjectType, Allors.Meta.M.SalesInvoiceItemType.OnPreDerive); 

		public SalesInvoiceItemTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceType.ObjectType, Allors.Meta.M.SalesInvoiceType.OnPreDerive); 

		public SalesInvoiceTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalutationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalutationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Salutation.ObjectType, Allors.Meta.M.Salutation.OnPreDerive); 

		public SalutationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalutationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ServiceFeatureOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceFeatureOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceFeature.ObjectType, Allors.Meta.M.ServiceFeature.OnPreDerive); 

		public ServiceFeatureOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceFeatureOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentMethodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentMethodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentMethod.ObjectType, Allors.Meta.M.ShipmentMethod.OnPreDerive); 

		public ShipmentMethodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentMethodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SizeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SizeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Size.ObjectType, Allors.Meta.M.Size.OnPreDerive); 

		public SizeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SizeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SkillOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Skill.ObjectType, Allors.Meta.M.Skill.OnPreDerive); 

		public SkillOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SkillLevelOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillLevelOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SkillLevel.ObjectType, Allors.Meta.M.SkillLevel.OnPreDerive); 

		public SkillLevelOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillLevelOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SkillRatingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SkillRatingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SkillRating.ObjectType, Allors.Meta.M.SkillRating.OnPreDerive); 

		public SkillRatingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillRatingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SoftwareFeatureOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SoftwareFeatureOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SoftwareFeature.ObjectType, Allors.Meta.M.SoftwareFeature.OnPreDerive); 

		public SoftwareFeatureOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SoftwareFeatureOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequirementTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementType.ObjectType, Allors.Meta.M.RequirementType.OnPreDerive); 

		public RequirementTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TimeFrequencyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeFrequencyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeFrequency.ObjectType, Allors.Meta.M.TimeFrequency.OnPreDerive); 

		public TimeFrequencyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeFrequencyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitOfMeasure.ObjectType, Allors.Meta.M.UnitOfMeasure.OnPreDerive); 

		public UnitOfMeasureOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VarianceReasonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VarianceReasonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VarianceReason.ObjectType, Allors.Meta.M.VarianceReason.OnPreDerive); 

		public VarianceReasonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VarianceReasonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatCalculationMethodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatCalculationMethodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatCalculationMethod.ObjectType, Allors.Meta.M.VatCalculationMethod.OnPreDerive); 

		public VatCalculationMethodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatCalculationMethodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatRatePurchaseKindOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRatePurchaseKindOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRatePurchaseKind.ObjectType, Allors.Meta.M.VatRatePurchaseKind.OnPreDerive); 

		public VatRatePurchaseKindOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRatePurchaseKindOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatRateUsageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateUsageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRateUsage.ObjectType, Allors.Meta.M.VatRateUsage.OnPreDerive); 

		public VatRateUsageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateUsageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatRegimeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRegimeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRegime.ObjectType, Allors.Meta.M.VatRegime.OnPreDerive); 

		public VatRegimeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRegimeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatTariffOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatTariffOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatTariff.ObjectType, Allors.Meta.M.VatTariff.OnPreDerive); 

		public VatTariffOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatTariffOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPurposeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPurposeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPurpose.ObjectType, Allors.Meta.M.WorkEffortPurpose.OnPreDerive); 

		public WorkEffortPurposeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPurposeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeKindOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeKindOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortTypeKind.ObjectType, Allors.Meta.M.WorkEffortTypeKind.OnPreDerive); 

		public WorkEffortTypeKindOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeKindOnPreDeriveMethodInvocation;
			}
		}
	}public partial class IncoTermTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncoTermTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IncoTermType.ObjectType, Allors.Meta.M.IncoTermType.OnPreDerive); 

		public IncoTermTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncoTermTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceTermTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceTermType.ObjectType, Allors.Meta.M.InvoiceTermType.OnPreDerive); 

		public InvoiceTermTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetState.ObjectType, Allors.Meta.M.BudgetState.OnPreDerive); 

		public BudgetStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CaseStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CaseState.ObjectType, Allors.Meta.M.CaseState.OnPreDerive); 

		public CaseStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CommunicationEventStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CommunicationEventState.ObjectType, Allors.Meta.M.CommunicationEventState.OnPreDerive); 

		public CommunicationEventStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturnState.ObjectType, Allors.Meta.M.CustomerReturnState.OnPreDerive); 

		public CustomerReturnStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipmentState.ObjectType, Allors.Meta.M.CustomerShipmentState.OnPreDerive); 

		public CustomerShipmentStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipmentState.ObjectType, Allors.Meta.M.DropShipmentState.OnPreDerive); 

		public DropShipmentStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChangeObjectState.ObjectType, Allors.Meta.M.EngineeringChangeObjectState.OnPreDerive); 

		public EngineeringChangeObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItemState.ObjectType, Allors.Meta.M.NonSerialisedInventoryItemState.OnPreDerive); 

		public NonSerialisedInventoryItemStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerializedInventoryItemObjectState.ObjectType, Allors.Meta.M.NonSerializedInventoryItemObjectState.OnPreDerive); 

		public NonSerializedInventoryItemObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderPaymentStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderPaymentStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderPaymentState.ObjectType, Allors.Meta.M.PurchaseOrderPaymentState.OnPreDerive); 

		public PurchaseOrderPaymentStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderPaymentStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderShipmentStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderShipmentStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderShipmentState.ObjectType, Allors.Meta.M.PurchaseOrderShipmentState.OnPreDerive); 

		public PurchaseOrderShipmentStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderShipmentStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemShipmentStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemShipmentStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemShipmentState.ObjectType, Allors.Meta.M.SalesOrderItemShipmentState.OnPreDerive); 

		public SalesOrderItemShipmentStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemShipmentStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemPaymentStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemPaymentStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemPaymentState.ObjectType, Allors.Meta.M.SalesOrderItemPaymentState.OnPreDerive); 

		public SalesOrderItemPaymentStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemPaymentStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderPaymentStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderPaymentStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderPaymentState.ObjectType, Allors.Meta.M.SalesOrderPaymentState.OnPreDerive); 

		public SalesOrderPaymentStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderPaymentStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderShipmentStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderShipmentStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderShipmentState.ObjectType, Allors.Meta.M.SalesOrderShipmentState.OnPreDerive); 

		public SalesOrderShipmentStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderShipmentStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationState.ObjectType, Allors.Meta.M.PartSpecificationState.OnPreDerive); 

		public PartSpecificationStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PickListStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListState.ObjectType, Allors.Meta.M.PickListState.OnPreDerive); 

		public PickListStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemState.ObjectType, Allors.Meta.M.PurchaseInvoiceItemState.OnPreDerive); 

		public PurchaseInvoiceItemStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceState.ObjectType, Allors.Meta.M.PurchaseInvoiceState.OnPreDerive); 

		public PurchaseInvoiceStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItemState.ObjectType, Allors.Meta.M.PurchaseOrderItemState.OnPreDerive); 

		public PurchaseOrderItemStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderState.ObjectType, Allors.Meta.M.PurchaseOrderState.OnPreDerive); 

		public PurchaseOrderStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturnState.ObjectType, Allors.Meta.M.PurchaseReturnState.OnPreDerive); 

		public PurchaseReturnStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipmentState.ObjectType, Allors.Meta.M.PurchaseShipmentState.OnPreDerive); 

		public PurchaseShipmentStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class QuoteStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteState.ObjectType, Allors.Meta.M.QuoteState.OnPreDerive); 

		public QuoteStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItemState.ObjectType, Allors.Meta.M.QuoteItemState.OnPreDerive); 

		public QuoteItemStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequirementStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementState.ObjectType, Allors.Meta.M.RequirementState.OnPreDerive); 

		public RequirementStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemState.ObjectType, Allors.Meta.M.SalesInvoiceItemState.OnPreDerive); 

		public SalesInvoiceItemStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceState.ObjectType, Allors.Meta.M.SalesInvoiceState.OnPreDerive); 

		public SalesInvoiceStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItemState.ObjectType, Allors.Meta.M.RequestItemState.OnPreDerive); 

		public RequestItemStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemState.ObjectType, Allors.Meta.M.SalesOrderItemState.OnPreDerive); 

		public SalesOrderItemStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestState.ObjectType, Allors.Meta.M.RequestState.OnPreDerive); 

		public RequestStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderState.ObjectType, Allors.Meta.M.SalesOrderState.OnPreDerive); 

		public SalesOrderStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItemState.ObjectType, Allors.Meta.M.SerialisedInventoryItemState.OnPreDerive); 

		public SerialisedInventoryItemStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemObjectStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemObjectStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerializedInventoryItemObjectState.ObjectType, Allors.Meta.M.SerializedInventoryItemObjectState.OnPreDerive); 

		public SerializedInventoryItemObjectStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemObjectStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TransferStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TransferState.ObjectType, Allors.Meta.M.TransferState.OnPreDerive); 

		public TransferStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortStateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortStateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortState.ObjectType, Allors.Meta.M.WorkEffortState.OnPreDerive); 

		public WorkEffortStateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortStateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ClientAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ClientAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ClientAgreement.ObjectType, Allors.Meta.M.ClientAgreement.OnPreDerive); 

		public ClientAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentAgreement.ObjectType, Allors.Meta.M.EmploymentAgreement.OnPreDerive); 

		public EmploymentAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseAgreement.ObjectType, Allors.Meta.M.PurchaseAgreement.OnPreDerive); 

		public PurchaseAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesAgreement.ObjectType, Allors.Meta.M.SalesAgreement.OnPreDerive); 

		public SalesAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SubContractorAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubContractorAgreement.ObjectType, Allors.Meta.M.SubContractorAgreement.OnPreDerive); 

		public SubContractorAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccountingPeriodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriod.ObjectType, Allors.Meta.M.AccountingPeriod.OnPreDerive); 

		public AccountingPeriodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CapitalBudgetOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudget.ObjectType, Allors.Meta.M.CapitalBudget.OnPreDerive); 

		public CapitalBudgetOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OperatingBudgetOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudget.ObjectType, Allors.Meta.M.OperatingBudget.OnPreDerive); 

		public OperatingBudgetOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FacilityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FacilityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Facility.ObjectType, Allors.Meta.M.Facility.OnPreDerive); 

		public FacilityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FacilityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnPreDerive); 

		public CountryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.City.ObjectType, Allors.Meta.M.City.OnPreDerive); 

		public CityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CountyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.County.ObjectType, Allors.Meta.M.County.OnPreDerive); 

		public CountyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PostalCodeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PostalCodeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalCode.ObjectType, Allors.Meta.M.PostalCode.OnPreDerive); 

		public PostalCodeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalCodeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProvinceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProvinceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Province.ObjectType, Allors.Meta.M.Province.OnPreDerive); 

		public ProvinceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProvinceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.State.ObjectType, Allors.Meta.M.State.OnPreDerive); 

		public StateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TerritoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TerritoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Territory.ObjectType, Allors.Meta.M.Territory.OnPreDerive); 

		public TerritoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TerritoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RegionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RegionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Region.ObjectType, Allors.Meta.M.Region.OnPreDerive); 

		public RegionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RegionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesTerritoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesTerritoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesTerritory.ObjectType, Allors.Meta.M.SalesTerritory.OnPreDerive); 

		public SalesTerritoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesTerritoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ServiceTerritoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceTerritoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceTerritory.ObjectType, Allors.Meta.M.ServiceTerritory.OnPreDerive); 

		public ServiceTerritoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceTerritoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItem.ObjectType, Allors.Meta.M.NonSerialisedInventoryItem.OnPreDerive); 

		public NonSerialisedInventoryItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItem.ObjectType, Allors.Meta.M.SerialisedInventoryItem.OnPreDerive); 

		public SerialisedInventoryItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnPreDerive); 

		public CurrencyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FinishedGoodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinishedGoodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinishedGood.ObjectType, Allors.Meta.M.FinishedGood.OnPreDerive); 

		public FinishedGoodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinishedGoodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RawMaterialOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RawMaterialOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RawMaterial.ObjectType, Allors.Meta.M.RawMaterial.OnPreDerive); 

		public RawMaterialOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RawMaterialOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SubAssemblyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAssemblyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubAssembly.ObjectType, Allors.Meta.M.SubAssembly.OnPreDerive); 

		public SubAssemblyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAssemblyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnPreDerive); 

		public AutomatedAgentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Disbursement.ObjectType, Allors.Meta.M.Disbursement.OnPreDerive); 

		public DisbursementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PayCheckOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayCheckOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayCheck.ObjectType, Allors.Meta.M.PayCheck.OnPreDerive); 

		public PayCheckOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayCheckOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Receipt.ObjectType, Allors.Meta.M.Receipt.OnPreDerive); 

		public ReceiptOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CashOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CashOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Cash.ObjectType, Allors.Meta.M.Cash.OnPreDerive); 

		public CashOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CashOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OwnBankAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnBankAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OwnBankAccount.ObjectType, Allors.Meta.M.OwnBankAccount.OnPreDerive); 

		public OwnBankAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnBankAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OwnCreditCardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OwnCreditCardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OwnCreditCard.ObjectType, Allors.Meta.M.OwnCreditCard.OnPreDerive); 

		public OwnCreditCardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnCreditCardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BrandOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BrandOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Brand.ObjectType, Allors.Meta.M.Brand.OnPreDerive); 

		public BrandOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BrandOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DimensionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DimensionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dimension.ObjectType, Allors.Meta.M.Dimension.OnPreDerive); 

		public DimensionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DimensionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturn.ObjectType, Allors.Meta.M.CustomerReturn.OnPreDerive); 

		public CustomerReturnOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipment.ObjectType, Allors.Meta.M.CustomerShipment.OnPreDerive); 

		public CustomerShipmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountAdjustment.ObjectType, Allors.Meta.M.DiscountAdjustment.OnPreDerive); 

		public DiscountAdjustmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipment.ObjectType, Allors.Meta.M.DropShipment.OnPreDerive); 

		public DropShipmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PickListOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickList.ObjectType, Allors.Meta.M.PickList.OnPreDerive); 

		public PickListOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductQuoteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuote.ObjectType, Allors.Meta.M.ProductQuote.OnPreDerive); 

		public ProductQuoteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProposalOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Proposal.ObjectType, Allors.Meta.M.Proposal.OnPreDerive); 

		public ProposalOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoice.ObjectType, Allors.Meta.M.PurchaseInvoice.OnPreDerive); 

		public PurchaseInvoiceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrder.ObjectType, Allors.Meta.M.PurchaseOrder.OnPreDerive); 

		public PurchaseOrderOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturn.ObjectType, Allors.Meta.M.PurchaseReturn.OnPreDerive); 

		public PurchaseReturnOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipment.ObjectType, Allors.Meta.M.PurchaseShipment.OnPreDerive); 

		public PurchaseShipmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestForInformationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForInformation.ObjectType, Allors.Meta.M.RequestForInformation.OnPreDerive); 

		public RequestForInformationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestForProposalOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForProposal.ObjectType, Allors.Meta.M.RequestForProposal.OnPreDerive); 

		public RequestForProposalOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestForQuoteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForQuote.ObjectType, Allors.Meta.M.RequestForQuote.OnPreDerive); 

		public RequestForQuoteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoice.ObjectType, Allors.Meta.M.SalesInvoice.OnPreDerive); 

		public SalesInvoiceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrder.ObjectType, Allors.Meta.M.SalesOrder.OnPreDerive); 

		public SalesOrderOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StatementOfWorkOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWork.ObjectType, Allors.Meta.M.StatementOfWork.OnPreDerive); 

		public StatementOfWorkOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TransferOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Transfer.ObjectType, Allors.Meta.M.Transfer.OnPreDerive); 

		public TransferOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnPreDerive); 

		public LocalisedTextOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnPreDerive); 

		public LanguageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnPreDerive); 

		public LocaleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NotificationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnPreDerive); 

		public NotificationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionDetailOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionDetailOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionDetail.ObjectType, Allors.Meta.M.AccountingTransactionDetail.OnPreDerive); 

		public AccountingTransactionDetailOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionDetailOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccountingTransactionNumberOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionNumberOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionNumber.ObjectType, Allors.Meta.M.AccountingTransactionNumber.OnPreDerive); 

		public AccountingTransactionNumberOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionNumberOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AddendumOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AddendumOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Addendum.ObjectType, Allors.Meta.M.Addendum.OnPreDerive); 

		public AddendumOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AddendumOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AmountDueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmountDueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AmountDue.ObjectType, Allors.Meta.M.AmountDue.OnPreDerive); 

		public AmountDueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmountDueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BankOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Bank.ObjectType, Allors.Meta.M.Bank.OnPreDerive); 

		public BankOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BenefitOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BenefitOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Benefit.ObjectType, Allors.Meta.M.Benefit.OnPreDerive); 

		public BenefitOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BenefitOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BillingAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillingAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BillingAccount.ObjectType, Allors.Meta.M.BillingAccount.OnPreDerive); 

		public BillingAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillingAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetItem.ObjectType, Allors.Meta.M.BudgetItem.OnPreDerive); 

		public BudgetItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetReviewOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetReviewOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetReview.ObjectType, Allors.Meta.M.BudgetReview.OnPreDerive); 

		public BudgetReviewOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetReviewOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetRevision.ObjectType, Allors.Meta.M.BudgetRevision.OnPreDerive); 

		public BudgetRevisionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BudgetRevisionImpactOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionImpactOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetRevisionImpact.ObjectType, Allors.Meta.M.BudgetRevisionImpact.OnPreDerive); 

		public BudgetRevisionImpactOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionImpactOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CitizenshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CitizenshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Citizenship.ObjectType, Allors.Meta.M.Citizenship.OnPreDerive); 

		public CitizenshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CitizenshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardCompanyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardCompanyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditCardCompany.ObjectType, Allors.Meta.M.CreditCardCompany.OnPreDerive); 

		public CreditCardCompanyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardCompanyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeductionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deduction.ObjectType, Allors.Meta.M.Deduction.OnPreDerive); 

		public DeductionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deliverable.ObjectType, Allors.Meta.M.Deliverable.OnPreDerive); 

		public DeliverableOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeploymentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeploymentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deployment.ObjectType, Allors.Meta.M.Deployment.OnPreDerive); 

		public DeploymentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeploymentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationMethodOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationMethodOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DepreciationMethod.ObjectType, Allors.Meta.M.DepreciationMethod.OnPreDerive); 

		public DepreciationMethodOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationMethodOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DesiredProductFeatureOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DesiredProductFeatureOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DesiredProductFeature.ObjectType, Allors.Meta.M.DesiredProductFeature.OnPreDerive); 

		public DesiredProductFeatureOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DesiredProductFeatureOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmailTemplateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailTemplateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailTemplate.ObjectType, Allors.Meta.M.EmailTemplate.OnPreDerive); 

		public EmailTemplateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailTemplateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplication.ObjectType, Allors.Meta.M.EmploymentApplication.OnPreDerive); 

		public EmploymentApplicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngagementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Engagement.ObjectType, Allors.Meta.M.Engagement.OnPreDerive); 

		public EngagementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngagementRateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementRateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngagementRate.ObjectType, Allors.Meta.M.EngagementRate.OnPreDerive); 

		public EngagementRateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementRateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChangeStatus.ObjectType, Allors.Meta.M.EngineeringChangeStatus.OnPreDerive); 

		public EngineeringChangeStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountGroupOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountGroupOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccountGroup.ObjectType, Allors.Meta.M.GeneralLedgerAccountGroup.OnPreDerive); 

		public GeneralLedgerAccountGroupOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountGroupOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccountType.ObjectType, Allors.Meta.M.GeneralLedgerAccountType.OnPreDerive); 

		public GeneralLedgerAccountTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GlBudgetAllocationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GlBudgetAllocationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GlBudgetAllocation.ObjectType, Allors.Meta.M.GlBudgetAllocation.OnPreDerive); 

		public GlBudgetAllocationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GlBudgetAllocationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InventoryItemVarianceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemVarianceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InventoryItemVariance.ObjectType, Allors.Meta.M.InventoryItemVariance.OnPreDerive); 

		public InventoryItemVarianceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemVarianceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceVatRateItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceVatRateItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceVatRateItem.ObjectType, Allors.Meta.M.InvoiceVatRateItem.OnPreDerive); 

		public InvoiceVatRateItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceVatRateItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class JournalOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Journal.ObjectType, Allors.Meta.M.Journal.OnPreDerive); 

		public JournalOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalOnPreDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntry.ObjectType, Allors.Meta.M.JournalEntry.OnPreDerive); 

		public JournalEntryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryDetailOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryDetailOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntryDetail.ObjectType, Allors.Meta.M.JournalEntryDetail.OnPreDerive); 

		public JournalEntryDetailOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryDetailOnPreDeriveMethodInvocation;
			}
		}
	}public partial class JournalEntryNumberOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryNumberOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntryNumber.ObjectType, Allors.Meta.M.JournalEntryNumber.OnPreDerive); 

		public JournalEntryNumberOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryNumberOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LegalFormOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalFormOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LegalForm.ObjectType, Allors.Meta.M.LegalForm.OnPreDerive); 

		public LegalFormOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalFormOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LotOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LotOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Lot.ObjectType, Allors.Meta.M.Lot.OnPreDerive); 

		public LotOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LotOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NeededSkillOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NeededSkillOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NeededSkill.ObjectType, Allors.Meta.M.NeededSkill.OnPreDerive); 

		public NeededSkillOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NeededSkillOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NewsItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NewsItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NewsItem.ObjectType, Allors.Meta.M.NewsItem.OnPreDerive); 

		public NewsItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NewsItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerializedInventoryItemStatus.ObjectType, Allors.Meta.M.NonSerializedInventoryItemStatus.OnPreDerive); 

		public NonSerializedInventoryItemStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderQuantityBreakOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderQuantityBreakOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderQuantityBreak.ObjectType, Allors.Meta.M.OrderQuantityBreak.OnPreDerive); 

		public OrderQuantityBreakOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderQuantityBreakOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderRequirementCommitmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderRequirementCommitmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderRequirementCommitment.ObjectType, Allors.Meta.M.OrderRequirementCommitment.OnPreDerive); 

		public OrderRequirementCommitmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderRequirementCommitmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderTerm.ObjectType, Allors.Meta.M.OrderTerm.OnPreDerive); 

		public OrderTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrderValueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrderValueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderValue.ObjectType, Allors.Meta.M.OrderValue.OnPreDerive); 

		public OrderValueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderValueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationGlAccount.ObjectType, Allors.Meta.M.OrganisationGlAccount.OnPreDerive); 

		public OrganisationGlAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountBalanceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountBalanceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationGlAccountBalance.ObjectType, Allors.Meta.M.OrganisationGlAccountBalance.OnPreDerive); 

		public OrganisationGlAccountBalanceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountBalanceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackageQuantityBreakOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackageQuantityBreakOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackageQuantityBreak.ObjectType, Allors.Meta.M.PackageQuantityBreak.OnPreDerive); 

		public PackageQuantityBreakOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageQuantityBreakOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackagingContentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingContentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackagingContent.ObjectType, Allors.Meta.M.PackagingContent.OnPreDerive); 

		public PackagingContentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingContentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartBillOfMaterialSubstituteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartBillOfMaterialSubstituteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartBillOfMaterialSubstitute.ObjectType, Allors.Meta.M.PartBillOfMaterialSubstitute.OnPreDerive); 

		public PartBillOfMaterialSubstituteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartBillOfMaterialSubstituteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartRevisionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartRevisionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartRevision.ObjectType, Allors.Meta.M.PartRevision.OnPreDerive); 

		public PartRevisionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartRevisionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartSubstituteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSubstituteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSubstitute.ObjectType, Allors.Meta.M.PartSubstitute.OnPreDerive); 

		public PartSubstituteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSubstituteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyBenefitOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyBenefitOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyBenefit.ObjectType, Allors.Meta.M.PartyBenefit.OnPreDerive); 

		public PartyBenefitOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyBenefitOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartyFixedAssetAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartyFixedAssetAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyFixedAssetAssignment.ObjectType, Allors.Meta.M.PartyFixedAssetAssignment.OnPreDerive); 

		public PartyFixedAssetAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyFixedAssetAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartySkillOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartySkillOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartySkill.ObjectType, Allors.Meta.M.PartySkill.OnPreDerive); 

		public PartySkillOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartySkillOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PassportOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PassportOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Passport.ObjectType, Allors.Meta.M.Passport.OnPreDerive); 

		public PassportOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PassportOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PayGradeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayGradeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayGrade.ObjectType, Allors.Meta.M.PayGrade.OnPreDerive); 

		public PayGradeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayGradeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PayHistoryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayHistoryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayHistory.ObjectType, Allors.Meta.M.PayHistory.OnPreDerive); 

		public PayHistoryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayHistoryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PaymentApplicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentApplicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentApplication.ObjectType, Allors.Meta.M.PaymentApplication.OnPreDerive); 

		public PaymentApplicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentApplicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PaymentBudgetAllocationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentBudgetAllocationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentBudgetAllocation.ObjectType, Allors.Meta.M.PaymentBudgetAllocation.OnPreDerive); 

		public PaymentBudgetAllocationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentBudgetAllocationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PayrollPreferenceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PayrollPreferenceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayrollPreference.ObjectType, Allors.Meta.M.PayrollPreference.OnPreDerive); 

		public PayrollPreferenceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayrollPreferenceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceNoteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceNoteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceNote.ObjectType, Allors.Meta.M.PerformanceNote.OnPreDerive); 

		public PerformanceNoteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceNoteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReview.ObjectType, Allors.Meta.M.PerformanceReview.OnPreDerive); 

		public PerformanceReviewOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReviewItem.ObjectType, Allors.Meta.M.PerformanceReviewItem.OnPreDerive); 

		public PerformanceReviewItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PersonTrainingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonTrainingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonTraining.ObjectType, Allors.Meta.M.PersonTraining.OnPreDerive); 

		public PersonTrainingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonTrainingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Position.ObjectType, Allors.Meta.M.Position.OnPreDerive); 

		public PositionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionFulfillmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionFulfillmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionFulfillment.ObjectType, Allors.Meta.M.PositionFulfillment.OnPreDerive); 

		public PositionFulfillmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionFulfillmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionReportingStructureOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionReportingStructureOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionReportingStructure.ObjectType, Allors.Meta.M.PositionReportingStructure.OnPreDerive); 

		public PositionReportingStructureOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionReportingStructureOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionResponsibilityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionResponsibilityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionResponsibility.ObjectType, Allors.Meta.M.PositionResponsibility.OnPreDerive); 

		public PositionResponsibilityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionResponsibilityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionType.ObjectType, Allors.Meta.M.PositionType.OnPreDerive); 

		public PositionTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PositionTypeRateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeRateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionTypeRate.ObjectType, Allors.Meta.M.PositionTypeRate.OnPreDerive); 

		public PositionTypeRateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeRateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductDeliverySkillRequirementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDeliverySkillRequirementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductDeliverySkillRequirement.ObjectType, Allors.Meta.M.ProductDeliverySkillRequirement.OnPreDerive); 

		public ProductDeliverySkillRequirementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDeliverySkillRequirementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductFeatureApplicabilityRelationshipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductFeatureApplicabilityRelationshipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductFeatureApplicabilityRelationship.ObjectType, Allors.Meta.M.ProductFeatureApplicabilityRelationship.OnPreDerive); 

		public ProductFeatureApplicabilityRelationshipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductFeatureApplicabilityRelationshipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductPurchasePriceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductPurchasePriceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductPurchasePrice.ObjectType, Allors.Meta.M.ProductPurchasePrice.OnPreDerive); 

		public ProductPurchasePriceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductPurchasePriceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalAssignment.ObjectType, Allors.Meta.M.ProfessionalAssignment.OnPreDerive); 

		public ProfessionalAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class QuoteTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteTerm.ObjectType, Allors.Meta.M.QuoteTerm.OnPreDerive); 

		public QuoteTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequirementBudgetAllocationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementBudgetAllocationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementBudgetAllocation.ObjectType, Allors.Meta.M.RequirementBudgetAllocation.OnPreDerive); 

		public RequirementBudgetAllocationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementBudgetAllocationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequirementCommunicationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementCommunicationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementCommunication.ObjectType, Allors.Meta.M.RequirementCommunication.OnPreDerive); 

		public RequirementCommunicationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementCommunicationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RespondingPartyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RespondingPartyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RespondingParty.ObjectType, Allors.Meta.M.RespondingParty.OnPreDerive); 

		public RespondingPartyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RespondingPartyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ResponsibilityOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResponsibilityOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Responsibility.ObjectType, Allors.Meta.M.Responsibility.OnPreDerive); 

		public ResponsibilityOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResponsibilityOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ResumeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ResumeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Resume.ObjectType, Allors.Meta.M.Resume.OnPreDerive); 

		public ResumeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResumeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RevenueQuantityBreakOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueQuantityBreakOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RevenueQuantityBreak.ObjectType, Allors.Meta.M.RevenueQuantityBreak.OnPreDerive); 

		public RevenueQuantityBreakOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueQuantityBreakOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RevenueValueBreakOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueValueBreakOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RevenueValueBreak.ObjectType, Allors.Meta.M.RevenueValueBreak.OnPreDerive); 

		public RevenueValueBreakOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueValueBreakOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalaryStepOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalaryStepOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalaryStep.ObjectType, Allors.Meta.M.SalaryStep.OnPreDerive); 

		public SalaryStepOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalaryStepOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesRepCommissionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepCommissionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepCommission.ObjectType, Allors.Meta.M.SalesRepCommission.OnPreDerive); 

		public SalesRepCommissionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepCommissionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemStatusOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemStatusOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerializedInventoryItemStatus.ObjectType, Allors.Meta.M.SerializedInventoryItemStatus.OnPreDerive); 

		public SerializedInventoryItemStatusOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemStatusOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ServiceEntryHeaderOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryHeaderOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceEntryHeader.ObjectType, Allors.Meta.M.ServiceEntryHeader.OnPreDerive); 

		public ServiceEntryHeaderOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryHeaderOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentReceiptOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentReceiptOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentReceipt.ObjectType, Allors.Meta.M.ShipmentReceipt.OnPreDerive); 

		public ShipmentReceiptOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentReceiptOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentRouteSegmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentRouteSegmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentRouteSegment.ObjectType, Allors.Meta.M.ShipmentRouteSegment.OnPreDerive); 

		public ShipmentRouteSegmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentRouteSegmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShipmentValueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentValueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentValue.ObjectType, Allors.Meta.M.ShipmentValue.OnPreDerive); 

		public ShipmentValueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentValueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingComponentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingComponentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShippingAndHandlingComponent.ObjectType, Allors.Meta.M.ShippingAndHandlingComponent.OnPreDerive); 

		public ShippingAndHandlingComponentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingComponentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SupplierOfferingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierOfferingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SupplierOffering.ObjectType, Allors.Meta.M.SupplierOffering.OnPreDerive); 

		public SupplierOfferingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierOfferingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TrainingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TrainingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Training.ObjectType, Allors.Meta.M.Training.OnPreDerive); 

		public TrainingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TrainingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureConversionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureConversionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitOfMeasureConversion.ObjectType, Allors.Meta.M.UnitOfMeasureConversion.OnPreDerive); 

		public UnitOfMeasureConversionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureConversionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatFormOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatFormOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatForm.ObjectType, Allors.Meta.M.VatForm.OnPreDerive); 

		public VatFormOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatFormOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatRateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRate.ObjectType, Allors.Meta.M.VatRate.OnPreDerive); 

		public VatRateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatReturnBox.ObjectType, Allors.Meta.M.VatReturnBox.OnPreDerive); 

		public VatReturnBoxOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VatReturnBoxTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatReturnBoxType.ObjectType, Allors.Meta.M.VatReturnBoxType.OnPreDerive); 

		public VatReturnBoxTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentRateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentRateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortAssignmentRate.ObjectType, Allors.Meta.M.WorkEffortAssignmentRate.OnPreDerive); 

		public WorkEffortAssignmentRateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentRateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortFixedAssetAssignment.ObjectType, Allors.Meta.M.WorkEffortFixedAssetAssignment.OnPreDerive); 

		public WorkEffortFixedAssetAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetStandardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetStandardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortFixedAssetStandard.ObjectType, Allors.Meta.M.WorkEffortFixedAssetStandard.OnPreDerive); 

		public WorkEffortFixedAssetStandardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetStandardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortGoodStandardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortGoodStandardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortGoodStandard.ObjectType, Allors.Meta.M.WorkEffortGoodStandard.OnPreDerive); 

		public WorkEffortGoodStandardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortGoodStandardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortInventoryAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortInventoryAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortInventoryAssignment.ObjectType, Allors.Meta.M.WorkEffortInventoryAssignment.OnPreDerive); 

		public WorkEffortInventoryAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortInventoryAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartStandardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartStandardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPartStandard.ObjectType, Allors.Meta.M.WorkEffortPartStandard.OnPreDerive); 

		public WorkEffortPartStandardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartStandardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortPartyAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartyAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPartyAssignment.ObjectType, Allors.Meta.M.WorkEffortPartyAssignment.OnPreDerive); 

		public WorkEffortPartyAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartyAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortSkillStandardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortSkillStandardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortSkillStandard.ObjectType, Allors.Meta.M.WorkEffortSkillStandard.OnPreDerive); 

		public WorkEffortSkillStandardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortSkillStandardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortType.ObjectType, Allors.Meta.M.WorkEffortType.OnPreDerive); 

		public WorkEffortTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CaseVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CaseVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CaseVersion.ObjectType, Allors.Meta.M.CaseVersion.OnPreDerive); 

		public CaseVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PartSpecificationVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationVersion.ObjectType, Allors.Meta.M.PartSpecificationVersion.OnPreDerive); 

		public PartSpecificationVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PickListVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PickListVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListVersion.ObjectType, Allors.Meta.M.PickListVersion.OnPreDerive); 

		public PickListVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class QuoteItemVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItemVersion.ObjectType, Allors.Meta.M.QuoteItemVersion.OnPreDerive); 

		public QuoteItemVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestItemVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItemVersion.ObjectType, Allors.Meta.M.RequestItemVersion.OnPreDerive); 

		public RequestItemVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequirementVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementVersion.ObjectType, Allors.Meta.M.RequirementVersion.OnPreDerive); 

		public RequirementVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccountingPeriodVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriodVersion.ObjectType, Allors.Meta.M.AccountingPeriodVersion.OnPreDerive); 

		public AccountingPeriodVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CapitalBudgetVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudgetVersion.ObjectType, Allors.Meta.M.CapitalBudgetVersion.OnPreDerive); 

		public CapitalBudgetVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OperatingBudgetVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudgetVersion.ObjectType, Allors.Meta.M.OperatingBudgetVersion.OnPreDerive); 

		public OperatingBudgetVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmailCommunicationVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailCommunicationVersion.ObjectType, Allors.Meta.M.EmailCommunicationVersion.OnPreDerive); 

		public EmailCommunicationVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaceToFaceCommunicationVersion.ObjectType, Allors.Meta.M.FaceToFaceCommunicationVersion.OnPreDerive); 

		public FaceToFaceCommunicationVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FaxCommunicationVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaxCommunicationVersion.ObjectType, Allors.Meta.M.FaxCommunicationVersion.OnPreDerive); 

		public FaxCommunicationVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LetterCorrespondenceVersion.ObjectType, Allors.Meta.M.LetterCorrespondenceVersion.OnPreDerive); 

		public LetterCorrespondenceVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PhoneCommunicationVersion.ObjectType, Allors.Meta.M.PhoneCommunicationVersion.OnPreDerive); 

		public PhoneCommunicationVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebSiteCommunicationVersion.ObjectType, Allors.Meta.M.WebSiteCommunicationVersion.OnPreDerive); 

		public WebSiteCommunicationVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItemVersion.ObjectType, Allors.Meta.M.NonSerialisedInventoryItemVersion.OnPreDerive); 

		public NonSerialisedInventoryItemVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItemVersion.ObjectType, Allors.Meta.M.SerialisedInventoryItemVersion.OnPreDerive); 

		public SerialisedInventoryItemVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceVersion.ObjectType, Allors.Meta.M.PurchaseInvoiceVersion.OnPreDerive); 

		public PurchaseInvoiceVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceVersion.ObjectType, Allors.Meta.M.SalesInvoiceVersion.OnPreDerive); 

		public SalesInvoiceVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountAdjustmentVersion.ObjectType, Allors.Meta.M.DiscountAdjustmentVersion.OnPreDerive); 

		public DiscountAdjustmentVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderVersion.ObjectType, Allors.Meta.M.PurchaseOrderVersion.OnPreDerive); 

		public PurchaseOrderVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderVersion.ObjectType, Allors.Meta.M.SalesOrderVersion.OnPreDerive); 

		public SalesOrderVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgentVersion.ObjectType, Allors.Meta.M.AutomatedAgentVersion.OnPreDerive); 

		public AutomatedAgentVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationVersion.ObjectType, Allors.Meta.M.OrganisationVersion.OnPreDerive); 

		public OrganisationVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PersonVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonVersion.ObjectType, Allors.Meta.M.PersonVersion.OnPreDerive); 

		public PersonVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemVersion.ObjectType, Allors.Meta.M.PurchaseInvoiceItemVersion.OnPreDerive); 

		public PurchaseInvoiceItemVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemVersion.ObjectType, Allors.Meta.M.SalesInvoiceItemVersion.OnPreDerive); 

		public SalesInvoiceItemVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItemVersion.ObjectType, Allors.Meta.M.PurchaseOrderItemVersion.OnPreDerive); 

		public PurchaseOrderItemVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesOrderItemVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemVersion.ObjectType, Allors.Meta.M.SalesOrderItemVersion.OnPreDerive); 

		public SalesOrderItemVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductQuoteVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuoteVersion.ObjectType, Allors.Meta.M.ProductQuoteVersion.OnPreDerive); 

		public ProductQuoteVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProposalVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProposalVersion.ObjectType, Allors.Meta.M.ProposalVersion.OnPreDerive); 

		public ProposalVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StatementOfWorkVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWorkVersion.ObjectType, Allors.Meta.M.StatementOfWorkVersion.OnPreDerive); 

		public StatementOfWorkVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestForInformationVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForInformationVersion.ObjectType, Allors.Meta.M.RequestForInformationVersion.OnPreDerive); 

		public RequestForInformationVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestForProposalVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForProposalVersion.ObjectType, Allors.Meta.M.RequestForProposalVersion.OnPreDerive); 

		public RequestForProposalVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RequestForQuoteVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForQuoteVersion.ObjectType, Allors.Meta.M.RequestForQuoteVersion.OnPreDerive); 

		public RequestForQuoteVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerReturnVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturnVersion.ObjectType, Allors.Meta.M.CustomerReturnVersion.OnPreDerive); 

		public CustomerReturnVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomerShipmentVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipmentVersion.ObjectType, Allors.Meta.M.CustomerShipmentVersion.OnPreDerive); 

		public CustomerShipmentVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DropShipmentVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipmentVersion.ObjectType, Allors.Meta.M.DropShipmentVersion.OnPreDerive); 

		public DropShipmentVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseReturnVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturnVersion.ObjectType, Allors.Meta.M.PurchaseReturnVersion.OnPreDerive); 

		public PurchaseReturnVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipmentVersion.ObjectType, Allors.Meta.M.PurchaseShipmentVersion.OnPreDerive); 

		public PurchaseShipmentVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TransferVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TransferVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TransferVersion.ObjectType, Allors.Meta.M.TransferVersion.OnPreDerive); 

		public TransferVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WorkTaskVersionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WorkTaskVersionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkTaskVersion.ObjectType, Allors.Meta.M.WorkTaskVersion.OnPreDerive); 

		public WorkTaskVersionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkTaskVersionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringChangeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChange.ObjectType, Allors.Meta.M.EngineeringChange.OnPreDerive); 

		public EngineeringChangeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ItemVarianceAccountingTransactionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ItemVarianceAccountingTransactionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ItemVarianceAccountingTransaction.ObjectType, Allors.Meta.M.ItemVarianceAccountingTransaction.OnPreDerive); 

		public ItemVarianceAccountingTransactionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemVarianceAccountingTransactionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CreditLineOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditLineOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditLine.ObjectType, Allors.Meta.M.CreditLine.OnPreDerive); 

		public CreditLineOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditLineOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DisbursementAccountingTransactionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementAccountingTransactionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DisbursementAccountingTransaction.ObjectType, Allors.Meta.M.DisbursementAccountingTransaction.OnPreDerive); 

		public DisbursementAccountingTransactionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementAccountingTransactionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NoteOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NoteOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Note.ObjectType, Allors.Meta.M.Note.OnPreDerive); 

		public NoteOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NoteOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ObligationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ObligationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Obligation.ObjectType, Allors.Meta.M.Obligation.OnPreDerive); 

		public ObligationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ObligationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ReceiptAccountingTransactionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptAccountingTransactionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ReceiptAccountingTransaction.ObjectType, Allors.Meta.M.ReceiptAccountingTransaction.OnPreDerive); 

		public ReceiptAccountingTransactionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptAccountingTransactionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SalesAccountingTransactionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAccountingTransactionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesAccountingTransaction.ObjectType, Allors.Meta.M.SalesAccountingTransaction.OnPreDerive); 

		public SalesAccountingTransactionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAccountingTransactionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TaxDueOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDueOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaxDue.ObjectType, Allors.Meta.M.TaxDue.OnPreDerive); 

		public TaxDueOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDueOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AmortizationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AmortizationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Amortization.ObjectType, Allors.Meta.M.Amortization.OnPreDerive); 

		public AmortizationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmortizationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CapitalizationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalizationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Capitalization.ObjectType, Allors.Meta.M.Capitalization.OnPreDerive); 

		public CapitalizationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalizationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DepreciationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Depreciation.ObjectType, Allors.Meta.M.Depreciation.OnPreDerive); 

		public DepreciationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AgreementExhibitOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementExhibitOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementExhibit.ObjectType, Allors.Meta.M.AgreementExhibit.OnPreDerive); 

		public AgreementExhibitOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementExhibitOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AgreementPricingProgramOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementPricingProgramOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementPricingProgram.ObjectType, Allors.Meta.M.AgreementPricingProgram.OnPreDerive); 

		public AgreementPricingProgramOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementPricingProgramOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AgreementSectionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementSectionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementSection.ObjectType, Allors.Meta.M.AgreementSection.OnPreDerive); 

		public AgreementSectionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementSectionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SubAgreementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SubAgreementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubAgreement.ObjectType, Allors.Meta.M.SubAgreement.OnPreDerive); 

		public SubAgreementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAgreementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FinancialTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinancialTerm.ObjectType, Allors.Meta.M.FinancialTerm.OnPreDerive); 

		public FinancialTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class IncentiveOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncentiveOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Incentive.ObjectType, Allors.Meta.M.Incentive.OnPreDerive); 

		public IncentiveOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncentiveOnPreDeriveMethodInvocation;
			}
		}
	}public partial class IncoTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IncoTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IncoTerm.ObjectType, Allors.Meta.M.IncoTerm.OnPreDerive); 

		public IncoTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncoTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InvoiceTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceTerm.ObjectType, Allors.Meta.M.InvoiceTerm.OnPreDerive); 

		public InvoiceTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LegalTermOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LegalTermOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LegalTerm.ObjectType, Allors.Meta.M.LegalTerm.OnPreDerive); 

		public LegalTermOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalTermOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ThresholdOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ThresholdOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Threshold.ObjectType, Allors.Meta.M.Threshold.OnPreDerive); 

		public ThresholdOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThresholdOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnPreDerive); 

		public SingletonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ActivityUsageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityUsageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ActivityUsage.ObjectType, Allors.Meta.M.ActivityUsage.OnPreDerive); 

		public ActivityUsageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityUsageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TimePeriodUsageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimePeriodUsageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimePeriodUsage.ObjectType, Allors.Meta.M.TimePeriodUsage.OnPreDerive); 

		public TimePeriodUsageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimePeriodUsageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VolumeUsageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VolumeUsageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VolumeUsage.ObjectType, Allors.Meta.M.VolumeUsage.OnPreDerive); 

		public VolumeUsageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VolumeUsageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BillOfLadingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BillOfLadingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BillOfLading.ObjectType, Allors.Meta.M.BillOfLading.OnPreDerive); 

		public BillOfLadingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillOfLadingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringDocumentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringDocumentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringDocument.ObjectType, Allors.Meta.M.EngineeringDocument.OnPreDerive); 

		public EngineeringDocumentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringDocumentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ExportDocumentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExportDocumentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ExportDocument.ObjectType, Allors.Meta.M.ExportDocument.OnPreDerive); 

		public ExportDocumentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExportDocumentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class HazardousMaterialsDocumentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation HazardousMaterialsDocumentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.HazardousMaterialsDocument.ObjectType, Allors.Meta.M.HazardousMaterialsDocument.OnPreDerive); 

		public HazardousMaterialsDocumentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HazardousMaterialsDocumentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ManifestOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManifestOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Manifest.ObjectType, Allors.Meta.M.Manifest.OnPreDerive); 

		public ManifestOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManifestOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MarketingMaterialOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingMaterialOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MarketingMaterial.ObjectType, Allors.Meta.M.MarketingMaterial.OnPreDerive); 

		public MarketingMaterialOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingMaterialOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PackagingSlipOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingSlipOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackagingSlip.ObjectType, Allors.Meta.M.PackagingSlip.OnPreDerive); 

		public PackagingSlipOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingSlipOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductDrawingOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDrawingOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductDrawing.ObjectType, Allors.Meta.M.ProductDrawing.OnPreDerive); 

		public ProductDrawingOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDrawingOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductModelOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductModelOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductModel.ObjectType, Allors.Meta.M.ProductModel.OnPreDerive); 

		public ProductModelOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductModelOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TaxDocumentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDocumentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaxDocument.ObjectType, Allors.Meta.M.TaxDocument.OnPreDerive); 

		public TaxDocumentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDocumentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomEngagementItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomEngagementItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomEngagementItem.ObjectType, Allors.Meta.M.CustomEngagementItem.OnPreDerive); 

		public CustomEngagementItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomEngagementItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableOrderItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOrderItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableOrderItem.ObjectType, Allors.Meta.M.DeliverableOrderItem.OnPreDerive); 

		public DeliverableOrderItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOrderItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class GoodOrderItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOrderItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GoodOrderItem.ObjectType, Allors.Meta.M.GoodOrderItem.OnPreDerive); 

		public GoodOrderItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOrderItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProfessionalPlacementOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalPlacementOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalPlacement.ObjectType, Allors.Meta.M.ProfessionalPlacement.OnPreDerive); 

		public ProfessionalPlacementOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalPlacementOnPreDeriveMethodInvocation;
			}
		}
	}public partial class StandardServiceOrderItemOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation StandardServiceOrderItemOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StandardServiceOrderItem.ObjectType, Allors.Meta.M.StandardServiceOrderItem.OnPreDerive); 

		public StandardServiceOrderItemOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StandardServiceOrderItemOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedLaborCostOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedLaborCostOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedLaborCost.ObjectType, Allors.Meta.M.EstimatedLaborCost.OnPreDerive); 

		public EstimatedLaborCostOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedLaborCostOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedMaterialCostOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedMaterialCostOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedMaterialCost.ObjectType, Allors.Meta.M.EstimatedMaterialCost.OnPreDerive); 

		public EstimatedMaterialCostOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedMaterialCostOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EstimatedOtherCostOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedOtherCostOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedOtherCost.ObjectType, Allors.Meta.M.EstimatedOtherCost.OnPreDerive); 

		public EstimatedOtherCostOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedOtherCostOnPreDeriveMethodInvocation;
			}
		}
	}public partial class BankAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation BankAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BankAccount.ObjectType, Allors.Meta.M.BankAccount.OnPreDerive); 

		public BankAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CreditCardOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditCard.ObjectType, Allors.Meta.M.CreditCard.OnPreDerive); 

		public CreditCardOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardOnPreDeriveMethodInvocation;
			}
		}
	}public partial class InvestmentAccountOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation InvestmentAccountOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvestmentAccount.ObjectType, Allors.Meta.M.InvestmentAccount.OnPreDerive); 

		public InvestmentAccountOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvestmentAccountOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccountAdjustmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccountAdjustmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountAdjustment.ObjectType, Allors.Meta.M.AccountAdjustment.OnPreDerive); 

		public AccountAdjustmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountAdjustmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DepositOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DepositOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deposit.ObjectType, Allors.Meta.M.Deposit.OnPreDerive); 

		public DepositOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepositOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FinancialAccountAdjustmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialAccountAdjustmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinancialAccountAdjustment.ObjectType, Allors.Meta.M.FinancialAccountAdjustment.OnPreDerive); 

		public FinancialAccountAdjustmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialAccountAdjustmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class WithdrawalOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation WithdrawalOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Withdrawal.ObjectType, Allors.Meta.M.Withdrawal.OnPreDerive); 

		public WithdrawalOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WithdrawalOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EquipmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EquipmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Equipment.ObjectType, Allors.Meta.M.Equipment.OnPreDerive); 

		public EquipmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EquipmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PropertyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PropertyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Property.ObjectType, Allors.Meta.M.Property.OnPreDerive); 

		public PropertyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PropertyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class VehicleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation VehicleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Vehicle.ObjectType, Allors.Meta.M.Vehicle.OnPreDerive); 

		public VehicleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VehicleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingConfigurationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingConfigurationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturingConfiguration.ObjectType, Allors.Meta.M.ManufacturingConfiguration.OnPreDerive); 

		public ManufacturingConfigurationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingConfigurationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ServiceConfigurationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceConfigurationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceConfiguration.ObjectType, Allors.Meta.M.ServiceConfiguration.OnPreDerive); 

		public ServiceConfigurationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceConfigurationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class FeeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation FeeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Fee.ObjectType, Allors.Meta.M.Fee.OnPreDerive); 

		public FeeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FeeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingChargeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingChargeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShippingAndHandlingCharge.ObjectType, Allors.Meta.M.ShippingAndHandlingCharge.OnPreDerive); 

		public ShippingAndHandlingChargeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingChargeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeAdjustmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeAdjustmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SurchargeAdjustment.ObjectType, Allors.Meta.M.SurchargeAdjustment.OnPreDerive); 

		public SurchargeAdjustmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeAdjustmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EngineeringBomOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringBomOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringBom.ObjectType, Allors.Meta.M.EngineeringBom.OnPreDerive); 

		public EngineeringBomOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringBomOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturingBomOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingBomOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturingBom.ObjectType, Allors.Meta.M.ManufacturingBom.OnPreDerive); 

		public ManufacturingBomOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingBomOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CustomOrganisationClassificationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CustomOrganisationClassificationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomOrganisationClassification.ObjectType, Allors.Meta.M.CustomOrganisationClassification.OnPreDerive); 

		public CustomOrganisationClassificationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomOrganisationClassificationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class IndustryClassificationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation IndustryClassificationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IndustryClassification.ObjectType, Allors.Meta.M.IndustryClassification.OnPreDerive); 

		public IndustryClassificationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IndustryClassificationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DiscountComponentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountComponentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountComponent.ObjectType, Allors.Meta.M.DiscountComponent.OnPreDerive); 

		public DiscountComponentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountComponentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ManufacturerSuggestedRetailPriceOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturerSuggestedRetailPriceOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturerSuggestedRetailPrice.ObjectType, Allors.Meta.M.ManufacturerSuggestedRetailPrice.OnPreDerive); 

		public ManufacturerSuggestedRetailPriceOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturerSuggestedRetailPriceOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OneTimeChargeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OneTimeChargeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OneTimeCharge.ObjectType, Allors.Meta.M.OneTimeCharge.OnPreDerive); 

		public OneTimeChargeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneTimeChargeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RecurringChargeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RecurringChargeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RecurringCharge.ObjectType, Allors.Meta.M.RecurringCharge.OnPreDerive); 

		public RecurringChargeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RecurringChargeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SurchargeComponentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeComponentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SurchargeComponent.ObjectType, Allors.Meta.M.SurchargeComponent.OnPreDerive); 

		public SurchargeComponentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeComponentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UtilizationChargeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UtilizationChargeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UtilizationCharge.ObjectType, Allors.Meta.M.UtilizationCharge.OnPreDerive); 

		public UtilizationChargeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UtilizationChargeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MarketingPackageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingPackageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MarketingPackage.ObjectType, Allors.Meta.M.MarketingPackage.OnPreDerive); 

		public MarketingPackageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingPackageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ProductConfigurationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ProductConfigurationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductConfiguration.ObjectType, Allors.Meta.M.ProductConfiguration.OnPreDerive); 

		public ProductConfigurationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductConfigurationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class DeliverableTurnoverOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTurnoverOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableTurnover.ObjectType, Allors.Meta.M.DeliverableTurnover.OnPreDerive); 

		public DeliverableTurnoverOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTurnoverOnPreDeriveMethodInvocation;
			}
		}
	}public partial class ExpenseEntryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation ExpenseEntryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ExpenseEntry.ObjectType, Allors.Meta.M.ExpenseEntry.OnPreDerive); 

		public ExpenseEntryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExpenseEntryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MaterialsUsageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MaterialsUsageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MaterialsUsage.ObjectType, Allors.Meta.M.MaterialsUsage.OnPreDerive); 

		public MaterialsUsageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaterialsUsageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TimeEntryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TimeEntryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeEntry.ObjectType, Allors.Meta.M.TimeEntry.OnPreDerive); 

		public TimeEntryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeEntryOnPreDeriveMethodInvocation;
			}
		}
	}
}