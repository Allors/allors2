// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnBuild : Allors.Meta.Method
	{
		protected ObjectOnBuild(Object @object) : base(@object)
		{
		}
	}

	public partial class EmailMessageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnBuild); 

		public EmailMessageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnBuildMethodInvocation;
			}
		}
	}public partial class EventOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EventOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Event.ObjectType, Allors.Meta.M.Event.OnBuild); 

		public EventOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventOnBuildMethodInvocation;
			}
		}
	}public partial class EventRegistrationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EventRegistrationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EventRegistration.ObjectType, Allors.Meta.M.EventRegistration.OnBuild); 

		public EventRegistrationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EventRegistrationOnBuildMethodInvocation;
			}
		}
	}public partial class FiscalYearInvoiceNumberOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FiscalYearInvoiceNumberOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FiscalYearInvoiceNumber.ObjectType, Allors.Meta.M.FiscalYearInvoiceNumber.OnBuild); 

		public FiscalYearInvoiceNumberOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FiscalYearInvoiceNumberOnBuildMethodInvocation;
			}
		}
	}public partial class OrderItemBillingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderItemBillingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderItemBilling.ObjectType, Allors.Meta.M.OrderItemBilling.OnBuild); 

		public OrderItemBillingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderItemBillingOnBuildMethodInvocation;
			}
		}
	}public partial class ServiceEntryBillingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryBillingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceEntryBilling.ObjectType, Allors.Meta.M.ServiceEntryBilling.OnBuild); 

		public ServiceEntryBillingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryBillingOnBuildMethodInvocation;
			}
		}
	}public partial class TransitionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransitionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Transition.ObjectType, Allors.Meta.M.Transition.OnBuild); 

		public TransitionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransitionOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortBillingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortBillingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortBilling.ObjectType, Allors.Meta.M.WorkEffortBilling.OnBuild); 

		public WorkEffortBillingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortBillingOnBuildMethodInvocation;
			}
		}
	}public partial class AccessControlOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnBuild); 

		public AccessControlOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnBuildMethodInvocation;
			}
		}
	}public partial class MediaOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnBuild); 

		public MediaOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnBuildMethodInvocation;
			}
		}
	}public partial class MediaContentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnBuild); 

		public MediaContentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnBuildMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnBuild); 

		public LocalisedTextOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnBuildMethodInvocation;
			}
		}
	}public partial class LoginOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnBuild); 

		public LoginOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnBuildMethodInvocation;
			}
		}
	}public partial class PermissionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnBuild); 

		public PermissionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnBuildMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnBuild); 

		public SecurityTokenOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnBuildMethodInvocation;
			}
		}
	}public partial class NotificationListOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnBuild); 

		public NotificationListOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnBuildMethodInvocation;
			}
		}
	}public partial class PersonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnBuild); 

		public PersonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnBuildMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnBuild); 

		public TaskAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class TaskListOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnBuild); 

		public TaskListOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnBuildMethodInvocation;
			}
		}
	}public partial class CatalogueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CatalogueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Catalogue.ObjectType, Allors.Meta.M.Catalogue.OnBuild); 

		public CatalogueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CatalogueOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerRelationship.ObjectType, Allors.Meta.M.CustomerRelationship.OnBuild); 

		public CustomerRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Employment.ObjectType, Allors.Meta.M.Employment.OnBuild); 

		public EmploymentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentOnBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InternalOrganisationRevenue.ObjectType, Allors.Meta.M.InternalOrganisationRevenue.OnBuild); 

		public InternalOrganisationRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class ItemIssuanceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ItemIssuanceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ItemIssuance.ObjectType, Allors.Meta.M.ItemIssuance.OnBuild); 

		public ItemIssuanceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemIssuanceOnBuildMethodInvocation;
			}
		}
	}public partial class OrderShipmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderShipmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderShipment.ObjectType, Allors.Meta.M.OrderShipment.OnBuild); 

		public OrderShipmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderShipmentOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnBuild); 

		public OrganisationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnBuildMethodInvocation;
			}
		}
	}public partial class PackageRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackageRevenue.ObjectType, Allors.Meta.M.PackageRevenue.OnBuild); 

		public PackageRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class PartyContactMechanismOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyContactMechanismOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyContactMechanism.ObjectType, Allors.Meta.M.PartyContactMechanism.OnBuild); 

		public PartyContactMechanismOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyContactMechanismOnBuildMethodInvocation;
			}
		}
	}public partial class PartyPackageRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyPackageRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyPackageRevenue.ObjectType, Allors.Meta.M.PartyPackageRevenue.OnBuild); 

		public PartyPackageRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyPackageRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class PartyProductCategoryRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductCategoryRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyProductCategoryRevenue.ObjectType, Allors.Meta.M.PartyProductCategoryRevenue.OnBuild); 

		public PartyProductCategoryRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductCategoryRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class PartyProductRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyProductRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyProductRevenue.ObjectType, Allors.Meta.M.PartyProductRevenue.OnBuild); 

		public PartyProductRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyProductRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class PartyRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyRevenue.ObjectType, Allors.Meta.M.PartyRevenue.OnBuild); 

		public PartyRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class PickListItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListItem.ObjectType, Allors.Meta.M.PickListItem.OnBuild); 

		public PickListItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListItemOnBuildMethodInvocation;
			}
		}
	}public partial class PostalBoundaryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalBoundaryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalBoundary.ObjectType, Allors.Meta.M.PostalBoundary.OnBuild); 

		public PostalBoundaryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalBoundaryOnBuildMethodInvocation;
			}
		}
	}public partial class ProductCategoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCategory.ObjectType, Allors.Meta.M.ProductCategory.OnBuild); 

		public ProductCategoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryOnBuildMethodInvocation;
			}
		}
	}public partial class ProductCategoryRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCategoryRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCategoryRevenue.ObjectType, Allors.Meta.M.ProductCategoryRevenue.OnBuild); 

		public ProductCategoryRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCategoryRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class ProductCharacteristicValueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCharacteristicValueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCharacteristicValue.ObjectType, Allors.Meta.M.ProductCharacteristicValue.OnBuild); 

		public ProductCharacteristicValueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCharacteristicValueOnBuildMethodInvocation;
			}
		}
	}public partial class ProductRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductRevenue.ObjectType, Allors.Meta.M.ProductRevenue.OnBuild); 

		public ProductRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class QuoteItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItem.ObjectType, Allors.Meta.M.QuoteItem.OnBuild); 

		public QuoteItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemOnBuildMethodInvocation;
			}
		}
	}public partial class RequestItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItem.ObjectType, Allors.Meta.M.RequestItem.OnBuild); 

		public RequestItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemOnBuildMethodInvocation;
			}
		}
	}public partial class SalesChannelRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesChannelRevenue.ObjectType, Allors.Meta.M.SalesChannelRevenue.OnBuild); 

		public SalesChannelRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepPartyProductCategoryRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyProductCategoryRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepPartyProductCategoryRevenue.ObjectType, Allors.Meta.M.SalesRepPartyProductCategoryRevenue.OnBuild); 

		public SalesRepPartyProductCategoryRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyProductCategoryRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepPartyRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepPartyRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepPartyRevenue.ObjectType, Allors.Meta.M.SalesRepPartyRevenue.OnBuild); 

		public SalesRepPartyRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepPartyRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepProductCategoryRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepProductCategoryRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepProductCategoryRevenue.ObjectType, Allors.Meta.M.SalesRepProductCategoryRevenue.OnBuild); 

		public SalesRepProductCategoryRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepProductCategoryRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepRevenue.ObjectType, Allors.Meta.M.SalesRepRevenue.OnBuild); 

		public SalesRepRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentItem.ObjectType, Allors.Meta.M.ShipmentItem.OnBuild); 

		public ShipmentItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentItemOnBuildMethodInvocation;
			}
		}
	}public partial class StoreRevenueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StoreRevenueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StoreRevenue.ObjectType, Allors.Meta.M.StoreRevenue.OnBuild); 

		public StoreRevenueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreRevenueOnBuildMethodInvocation;
			}
		}
	}public partial class SupplierRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SupplierRelationship.ObjectType, Allors.Meta.M.SupplierRelationship.OnBuild); 

		public SupplierRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortAssignment.ObjectType, Allors.Meta.M.WorkEffortAssignment.OnBuild); 

		public WorkEffortAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class EmailCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailCommunication.ObjectType, Allors.Meta.M.EmailCommunication.OnBuild); 

		public EmailCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaceToFaceCommunication.ObjectType, Allors.Meta.M.FaceToFaceCommunication.OnBuild); 

		public FaceToFaceCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class FaxCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaxCommunication.ObjectType, Allors.Meta.M.FaxCommunication.OnBuild); 

		public FaxCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LetterCorrespondence.ObjectType, Allors.Meta.M.LetterCorrespondence.OnBuild); 

		public LetterCorrespondenceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceOnBuildMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PhoneCommunication.ObjectType, Allors.Meta.M.PhoneCommunication.OnBuild); 

		public PhoneCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebSiteCommunication.ObjectType, Allors.Meta.M.WebSiteCommunication.OnBuild); 

		public WebSiteCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class PostalAddressOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalAddressOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalAddress.ObjectType, Allors.Meta.M.PostalAddress.OnBuild); 

		public PostalAddressOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalAddressOnBuildMethodInvocation;
			}
		}
	}public partial class TelecommunicationsNumberOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TelecommunicationsNumberOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TelecommunicationsNumber.ObjectType, Allors.Meta.M.TelecommunicationsNumber.OnBuild); 

		public TelecommunicationsNumberOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TelecommunicationsNumberOnBuildMethodInvocation;
			}
		}
	}public partial class EmailAddressOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailAddressOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailAddress.ObjectType, Allors.Meta.M.EmailAddress.OnBuild); 

		public EmailAddressOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailAddressOnBuildMethodInvocation;
			}
		}
	}public partial class WebAddressOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WebAddressOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebAddress.ObjectType, Allors.Meta.M.WebAddress.OnBuild); 

		public WebAddressOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebAddressOnBuildMethodInvocation;
			}
		}
	}public partial class EstimatedLaborCostOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedLaborCostOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedLaborCost.ObjectType, Allors.Meta.M.EstimatedLaborCost.OnBuild); 

		public EstimatedLaborCostOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedLaborCostOnBuildMethodInvocation;
			}
		}
	}public partial class EstimatedMaterialCostOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedMaterialCostOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedMaterialCost.ObjectType, Allors.Meta.M.EstimatedMaterialCost.OnBuild); 

		public EstimatedMaterialCostOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedMaterialCostOnBuildMethodInvocation;
			}
		}
	}public partial class EstimatedOtherCostOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EstimatedOtherCostOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EstimatedOtherCost.ObjectType, Allors.Meta.M.EstimatedOtherCost.OnBuild); 

		public EstimatedOtherCostOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EstimatedOtherCostOnBuildMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItemVersion.ObjectType, Allors.Meta.M.NonSerialisedInventoryItemVersion.OnBuild); 

		public NonSerialisedInventoryItemVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemVersionOnBuildMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItemVersion.ObjectType, Allors.Meta.M.SerialisedInventoryItemVersion.OnBuild); 

		public SerialisedInventoryItemVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemVersionOnBuildMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItem.ObjectType, Allors.Meta.M.NonSerialisedInventoryItem.OnBuild); 

		public NonSerialisedInventoryItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemOnBuildMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItem.ObjectType, Allors.Meta.M.SerialisedInventoryItem.OnBuild); 

		public SerialisedInventoryItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItem.ObjectType, Allors.Meta.M.PurchaseInvoiceItem.OnBuild); 

		public PurchaseInvoiceItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItem.ObjectType, Allors.Meta.M.SalesInvoiceItem.OnBuild); 

		public SalesInvoiceItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationContactRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationContactRelationship.ObjectType, Allors.Meta.M.OrganisationContactRelationship.OnBuild); 

		public OrganisationContactRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationRollUpOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRollUpOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationRollUp.ObjectType, Allors.Meta.M.OrganisationRollUp.OnBuild); 

		public OrganisationRollUpOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRollUpOnBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalServicesRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalServicesRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalServicesRelationship.ObjectType, Allors.Meta.M.ProfessionalServicesRelationship.OnBuild); 

		public ProfessionalServicesRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalServicesRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepRelationship.ObjectType, Allors.Meta.M.SalesRepRelationship.OnBuild); 

		public SalesRepRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class SubContractorRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubContractorRelationship.ObjectType, Allors.Meta.M.SubContractorRelationship.OnBuild); 

		public SubContractorRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItem.ObjectType, Allors.Meta.M.PurchaseOrderItem.OnBuild); 

		public PurchaseOrderItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItem.ObjectType, Allors.Meta.M.SalesOrderItem.OnBuild); 

		public SalesOrderItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemOnBuildMethodInvocation;
			}
		}
	}public partial class BasePriceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BasePriceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BasePrice.ObjectType, Allors.Meta.M.BasePrice.OnBuild); 

		public BasePriceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BasePriceOnBuildMethodInvocation;
			}
		}
	}public partial class DiscountComponentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountComponentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountComponent.ObjectType, Allors.Meta.M.DiscountComponent.OnBuild); 

		public DiscountComponentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountComponentOnBuildMethodInvocation;
			}
		}
	}public partial class ManufacturerSuggestedRetailPriceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturerSuggestedRetailPriceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturerSuggestedRetailPrice.ObjectType, Allors.Meta.M.ManufacturerSuggestedRetailPrice.OnBuild); 

		public ManufacturerSuggestedRetailPriceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturerSuggestedRetailPriceOnBuildMethodInvocation;
			}
		}
	}public partial class OneTimeChargeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OneTimeChargeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OneTimeCharge.ObjectType, Allors.Meta.M.OneTimeCharge.OnBuild); 

		public OneTimeChargeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OneTimeChargeOnBuildMethodInvocation;
			}
		}
	}public partial class RecurringChargeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RecurringChargeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RecurringCharge.ObjectType, Allors.Meta.M.RecurringCharge.OnBuild); 

		public RecurringChargeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RecurringChargeOnBuildMethodInvocation;
			}
		}
	}public partial class SurchargeComponentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeComponentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SurchargeComponent.ObjectType, Allors.Meta.M.SurchargeComponent.OnBuild); 

		public SurchargeComponentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeComponentOnBuildMethodInvocation;
			}
		}
	}public partial class UtilizationChargeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UtilizationChargeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UtilizationCharge.ObjectType, Allors.Meta.M.UtilizationCharge.OnBuild); 

		public UtilizationChargeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UtilizationChargeOnBuildMethodInvocation;
			}
		}
	}public partial class GoodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Good.ObjectType, Allors.Meta.M.Good.OnBuild); 

		public GoodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOnBuildMethodInvocation;
			}
		}
	}public partial class DeliverableBasedServiceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableBasedServiceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableBasedService.ObjectType, Allors.Meta.M.DeliverableBasedService.OnBuild); 

		public DeliverableBasedServiceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableBasedServiceOnBuildMethodInvocation;
			}
		}
	}public partial class TimeAndMaterialsServiceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeAndMaterialsServiceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeAndMaterialsService.ObjectType, Allors.Meta.M.TimeAndMaterialsService.OnBuild); 

		public TimeAndMaterialsServiceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeAndMaterialsServiceOnBuildMethodInvocation;
			}
		}
	}public partial class WorkTaskOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkTaskOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkTask.ObjectType, Allors.Meta.M.WorkTask.OnBuild); 

		public WorkTaskOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkTaskOnBuildMethodInvocation;
			}
		}
	}public partial class CounterOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnBuild); 

		public CounterOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnBuildMethodInvocation;
			}
		}
	}public partial class RoleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnBuild); 

		public RoleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnBuildMethodInvocation;
			}
		}
	}public partial class UserGroupOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnBuild); 

		public UserGroupOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnBuildMethodInvocation;
			}
		}
	}public partial class CarrierOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CarrierOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Carrier.ObjectType, Allors.Meta.M.Carrier.OnBuild); 

		public CarrierOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CarrierOnBuildMethodInvocation;
			}
		}
	}public partial class CaseOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Case.ObjectType, Allors.Meta.M.Case.OnBuild); 

		public CaseOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseOnBuildMethodInvocation;
			}
		}
	}public partial class ChartOfAccountsOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ChartOfAccountsOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ChartOfAccounts.ObjectType, Allors.Meta.M.ChartOfAccounts.OnBuild); 

		public ChartOfAccountsOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ChartOfAccountsOnBuildMethodInvocation;
			}
		}
	}public partial class CostCenterOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenter.ObjectType, Allors.Meta.M.CostCenter.OnBuild); 

		public CostCenterOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterOnBuildMethodInvocation;
			}
		}
	}public partial class CostCenterCategoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterCategoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenterCategory.ObjectType, Allors.Meta.M.CostCenterCategory.OnBuild); 

		public CostCenterCategoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterCategoryOnBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccount.ObjectType, Allors.Meta.M.GeneralLedgerAccount.OnBuild); 

		public GeneralLedgerAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountOnBuildMethodInvocation;
			}
		}
	}public partial class InternalOrganisationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InternalOrganisationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InternalOrganisation.ObjectType, Allors.Meta.M.InternalOrganisation.OnBuild); 

		public InternalOrganisationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InternalOrganisationOnBuildMethodInvocation;
			}
		}
	}public partial class OrderKindOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderKindOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderKind.ObjectType, Allors.Meta.M.OrderKind.OnBuild); 

		public OrderKindOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderKindOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationContactKindOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationContactKindOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationContactKind.ObjectType, Allors.Meta.M.OrganisationContactKind.OnBuild); 

		public OrganisationContactKindOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationContactKindOnBuildMethodInvocation;
			}
		}
	}public partial class PackageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Package.ObjectType, Allors.Meta.M.Package.OnBuild); 

		public PackageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageOnBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecification.ObjectType, Allors.Meta.M.PartSpecification.OnBuild); 

		public PartSpecificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationOnBuildMethodInvocation;
			}
		}
	}public partial class ProductTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductType.ObjectType, Allors.Meta.M.ProductType.OnBuild); 

		public ProductTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductTypeOnBuildMethodInvocation;
			}
		}
	}public partial class RequirementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Requirement.ObjectType, Allors.Meta.M.Requirement.OnBuild); 

		public RequirementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentPackageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentPackageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentPackage.ObjectType, Allors.Meta.M.ShipmentPackage.OnBuild); 

		public ShipmentPackageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentPackageOnBuildMethodInvocation;
			}
		}
	}public partial class StoreOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StoreOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Store.ObjectType, Allors.Meta.M.Store.OnBuild); 

		public StoreOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StoreOnBuildMethodInvocation;
			}
		}
	}public partial class StringTemplateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StringTemplateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StringTemplate.ObjectType, Allors.Meta.M.StringTemplate.OnBuild); 

		public StringTemplateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StringTemplateOnBuildMethodInvocation;
			}
		}
	}public partial class AccountingTransactionTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionType.ObjectType, Allors.Meta.M.AccountingTransactionType.OnBuild); 

		public AccountingTransactionTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionTypeOnBuildMethodInvocation;
			}
		}
	}public partial class AssetAssignmentStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AssetAssignmentStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AssetAssignmentStatus.ObjectType, Allors.Meta.M.AssetAssignmentStatus.OnBuild); 

		public AssetAssignmentStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AssetAssignmentStatusOnBuildMethodInvocation;
			}
		}
	}public partial class CatScopeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CatScopeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CatScope.ObjectType, Allors.Meta.M.CatScope.OnBuild); 

		public CatScopeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CatScopeOnBuildMethodInvocation;
			}
		}
	}public partial class ColourOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ColourOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Colour.ObjectType, Allors.Meta.M.Colour.OnBuild); 

		public ColourOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ColourOnBuildMethodInvocation;
			}
		}
	}public partial class CommunicationEventPurposeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventPurposeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CommunicationEventPurpose.ObjectType, Allors.Meta.M.CommunicationEventPurpose.OnBuild); 

		public CommunicationEventPurposeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventPurposeOnBuildMethodInvocation;
			}
		}
	}public partial class ContactMechanismPurposeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismPurposeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ContactMechanismPurpose.ObjectType, Allors.Meta.M.ContactMechanismPurpose.OnBuild); 

		public ContactMechanismPurposeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismPurposeOnBuildMethodInvocation;
			}
		}
	}public partial class ContactMechanismTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ContactMechanismTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ContactMechanismType.ObjectType, Allors.Meta.M.ContactMechanismType.OnBuild); 

		public ContactMechanismTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ContactMechanismTypeOnBuildMethodInvocation;
			}
		}
	}public partial class CostCenterSplitMethodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostCenterSplitMethodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostCenterSplitMethod.ObjectType, Allors.Meta.M.CostCenterSplitMethod.OnBuild); 

		public CostCenterSplitMethodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostCenterSplitMethodOnBuildMethodInvocation;
			}
		}
	}public partial class CostOfGoodsSoldMethodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CostOfGoodsSoldMethodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CostOfGoodsSoldMethod.ObjectType, Allors.Meta.M.CostOfGoodsSoldMethod.OnBuild); 

		public CostOfGoodsSoldMethodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CostOfGoodsSoldMethodOnBuildMethodInvocation;
			}
		}
	}public partial class DebitCreditConstantOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DebitCreditConstantOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DebitCreditConstant.ObjectType, Allors.Meta.M.DebitCreditConstant.OnBuild); 

		public DebitCreditConstantOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DebitCreditConstantOnBuildMethodInvocation;
			}
		}
	}public partial class DeductionTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeductionType.ObjectType, Allors.Meta.M.DeductionType.OnBuild); 

		public DeductionTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionTypeOnBuildMethodInvocation;
			}
		}
	}public partial class DeliverableTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableType.ObjectType, Allors.Meta.M.DeliverableType.OnBuild); 

		public DeliverableTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTypeOnBuildMethodInvocation;
			}
		}
	}public partial class DunningTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DunningTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DunningType.ObjectType, Allors.Meta.M.DunningType.OnBuild); 

		public DunningTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DunningTypeOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationSourceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationSourceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplicationSource.ObjectType, Allors.Meta.M.EmploymentApplicationSource.OnBuild); 

		public EmploymentApplicationSourceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationSourceOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplicationStatus.ObjectType, Allors.Meta.M.EmploymentApplicationStatus.OnBuild); 

		public EmploymentApplicationStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationStatusOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentTermination.ObjectType, Allors.Meta.M.EmploymentTermination.OnBuild); 

		public EmploymentTerminationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentTerminationReasonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentTerminationReasonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentTerminationReason.ObjectType, Allors.Meta.M.EmploymentTerminationReason.OnBuild); 

		public EmploymentTerminationReasonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentTerminationReasonOnBuildMethodInvocation;
			}
		}
	}public partial class EuSalesListTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EuSalesListTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EuSalesListType.ObjectType, Allors.Meta.M.EuSalesListType.OnBuild); 

		public EuSalesListTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EuSalesListTypeOnBuildMethodInvocation;
			}
		}
	}public partial class FacilityTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FacilityTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FacilityType.ObjectType, Allors.Meta.M.FacilityType.OnBuild); 

		public FacilityTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FacilityTypeOnBuildMethodInvocation;
			}
		}
	}public partial class GenderTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GenderTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GenderType.ObjectType, Allors.Meta.M.GenderType.OnBuild); 

		public GenderTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GenderTypeOnBuildMethodInvocation;
			}
		}
	}public partial class HobbyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HobbyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Hobby.ObjectType, Allors.Meta.M.Hobby.OnBuild); 

		public HobbyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HobbyOnBuildMethodInvocation;
			}
		}
	}public partial class InventoryItemKindOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemKindOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InventoryItemKind.ObjectType, Allors.Meta.M.InventoryItemKind.OnBuild); 

		public InventoryItemKindOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemKindOnBuildMethodInvocation;
			}
		}
	}public partial class InvoiceSequenceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceSequenceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceSequence.ObjectType, Allors.Meta.M.InvoiceSequence.OnBuild); 

		public InvoiceSequenceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceSequenceOnBuildMethodInvocation;
			}
		}
	}public partial class JournalTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalType.ObjectType, Allors.Meta.M.JournalType.OnBuild); 

		public JournalTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalTypeOnBuildMethodInvocation;
			}
		}
	}public partial class MaritalStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MaritalStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MaritalStatus.ObjectType, Allors.Meta.M.MaritalStatus.OnBuild); 

		public MaritalStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaritalStatusOnBuildMethodInvocation;
			}
		}
	}public partial class ModelOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ModelOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Model.ObjectType, Allors.Meta.M.Model.OnBuild); 

		public ModelOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ModelOnBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationType.ObjectType, Allors.Meta.M.PartSpecificationType.OnBuild); 

		public PartSpecificationTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationTypeOnBuildMethodInvocation;
			}
		}
	}public partial class OwnershipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OwnershipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Ownership.ObjectType, Allors.Meta.M.Ownership.OnBuild); 

		public OwnershipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnershipOnBuildMethodInvocation;
			}
		}
	}public partial class ProcessFlowOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProcessFlowOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProcessFlow.ObjectType, Allors.Meta.M.ProcessFlow.OnBuild); 

		public ProcessFlowOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProcessFlowOnBuildMethodInvocation;
			}
		}
	}public partial class OrdinalOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrdinalOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Ordinal.ObjectType, Allors.Meta.M.Ordinal.OnBuild); 

		public OrdinalOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrdinalOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationRoleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationRoleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationRole.ObjectType, Allors.Meta.M.OrganisationRole.OnBuild); 

		public OrganisationRoleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationRoleOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationUnitOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationUnitOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationUnit.ObjectType, Allors.Meta.M.OrganisationUnit.OnBuild); 

		public OrganisationUnitOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationUnitOnBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReviewItemType.ObjectType, Allors.Meta.M.PerformanceReviewItemType.OnBuild); 

		public PerformanceReviewItemTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemTypeOnBuildMethodInvocation;
			}
		}
	}public partial class PersonalTitleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonalTitleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonalTitle.ObjectType, Allors.Meta.M.PersonalTitle.OnBuild); 

		public PersonalTitleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonalTitleOnBuildMethodInvocation;
			}
		}
	}public partial class PersonRoleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonRoleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonRole.ObjectType, Allors.Meta.M.PersonRole.OnBuild); 

		public PersonRoleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonRoleOnBuildMethodInvocation;
			}
		}
	}public partial class PositionStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionStatus.ObjectType, Allors.Meta.M.PositionStatus.OnBuild); 

		public PositionStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionStatusOnBuildMethodInvocation;
			}
		}
	}public partial class PriorityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PriorityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Priority.ObjectType, Allors.Meta.M.Priority.OnBuild); 

		public PriorityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PriorityOnBuildMethodInvocation;
			}
		}
	}public partial class ProductCharacteristicOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductCharacteristicOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductCharacteristic.ObjectType, Allors.Meta.M.ProductCharacteristic.OnBuild); 

		public ProductCharacteristicOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductCharacteristicOnBuildMethodInvocation;
			}
		}
	}public partial class ProductQualityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQualityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuality.ObjectType, Allors.Meta.M.ProductQuality.OnBuild); 

		public ProductQualityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQualityOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemType.ObjectType, Allors.Meta.M.PurchaseInvoiceItemType.OnBuild); 

		public PurchaseInvoiceItemTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemTypeOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceType.ObjectType, Allors.Meta.M.PurchaseInvoiceType.OnBuild); 

		public PurchaseInvoiceTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceTypeOnBuildMethodInvocation;
			}
		}
	}public partial class QualificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QualificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Qualification.ObjectType, Allors.Meta.M.Qualification.OnBuild); 

		public QualificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QualificationOnBuildMethodInvocation;
			}
		}
	}public partial class RateTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RateTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RateType.ObjectType, Allors.Meta.M.RateType.OnBuild); 

		public RateTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RateTypeOnBuildMethodInvocation;
			}
		}
	}public partial class RatingTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RatingTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RatingType.ObjectType, Allors.Meta.M.RatingType.OnBuild); 

		public RatingTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RatingTypeOnBuildMethodInvocation;
			}
		}
	}public partial class SalesChannelOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesChannelOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesChannel.ObjectType, Allors.Meta.M.SalesChannel.OnBuild); 

		public SalesChannelOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesChannelOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemType.ObjectType, Allors.Meta.M.SalesInvoiceItemType.OnBuild); 

		public SalesInvoiceItemTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemTypeOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceType.ObjectType, Allors.Meta.M.SalesInvoiceType.OnBuild); 

		public SalesInvoiceTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceTypeOnBuildMethodInvocation;
			}
		}
	}public partial class SalutationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalutationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Salutation.ObjectType, Allors.Meta.M.Salutation.OnBuild); 

		public SalutationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalutationOnBuildMethodInvocation;
			}
		}
	}public partial class ServiceFeatureOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceFeatureOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceFeature.ObjectType, Allors.Meta.M.ServiceFeature.OnBuild); 

		public ServiceFeatureOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceFeatureOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentMethodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentMethodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentMethod.ObjectType, Allors.Meta.M.ShipmentMethod.OnBuild); 

		public ShipmentMethodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentMethodOnBuildMethodInvocation;
			}
		}
	}public partial class SizeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SizeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Size.ObjectType, Allors.Meta.M.Size.OnBuild); 

		public SizeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SizeOnBuildMethodInvocation;
			}
		}
	}public partial class SkillOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Skill.ObjectType, Allors.Meta.M.Skill.OnBuild); 

		public SkillOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillOnBuildMethodInvocation;
			}
		}
	}public partial class SkillLevelOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillLevelOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SkillLevel.ObjectType, Allors.Meta.M.SkillLevel.OnBuild); 

		public SkillLevelOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillLevelOnBuildMethodInvocation;
			}
		}
	}public partial class SkillRatingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SkillRatingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SkillRating.ObjectType, Allors.Meta.M.SkillRating.OnBuild); 

		public SkillRatingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SkillRatingOnBuildMethodInvocation;
			}
		}
	}public partial class SoftwareFeatureOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SoftwareFeatureOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SoftwareFeature.ObjectType, Allors.Meta.M.SoftwareFeature.OnBuild); 

		public SoftwareFeatureOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SoftwareFeatureOnBuildMethodInvocation;
			}
		}
	}public partial class RequirementTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementType.ObjectType, Allors.Meta.M.RequirementType.OnBuild); 

		public RequirementTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementTypeOnBuildMethodInvocation;
			}
		}
	}public partial class TimeFrequencyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeFrequencyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeFrequency.ObjectType, Allors.Meta.M.TimeFrequency.OnBuild); 

		public TimeFrequencyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeFrequencyOnBuildMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitOfMeasure.ObjectType, Allors.Meta.M.UnitOfMeasure.OnBuild); 

		public UnitOfMeasureOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureOnBuildMethodInvocation;
			}
		}
	}public partial class VarianceReasonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VarianceReasonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VarianceReason.ObjectType, Allors.Meta.M.VarianceReason.OnBuild); 

		public VarianceReasonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VarianceReasonOnBuildMethodInvocation;
			}
		}
	}public partial class VatCalculationMethodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatCalculationMethodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatCalculationMethod.ObjectType, Allors.Meta.M.VatCalculationMethod.OnBuild); 

		public VatCalculationMethodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatCalculationMethodOnBuildMethodInvocation;
			}
		}
	}public partial class VatRatePurchaseKindOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRatePurchaseKindOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRatePurchaseKind.ObjectType, Allors.Meta.M.VatRatePurchaseKind.OnBuild); 

		public VatRatePurchaseKindOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRatePurchaseKindOnBuildMethodInvocation;
			}
		}
	}public partial class VatRateUsageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateUsageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRateUsage.ObjectType, Allors.Meta.M.VatRateUsage.OnBuild); 

		public VatRateUsageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateUsageOnBuildMethodInvocation;
			}
		}
	}public partial class VatRegimeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRegimeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRegime.ObjectType, Allors.Meta.M.VatRegime.OnBuild); 

		public VatRegimeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRegimeOnBuildMethodInvocation;
			}
		}
	}public partial class VatTariffOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatTariffOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatTariff.ObjectType, Allors.Meta.M.VatTariff.OnBuild); 

		public VatTariffOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatTariffOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPurposeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPurposeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPurpose.ObjectType, Allors.Meta.M.WorkEffortPurpose.OnBuild); 

		public WorkEffortPurposeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPurposeOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeKindOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeKindOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortTypeKind.ObjectType, Allors.Meta.M.WorkEffortTypeKind.OnBuild); 

		public WorkEffortTypeKindOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeKindOnBuildMethodInvocation;
			}
		}
	}public partial class IncoTermTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IncoTermTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IncoTermType.ObjectType, Allors.Meta.M.IncoTermType.OnBuild); 

		public IncoTermTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncoTermTypeOnBuildMethodInvocation;
			}
		}
	}public partial class InvoiceTermTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceTermType.ObjectType, Allors.Meta.M.InvoiceTermType.OnBuild); 

		public InvoiceTermTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermTypeOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetState.ObjectType, Allors.Meta.M.BudgetState.OnBuild); 

		public BudgetStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetStateOnBuildMethodInvocation;
			}
		}
	}public partial class CaseStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CaseState.ObjectType, Allors.Meta.M.CaseState.OnBuild); 

		public CaseStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseStateOnBuildMethodInvocation;
			}
		}
	}public partial class CommunicationEventStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CommunicationEventStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CommunicationEventState.ObjectType, Allors.Meta.M.CommunicationEventState.OnBuild); 

		public CommunicationEventStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CommunicationEventStateOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturnState.ObjectType, Allors.Meta.M.CustomerReturnState.OnBuild); 

		public CustomerReturnStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnStateOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipmentState.ObjectType, Allors.Meta.M.CustomerShipmentState.OnBuild); 

		public CustomerShipmentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentStateOnBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipmentState.ObjectType, Allors.Meta.M.DropShipmentState.OnBuild); 

		public DropShipmentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentStateOnBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChangeObjectState.ObjectType, Allors.Meta.M.EngineeringChangeObjectState.OnBuild); 

		public EngineeringChangeObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class NonSerialisedInventoryItemStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerialisedInventoryItemStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerialisedInventoryItemState.ObjectType, Allors.Meta.M.NonSerialisedInventoryItemState.OnBuild); 

		public NonSerialisedInventoryItemStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerialisedInventoryItemStateOnBuildMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerializedInventoryItemObjectState.ObjectType, Allors.Meta.M.NonSerializedInventoryItemObjectState.OnBuild); 

		public NonSerializedInventoryItemObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderPaymentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderPaymentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderPaymentState.ObjectType, Allors.Meta.M.PurchaseOrderPaymentState.OnBuild); 

		public PurchaseOrderPaymentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderPaymentStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderShipmentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderShipmentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderShipmentState.ObjectType, Allors.Meta.M.PurchaseOrderShipmentState.OnBuild); 

		public PurchaseOrderShipmentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderShipmentStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemShipmentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemShipmentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemShipmentState.ObjectType, Allors.Meta.M.SalesOrderItemShipmentState.OnBuild); 

		public SalesOrderItemShipmentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemShipmentStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemPaymentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemPaymentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemPaymentState.ObjectType, Allors.Meta.M.SalesOrderItemPaymentState.OnBuild); 

		public SalesOrderItemPaymentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemPaymentStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderPaymentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderPaymentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderPaymentState.ObjectType, Allors.Meta.M.SalesOrderPaymentState.OnBuild); 

		public SalesOrderPaymentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderPaymentStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderShipmentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderShipmentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderShipmentState.ObjectType, Allors.Meta.M.SalesOrderShipmentState.OnBuild); 

		public SalesOrderShipmentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderShipmentStateOnBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationState.ObjectType, Allors.Meta.M.PartSpecificationState.OnBuild); 

		public PartSpecificationStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationStateOnBuildMethodInvocation;
			}
		}
	}public partial class PickListStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListState.ObjectType, Allors.Meta.M.PickListState.OnBuild); 

		public PickListStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemState.ObjectType, Allors.Meta.M.PurchaseInvoiceItemState.OnBuild); 

		public PurchaseInvoiceItemStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceState.ObjectType, Allors.Meta.M.PurchaseInvoiceState.OnBuild); 

		public PurchaseInvoiceStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItemState.ObjectType, Allors.Meta.M.PurchaseOrderItemState.OnBuild); 

		public PurchaseOrderItemStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderState.ObjectType, Allors.Meta.M.PurchaseOrderState.OnBuild); 

		public PurchaseOrderStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturnState.ObjectType, Allors.Meta.M.PurchaseReturnState.OnBuild); 

		public PurchaseReturnStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnStateOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipmentState.ObjectType, Allors.Meta.M.PurchaseShipmentState.OnBuild); 

		public PurchaseShipmentStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentStateOnBuildMethodInvocation;
			}
		}
	}public partial class QuoteStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteState.ObjectType, Allors.Meta.M.QuoteState.OnBuild); 

		public QuoteStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteStateOnBuildMethodInvocation;
			}
		}
	}public partial class QuoteItemStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItemState.ObjectType, Allors.Meta.M.QuoteItemState.OnBuild); 

		public QuoteItemStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemStateOnBuildMethodInvocation;
			}
		}
	}public partial class RequirementStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementState.ObjectType, Allors.Meta.M.RequirementState.OnBuild); 

		public RequirementStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemState.ObjectType, Allors.Meta.M.SalesInvoiceItemState.OnBuild); 

		public SalesInvoiceItemStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceState.ObjectType, Allors.Meta.M.SalesInvoiceState.OnBuild); 

		public SalesInvoiceStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceStateOnBuildMethodInvocation;
			}
		}
	}public partial class RequestItemStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItemState.ObjectType, Allors.Meta.M.RequestItemState.OnBuild); 

		public RequestItemStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemState.ObjectType, Allors.Meta.M.SalesOrderItemState.OnBuild); 

		public SalesOrderItemStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemStateOnBuildMethodInvocation;
			}
		}
	}public partial class RequestStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestState.ObjectType, Allors.Meta.M.RequestState.OnBuild); 

		public RequestStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestStateOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderState.ObjectType, Allors.Meta.M.SalesOrderState.OnBuild); 

		public SalesOrderStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderStateOnBuildMethodInvocation;
			}
		}
	}public partial class SerialisedInventoryItemStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerialisedInventoryItemStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerialisedInventoryItemState.ObjectType, Allors.Meta.M.SerialisedInventoryItemState.OnBuild); 

		public SerialisedInventoryItemStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerialisedInventoryItemStateOnBuildMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemObjectStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemObjectStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerializedInventoryItemObjectState.ObjectType, Allors.Meta.M.SerializedInventoryItemObjectState.OnBuild); 

		public SerializedInventoryItemObjectStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemObjectStateOnBuildMethodInvocation;
			}
		}
	}public partial class TransferStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TransferState.ObjectType, Allors.Meta.M.TransferState.OnBuild); 

		public TransferStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferStateOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortStateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortStateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortState.ObjectType, Allors.Meta.M.WorkEffortState.OnBuild); 

		public WorkEffortStateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortStateOnBuildMethodInvocation;
			}
		}
	}public partial class ClientAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ClientAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ClientAgreement.ObjectType, Allors.Meta.M.ClientAgreement.OnBuild); 

		public ClientAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ClientAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentAgreement.ObjectType, Allors.Meta.M.EmploymentAgreement.OnBuild); 

		public EmploymentAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseAgreement.ObjectType, Allors.Meta.M.PurchaseAgreement.OnBuild); 

		public PurchaseAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class SalesAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesAgreement.ObjectType, Allors.Meta.M.SalesAgreement.OnBuild); 

		public SalesAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class SubContractorAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubContractorAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubContractorAgreement.ObjectType, Allors.Meta.M.SubContractorAgreement.OnBuild); 

		public SubContractorAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubContractorAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class AccountingPeriodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriod.ObjectType, Allors.Meta.M.AccountingPeriod.OnBuild); 

		public AccountingPeriodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodOnBuildMethodInvocation;
			}
		}
	}public partial class CapitalBudgetOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudget.ObjectType, Allors.Meta.M.CapitalBudget.OnBuild); 

		public CapitalBudgetOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetOnBuildMethodInvocation;
			}
		}
	}public partial class OperatingBudgetOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudget.ObjectType, Allors.Meta.M.OperatingBudget.OnBuild); 

		public OperatingBudgetOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetOnBuildMethodInvocation;
			}
		}
	}public partial class FacilityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FacilityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Facility.ObjectType, Allors.Meta.M.Facility.OnBuild); 

		public FacilityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FacilityOnBuildMethodInvocation;
			}
		}
	}public partial class CountryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnBuild); 

		public CountryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnBuildMethodInvocation;
			}
		}
	}public partial class CityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.City.ObjectType, Allors.Meta.M.City.OnBuild); 

		public CityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CityOnBuildMethodInvocation;
			}
		}
	}public partial class CountyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.County.ObjectType, Allors.Meta.M.County.OnBuild); 

		public CountyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountyOnBuildMethodInvocation;
			}
		}
	}public partial class PostalCodeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PostalCodeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PostalCode.ObjectType, Allors.Meta.M.PostalCode.OnBuild); 

		public PostalCodeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PostalCodeOnBuildMethodInvocation;
			}
		}
	}public partial class ProvinceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProvinceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Province.ObjectType, Allors.Meta.M.Province.OnBuild); 

		public ProvinceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProvinceOnBuildMethodInvocation;
			}
		}
	}public partial class StateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.State.ObjectType, Allors.Meta.M.State.OnBuild); 

		public StateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StateOnBuildMethodInvocation;
			}
		}
	}public partial class TerritoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TerritoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Territory.ObjectType, Allors.Meta.M.Territory.OnBuild); 

		public TerritoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TerritoryOnBuildMethodInvocation;
			}
		}
	}public partial class RegionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RegionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Region.ObjectType, Allors.Meta.M.Region.OnBuild); 

		public RegionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RegionOnBuildMethodInvocation;
			}
		}
	}public partial class SalesTerritoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesTerritoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesTerritory.ObjectType, Allors.Meta.M.SalesTerritory.OnBuild); 

		public SalesTerritoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesTerritoryOnBuildMethodInvocation;
			}
		}
	}public partial class ServiceTerritoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceTerritoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceTerritory.ObjectType, Allors.Meta.M.ServiceTerritory.OnBuild); 

		public ServiceTerritoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceTerritoryOnBuildMethodInvocation;
			}
		}
	}public partial class CurrencyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnBuild); 

		public CurrencyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnBuildMethodInvocation;
			}
		}
	}public partial class FinishedGoodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinishedGoodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinishedGood.ObjectType, Allors.Meta.M.FinishedGood.OnBuild); 

		public FinishedGoodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinishedGoodOnBuildMethodInvocation;
			}
		}
	}public partial class RawMaterialOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RawMaterialOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RawMaterial.ObjectType, Allors.Meta.M.RawMaterial.OnBuild); 

		public RawMaterialOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RawMaterialOnBuildMethodInvocation;
			}
		}
	}public partial class SubAssemblyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubAssemblyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubAssembly.ObjectType, Allors.Meta.M.SubAssembly.OnBuild); 

		public SubAssemblyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAssemblyOnBuildMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnBuild); 

		public AutomatedAgentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnBuildMethodInvocation;
			}
		}
	}public partial class DisbursementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Disbursement.ObjectType, Allors.Meta.M.Disbursement.OnBuild); 

		public DisbursementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementOnBuildMethodInvocation;
			}
		}
	}public partial class PayCheckOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayCheckOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayCheck.ObjectType, Allors.Meta.M.PayCheck.OnBuild); 

		public PayCheckOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayCheckOnBuildMethodInvocation;
			}
		}
	}public partial class ReceiptOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Receipt.ObjectType, Allors.Meta.M.Receipt.OnBuild); 

		public ReceiptOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptOnBuildMethodInvocation;
			}
		}
	}public partial class CashOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CashOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Cash.ObjectType, Allors.Meta.M.Cash.OnBuild); 

		public CashOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CashOnBuildMethodInvocation;
			}
		}
	}public partial class OwnBankAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OwnBankAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OwnBankAccount.ObjectType, Allors.Meta.M.OwnBankAccount.OnBuild); 

		public OwnBankAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnBankAccountOnBuildMethodInvocation;
			}
		}
	}public partial class OwnCreditCardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OwnCreditCardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OwnCreditCard.ObjectType, Allors.Meta.M.OwnCreditCard.OnBuild); 

		public OwnCreditCardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OwnCreditCardOnBuildMethodInvocation;
			}
		}
	}public partial class BrandOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BrandOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Brand.ObjectType, Allors.Meta.M.Brand.OnBuild); 

		public BrandOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BrandOnBuildMethodInvocation;
			}
		}
	}public partial class DimensionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DimensionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Dimension.ObjectType, Allors.Meta.M.Dimension.OnBuild); 

		public DimensionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DimensionOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturn.ObjectType, Allors.Meta.M.CustomerReturn.OnBuild); 

		public CustomerReturnOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipment.ObjectType, Allors.Meta.M.CustomerShipment.OnBuild); 

		public CustomerShipmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentOnBuildMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountAdjustment.ObjectType, Allors.Meta.M.DiscountAdjustment.OnBuild); 

		public DiscountAdjustmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentOnBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipment.ObjectType, Allors.Meta.M.DropShipment.OnBuild); 

		public DropShipmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentOnBuildMethodInvocation;
			}
		}
	}public partial class PickListOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickList.ObjectType, Allors.Meta.M.PickList.OnBuild); 

		public PickListOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListOnBuildMethodInvocation;
			}
		}
	}public partial class ProductQuoteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuote.ObjectType, Allors.Meta.M.ProductQuote.OnBuild); 

		public ProductQuoteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteOnBuildMethodInvocation;
			}
		}
	}public partial class ProposalOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Proposal.ObjectType, Allors.Meta.M.Proposal.OnBuild); 

		public ProposalOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoice.ObjectType, Allors.Meta.M.PurchaseInvoice.OnBuild); 

		public PurchaseInvoiceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrder.ObjectType, Allors.Meta.M.PurchaseOrder.OnBuild); 

		public PurchaseOrderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturn.ObjectType, Allors.Meta.M.PurchaseReturn.OnBuild); 

		public PurchaseReturnOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipment.ObjectType, Allors.Meta.M.PurchaseShipment.OnBuild); 

		public PurchaseShipmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentOnBuildMethodInvocation;
			}
		}
	}public partial class RequestForInformationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForInformation.ObjectType, Allors.Meta.M.RequestForInformation.OnBuild); 

		public RequestForInformationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationOnBuildMethodInvocation;
			}
		}
	}public partial class RequestForProposalOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForProposal.ObjectType, Allors.Meta.M.RequestForProposal.OnBuild); 

		public RequestForProposalOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalOnBuildMethodInvocation;
			}
		}
	}public partial class RequestForQuoteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForQuote.ObjectType, Allors.Meta.M.RequestForQuote.OnBuild); 

		public RequestForQuoteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoice.ObjectType, Allors.Meta.M.SalesInvoice.OnBuild); 

		public SalesInvoiceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrder.ObjectType, Allors.Meta.M.SalesOrder.OnBuild); 

		public SalesOrderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderOnBuildMethodInvocation;
			}
		}
	}public partial class StatementOfWorkOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWork.ObjectType, Allors.Meta.M.StatementOfWork.OnBuild); 

		public StatementOfWorkOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkOnBuildMethodInvocation;
			}
		}
	}public partial class TransferOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Transfer.ObjectType, Allors.Meta.M.Transfer.OnBuild); 

		public TransferOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferOnBuildMethodInvocation;
			}
		}
	}public partial class LanguageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnBuild); 

		public LanguageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnBuildMethodInvocation;
			}
		}
	}public partial class LocaleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnBuild); 

		public LocaleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnBuildMethodInvocation;
			}
		}
	}public partial class NotificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnBuild); 

		public NotificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnBuildMethodInvocation;
			}
		}
	}public partial class AccountingTransactionDetailOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionDetailOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionDetail.ObjectType, Allors.Meta.M.AccountingTransactionDetail.OnBuild); 

		public AccountingTransactionDetailOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionDetailOnBuildMethodInvocation;
			}
		}
	}public partial class AccountingTransactionNumberOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingTransactionNumberOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingTransactionNumber.ObjectType, Allors.Meta.M.AccountingTransactionNumber.OnBuild); 

		public AccountingTransactionNumberOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingTransactionNumberOnBuildMethodInvocation;
			}
		}
	}public partial class AddendumOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AddendumOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Addendum.ObjectType, Allors.Meta.M.Addendum.OnBuild); 

		public AddendumOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AddendumOnBuildMethodInvocation;
			}
		}
	}public partial class AmountDueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AmountDueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AmountDue.ObjectType, Allors.Meta.M.AmountDue.OnBuild); 

		public AmountDueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmountDueOnBuildMethodInvocation;
			}
		}
	}public partial class BankOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BankOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Bank.ObjectType, Allors.Meta.M.Bank.OnBuild); 

		public BankOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankOnBuildMethodInvocation;
			}
		}
	}public partial class BenefitOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BenefitOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Benefit.ObjectType, Allors.Meta.M.Benefit.OnBuild); 

		public BenefitOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BenefitOnBuildMethodInvocation;
			}
		}
	}public partial class BillingAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BillingAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BillingAccount.ObjectType, Allors.Meta.M.BillingAccount.OnBuild); 

		public BillingAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillingAccountOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetItem.ObjectType, Allors.Meta.M.BudgetItem.OnBuild); 

		public BudgetItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetItemOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetReviewOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetReviewOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetReview.ObjectType, Allors.Meta.M.BudgetReview.OnBuild); 

		public BudgetReviewOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetReviewOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetRevisionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetRevision.ObjectType, Allors.Meta.M.BudgetRevision.OnBuild); 

		public BudgetRevisionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionOnBuildMethodInvocation;
			}
		}
	}public partial class BudgetRevisionImpactOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BudgetRevisionImpactOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BudgetRevisionImpact.ObjectType, Allors.Meta.M.BudgetRevisionImpact.OnBuild); 

		public BudgetRevisionImpactOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BudgetRevisionImpactOnBuildMethodInvocation;
			}
		}
	}public partial class CitizenshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CitizenshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Citizenship.ObjectType, Allors.Meta.M.Citizenship.OnBuild); 

		public CitizenshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CitizenshipOnBuildMethodInvocation;
			}
		}
	}public partial class CreditCardCompanyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardCompanyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditCardCompany.ObjectType, Allors.Meta.M.CreditCardCompany.OnBuild); 

		public CreditCardCompanyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardCompanyOnBuildMethodInvocation;
			}
		}
	}public partial class DeductionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeductionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deduction.ObjectType, Allors.Meta.M.Deduction.OnBuild); 

		public DeductionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeductionOnBuildMethodInvocation;
			}
		}
	}public partial class DeliverableOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deliverable.ObjectType, Allors.Meta.M.Deliverable.OnBuild); 

		public DeliverableOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOnBuildMethodInvocation;
			}
		}
	}public partial class DeploymentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeploymentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deployment.ObjectType, Allors.Meta.M.Deployment.OnBuild); 

		public DeploymentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeploymentOnBuildMethodInvocation;
			}
		}
	}public partial class DepreciationMethodOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationMethodOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DepreciationMethod.ObjectType, Allors.Meta.M.DepreciationMethod.OnBuild); 

		public DepreciationMethodOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationMethodOnBuildMethodInvocation;
			}
		}
	}public partial class DesiredProductFeatureOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DesiredProductFeatureOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DesiredProductFeature.ObjectType, Allors.Meta.M.DesiredProductFeature.OnBuild); 

		public DesiredProductFeatureOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DesiredProductFeatureOnBuildMethodInvocation;
			}
		}
	}public partial class EmailTemplateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailTemplateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailTemplate.ObjectType, Allors.Meta.M.EmailTemplate.OnBuild); 

		public EmailTemplateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailTemplateOnBuildMethodInvocation;
			}
		}
	}public partial class EmploymentApplicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmploymentApplicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmploymentApplication.ObjectType, Allors.Meta.M.EmploymentApplication.OnBuild); 

		public EmploymentApplicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmploymentApplicationOnBuildMethodInvocation;
			}
		}
	}public partial class EngagementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Engagement.ObjectType, Allors.Meta.M.Engagement.OnBuild); 

		public EngagementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementOnBuildMethodInvocation;
			}
		}
	}public partial class EngagementRateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngagementRateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngagementRate.ObjectType, Allors.Meta.M.EngagementRate.OnBuild); 

		public EngagementRateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngagementRateOnBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChangeStatus.ObjectType, Allors.Meta.M.EngineeringChangeStatus.OnBuild); 

		public EngineeringChangeStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeStatusOnBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountGroupOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountGroupOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccountGroup.ObjectType, Allors.Meta.M.GeneralLedgerAccountGroup.OnBuild); 

		public GeneralLedgerAccountGroupOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountGroupOnBuildMethodInvocation;
			}
		}
	}public partial class GeneralLedgerAccountTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GeneralLedgerAccountTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GeneralLedgerAccountType.ObjectType, Allors.Meta.M.GeneralLedgerAccountType.OnBuild); 

		public GeneralLedgerAccountTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GeneralLedgerAccountTypeOnBuildMethodInvocation;
			}
		}
	}public partial class GlBudgetAllocationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GlBudgetAllocationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GlBudgetAllocation.ObjectType, Allors.Meta.M.GlBudgetAllocation.OnBuild); 

		public GlBudgetAllocationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GlBudgetAllocationOnBuildMethodInvocation;
			}
		}
	}public partial class InventoryItemVarianceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InventoryItemVarianceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InventoryItemVariance.ObjectType, Allors.Meta.M.InventoryItemVariance.OnBuild); 

		public InventoryItemVarianceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InventoryItemVarianceOnBuildMethodInvocation;
			}
		}
	}public partial class InvoiceVatRateItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceVatRateItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceVatRateItem.ObjectType, Allors.Meta.M.InvoiceVatRateItem.OnBuild); 

		public InvoiceVatRateItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceVatRateItemOnBuildMethodInvocation;
			}
		}
	}public partial class JournalOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Journal.ObjectType, Allors.Meta.M.Journal.OnBuild); 

		public JournalOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalOnBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntry.ObjectType, Allors.Meta.M.JournalEntry.OnBuild); 

		public JournalEntryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryOnBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryDetailOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryDetailOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntryDetail.ObjectType, Allors.Meta.M.JournalEntryDetail.OnBuild); 

		public JournalEntryDetailOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryDetailOnBuildMethodInvocation;
			}
		}
	}public partial class JournalEntryNumberOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation JournalEntryNumberOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.JournalEntryNumber.ObjectType, Allors.Meta.M.JournalEntryNumber.OnBuild); 

		public JournalEntryNumberOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return JournalEntryNumberOnBuildMethodInvocation;
			}
		}
	}public partial class LegalFormOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LegalFormOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LegalForm.ObjectType, Allors.Meta.M.LegalForm.OnBuild); 

		public LegalFormOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalFormOnBuildMethodInvocation;
			}
		}
	}public partial class LotOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LotOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Lot.ObjectType, Allors.Meta.M.Lot.OnBuild); 

		public LotOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LotOnBuildMethodInvocation;
			}
		}
	}public partial class NeededSkillOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NeededSkillOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NeededSkill.ObjectType, Allors.Meta.M.NeededSkill.OnBuild); 

		public NeededSkillOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NeededSkillOnBuildMethodInvocation;
			}
		}
	}public partial class NewsItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NewsItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NewsItem.ObjectType, Allors.Meta.M.NewsItem.OnBuild); 

		public NewsItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NewsItemOnBuildMethodInvocation;
			}
		}
	}public partial class NonSerializedInventoryItemStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NonSerializedInventoryItemStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NonSerializedInventoryItemStatus.ObjectType, Allors.Meta.M.NonSerializedInventoryItemStatus.OnBuild); 

		public NonSerializedInventoryItemStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NonSerializedInventoryItemStatusOnBuildMethodInvocation;
			}
		}
	}public partial class OrderQuantityBreakOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderQuantityBreakOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderQuantityBreak.ObjectType, Allors.Meta.M.OrderQuantityBreak.OnBuild); 

		public OrderQuantityBreakOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderQuantityBreakOnBuildMethodInvocation;
			}
		}
	}public partial class OrderRequirementCommitmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderRequirementCommitmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderRequirementCommitment.ObjectType, Allors.Meta.M.OrderRequirementCommitment.OnBuild); 

		public OrderRequirementCommitmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderRequirementCommitmentOnBuildMethodInvocation;
			}
		}
	}public partial class OrderTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderTerm.ObjectType, Allors.Meta.M.OrderTerm.OnBuild); 

		public OrderTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderTermOnBuildMethodInvocation;
			}
		}
	}public partial class OrderValueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrderValueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrderValue.ObjectType, Allors.Meta.M.OrderValue.OnBuild); 

		public OrderValueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrderValueOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationGlAccount.ObjectType, Allors.Meta.M.OrganisationGlAccount.OnBuild); 

		public OrganisationGlAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationGlAccountBalanceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationGlAccountBalanceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationGlAccountBalance.ObjectType, Allors.Meta.M.OrganisationGlAccountBalance.OnBuild); 

		public OrganisationGlAccountBalanceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationGlAccountBalanceOnBuildMethodInvocation;
			}
		}
	}public partial class PackageQuantityBreakOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackageQuantityBreakOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackageQuantityBreak.ObjectType, Allors.Meta.M.PackageQuantityBreak.OnBuild); 

		public PackageQuantityBreakOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackageQuantityBreakOnBuildMethodInvocation;
			}
		}
	}public partial class PackagingContentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingContentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackagingContent.ObjectType, Allors.Meta.M.PackagingContent.OnBuild); 

		public PackagingContentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingContentOnBuildMethodInvocation;
			}
		}
	}public partial class PartBillOfMaterialSubstituteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartBillOfMaterialSubstituteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartBillOfMaterialSubstitute.ObjectType, Allors.Meta.M.PartBillOfMaterialSubstitute.OnBuild); 

		public PartBillOfMaterialSubstituteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartBillOfMaterialSubstituteOnBuildMethodInvocation;
			}
		}
	}public partial class PartRevisionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartRevisionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartRevision.ObjectType, Allors.Meta.M.PartRevision.OnBuild); 

		public PartRevisionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartRevisionOnBuildMethodInvocation;
			}
		}
	}public partial class PartSubstituteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSubstituteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSubstitute.ObjectType, Allors.Meta.M.PartSubstitute.OnBuild); 

		public PartSubstituteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSubstituteOnBuildMethodInvocation;
			}
		}
	}public partial class PartyBenefitOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyBenefitOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyBenefit.ObjectType, Allors.Meta.M.PartyBenefit.OnBuild); 

		public PartyBenefitOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyBenefitOnBuildMethodInvocation;
			}
		}
	}public partial class PartyFixedAssetAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartyFixedAssetAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartyFixedAssetAssignment.ObjectType, Allors.Meta.M.PartyFixedAssetAssignment.OnBuild); 

		public PartyFixedAssetAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartyFixedAssetAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class PartySkillOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartySkillOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartySkill.ObjectType, Allors.Meta.M.PartySkill.OnBuild); 

		public PartySkillOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartySkillOnBuildMethodInvocation;
			}
		}
	}public partial class PassportOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PassportOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Passport.ObjectType, Allors.Meta.M.Passport.OnBuild); 

		public PassportOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PassportOnBuildMethodInvocation;
			}
		}
	}public partial class PayGradeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayGradeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayGrade.ObjectType, Allors.Meta.M.PayGrade.OnBuild); 

		public PayGradeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayGradeOnBuildMethodInvocation;
			}
		}
	}public partial class PayHistoryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayHistoryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayHistory.ObjectType, Allors.Meta.M.PayHistory.OnBuild); 

		public PayHistoryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayHistoryOnBuildMethodInvocation;
			}
		}
	}public partial class PaymentApplicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentApplicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentApplication.ObjectType, Allors.Meta.M.PaymentApplication.OnBuild); 

		public PaymentApplicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentApplicationOnBuildMethodInvocation;
			}
		}
	}public partial class PaymentBudgetAllocationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PaymentBudgetAllocationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PaymentBudgetAllocation.ObjectType, Allors.Meta.M.PaymentBudgetAllocation.OnBuild); 

		public PaymentBudgetAllocationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PaymentBudgetAllocationOnBuildMethodInvocation;
			}
		}
	}public partial class PayrollPreferenceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PayrollPreferenceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PayrollPreference.ObjectType, Allors.Meta.M.PayrollPreference.OnBuild); 

		public PayrollPreferenceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PayrollPreferenceOnBuildMethodInvocation;
			}
		}
	}public partial class PerformanceNoteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceNoteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceNote.ObjectType, Allors.Meta.M.PerformanceNote.OnBuild); 

		public PerformanceNoteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceNoteOnBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReview.ObjectType, Allors.Meta.M.PerformanceReview.OnBuild); 

		public PerformanceReviewOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewOnBuildMethodInvocation;
			}
		}
	}public partial class PerformanceReviewItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PerformanceReviewItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PerformanceReviewItem.ObjectType, Allors.Meta.M.PerformanceReviewItem.OnBuild); 

		public PerformanceReviewItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PerformanceReviewItemOnBuildMethodInvocation;
			}
		}
	}public partial class PersonTrainingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonTrainingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonTraining.ObjectType, Allors.Meta.M.PersonTraining.OnBuild); 

		public PersonTrainingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonTrainingOnBuildMethodInvocation;
			}
		}
	}public partial class PositionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Position.ObjectType, Allors.Meta.M.Position.OnBuild); 

		public PositionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionOnBuildMethodInvocation;
			}
		}
	}public partial class PositionFulfillmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionFulfillmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionFulfillment.ObjectType, Allors.Meta.M.PositionFulfillment.OnBuild); 

		public PositionFulfillmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionFulfillmentOnBuildMethodInvocation;
			}
		}
	}public partial class PositionReportingStructureOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionReportingStructureOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionReportingStructure.ObjectType, Allors.Meta.M.PositionReportingStructure.OnBuild); 

		public PositionReportingStructureOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionReportingStructureOnBuildMethodInvocation;
			}
		}
	}public partial class PositionResponsibilityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionResponsibilityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionResponsibility.ObjectType, Allors.Meta.M.PositionResponsibility.OnBuild); 

		public PositionResponsibilityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionResponsibilityOnBuildMethodInvocation;
			}
		}
	}public partial class PositionTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionType.ObjectType, Allors.Meta.M.PositionType.OnBuild); 

		public PositionTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeOnBuildMethodInvocation;
			}
		}
	}public partial class PositionTypeRateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PositionTypeRateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PositionTypeRate.ObjectType, Allors.Meta.M.PositionTypeRate.OnBuild); 

		public PositionTypeRateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PositionTypeRateOnBuildMethodInvocation;
			}
		}
	}public partial class ProductDeliverySkillRequirementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDeliverySkillRequirementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductDeliverySkillRequirement.ObjectType, Allors.Meta.M.ProductDeliverySkillRequirement.OnBuild); 

		public ProductDeliverySkillRequirementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDeliverySkillRequirementOnBuildMethodInvocation;
			}
		}
	}public partial class ProductFeatureApplicabilityRelationshipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductFeatureApplicabilityRelationshipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductFeatureApplicabilityRelationship.ObjectType, Allors.Meta.M.ProductFeatureApplicabilityRelationship.OnBuild); 

		public ProductFeatureApplicabilityRelationshipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductFeatureApplicabilityRelationshipOnBuildMethodInvocation;
			}
		}
	}public partial class ProductPurchasePriceOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductPurchasePriceOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductPurchasePrice.ObjectType, Allors.Meta.M.ProductPurchasePrice.OnBuild); 

		public ProductPurchasePriceOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductPurchasePriceOnBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalAssignment.ObjectType, Allors.Meta.M.ProfessionalAssignment.OnBuild); 

		public ProfessionalAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class QuoteTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteTerm.ObjectType, Allors.Meta.M.QuoteTerm.OnBuild); 

		public QuoteTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteTermOnBuildMethodInvocation;
			}
		}
	}public partial class RequirementBudgetAllocationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementBudgetAllocationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementBudgetAllocation.ObjectType, Allors.Meta.M.RequirementBudgetAllocation.OnBuild); 

		public RequirementBudgetAllocationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementBudgetAllocationOnBuildMethodInvocation;
			}
		}
	}public partial class RequirementCommunicationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementCommunicationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementCommunication.ObjectType, Allors.Meta.M.RequirementCommunication.OnBuild); 

		public RequirementCommunicationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementCommunicationOnBuildMethodInvocation;
			}
		}
	}public partial class RespondingPartyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RespondingPartyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RespondingParty.ObjectType, Allors.Meta.M.RespondingParty.OnBuild); 

		public RespondingPartyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RespondingPartyOnBuildMethodInvocation;
			}
		}
	}public partial class ResponsibilityOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResponsibilityOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Responsibility.ObjectType, Allors.Meta.M.Responsibility.OnBuild); 

		public ResponsibilityOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResponsibilityOnBuildMethodInvocation;
			}
		}
	}public partial class ResumeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ResumeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Resume.ObjectType, Allors.Meta.M.Resume.OnBuild); 

		public ResumeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ResumeOnBuildMethodInvocation;
			}
		}
	}public partial class RevenueQuantityBreakOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueQuantityBreakOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RevenueQuantityBreak.ObjectType, Allors.Meta.M.RevenueQuantityBreak.OnBuild); 

		public RevenueQuantityBreakOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueQuantityBreakOnBuildMethodInvocation;
			}
		}
	}public partial class RevenueValueBreakOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RevenueValueBreakOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RevenueValueBreak.ObjectType, Allors.Meta.M.RevenueValueBreak.OnBuild); 

		public RevenueValueBreakOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RevenueValueBreakOnBuildMethodInvocation;
			}
		}
	}public partial class SalaryStepOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalaryStepOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalaryStep.ObjectType, Allors.Meta.M.SalaryStep.OnBuild); 

		public SalaryStepOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalaryStepOnBuildMethodInvocation;
			}
		}
	}public partial class SalesRepCommissionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesRepCommissionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesRepCommission.ObjectType, Allors.Meta.M.SalesRepCommission.OnBuild); 

		public SalesRepCommissionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesRepCommissionOnBuildMethodInvocation;
			}
		}
	}public partial class SerializedInventoryItemStatusOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SerializedInventoryItemStatusOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SerializedInventoryItemStatus.ObjectType, Allors.Meta.M.SerializedInventoryItemStatus.OnBuild); 

		public SerializedInventoryItemStatusOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SerializedInventoryItemStatusOnBuildMethodInvocation;
			}
		}
	}public partial class ServiceEntryHeaderOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceEntryHeaderOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceEntryHeader.ObjectType, Allors.Meta.M.ServiceEntryHeader.OnBuild); 

		public ServiceEntryHeaderOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceEntryHeaderOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentReceiptOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentReceiptOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentReceipt.ObjectType, Allors.Meta.M.ShipmentReceipt.OnBuild); 

		public ShipmentReceiptOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentReceiptOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentRouteSegmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentRouteSegmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentRouteSegment.ObjectType, Allors.Meta.M.ShipmentRouteSegment.OnBuild); 

		public ShipmentRouteSegmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentRouteSegmentOnBuildMethodInvocation;
			}
		}
	}public partial class ShipmentValueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShipmentValueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShipmentValue.ObjectType, Allors.Meta.M.ShipmentValue.OnBuild); 

		public ShipmentValueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShipmentValueOnBuildMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingComponentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingComponentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShippingAndHandlingComponent.ObjectType, Allors.Meta.M.ShippingAndHandlingComponent.OnBuild); 

		public ShippingAndHandlingComponentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingComponentOnBuildMethodInvocation;
			}
		}
	}public partial class SupplierOfferingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SupplierOfferingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SupplierOffering.ObjectType, Allors.Meta.M.SupplierOffering.OnBuild); 

		public SupplierOfferingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SupplierOfferingOnBuildMethodInvocation;
			}
		}
	}public partial class TrainingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TrainingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Training.ObjectType, Allors.Meta.M.Training.OnBuild); 

		public TrainingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TrainingOnBuildMethodInvocation;
			}
		}
	}public partial class UnitOfMeasureConversionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UnitOfMeasureConversionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UnitOfMeasureConversion.ObjectType, Allors.Meta.M.UnitOfMeasureConversion.OnBuild); 

		public UnitOfMeasureConversionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UnitOfMeasureConversionOnBuildMethodInvocation;
			}
		}
	}public partial class VatFormOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatFormOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatForm.ObjectType, Allors.Meta.M.VatForm.OnBuild); 

		public VatFormOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatFormOnBuildMethodInvocation;
			}
		}
	}public partial class VatRateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatRateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatRate.ObjectType, Allors.Meta.M.VatRate.OnBuild); 

		public VatRateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatRateOnBuildMethodInvocation;
			}
		}
	}public partial class VatReturnBoxOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatReturnBox.ObjectType, Allors.Meta.M.VatReturnBox.OnBuild); 

		public VatReturnBoxOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxOnBuildMethodInvocation;
			}
		}
	}public partial class VatReturnBoxTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VatReturnBoxTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VatReturnBoxType.ObjectType, Allors.Meta.M.VatReturnBoxType.OnBuild); 

		public VatReturnBoxTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VatReturnBoxTypeOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortAssignmentRateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortAssignmentRateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortAssignmentRate.ObjectType, Allors.Meta.M.WorkEffortAssignmentRate.OnBuild); 

		public WorkEffortAssignmentRateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortAssignmentRateOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortFixedAssetAssignment.ObjectType, Allors.Meta.M.WorkEffortFixedAssetAssignment.OnBuild); 

		public WorkEffortFixedAssetAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortFixedAssetStandardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortFixedAssetStandardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortFixedAssetStandard.ObjectType, Allors.Meta.M.WorkEffortFixedAssetStandard.OnBuild); 

		public WorkEffortFixedAssetStandardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortFixedAssetStandardOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortGoodStandardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortGoodStandardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortGoodStandard.ObjectType, Allors.Meta.M.WorkEffortGoodStandard.OnBuild); 

		public WorkEffortGoodStandardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortGoodStandardOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortInventoryAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortInventoryAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortInventoryAssignment.ObjectType, Allors.Meta.M.WorkEffortInventoryAssignment.OnBuild); 

		public WorkEffortInventoryAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortInventoryAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPartStandardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartStandardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPartStandard.ObjectType, Allors.Meta.M.WorkEffortPartStandard.OnBuild); 

		public WorkEffortPartStandardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartStandardOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortPartyAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortPartyAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortPartyAssignment.ObjectType, Allors.Meta.M.WorkEffortPartyAssignment.OnBuild); 

		public WorkEffortPartyAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortPartyAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortSkillStandardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortSkillStandardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortSkillStandard.ObjectType, Allors.Meta.M.WorkEffortSkillStandard.OnBuild); 

		public WorkEffortSkillStandardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortSkillStandardOnBuildMethodInvocation;
			}
		}
	}public partial class WorkEffortTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkEffortTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkEffortType.ObjectType, Allors.Meta.M.WorkEffortType.OnBuild); 

		public WorkEffortTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkEffortTypeOnBuildMethodInvocation;
			}
		}
	}public partial class CaseVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CaseVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CaseVersion.ObjectType, Allors.Meta.M.CaseVersion.OnBuild); 

		public CaseVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CaseVersionOnBuildMethodInvocation;
			}
		}
	}public partial class PartSpecificationVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PartSpecificationVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PartSpecificationVersion.ObjectType, Allors.Meta.M.PartSpecificationVersion.OnBuild); 

		public PartSpecificationVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PartSpecificationVersionOnBuildMethodInvocation;
			}
		}
	}public partial class PickListVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PickListVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PickListVersion.ObjectType, Allors.Meta.M.PickListVersion.OnBuild); 

		public PickListVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PickListVersionOnBuildMethodInvocation;
			}
		}
	}public partial class QuoteItemVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation QuoteItemVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.QuoteItemVersion.ObjectType, Allors.Meta.M.QuoteItemVersion.OnBuild); 

		public QuoteItemVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return QuoteItemVersionOnBuildMethodInvocation;
			}
		}
	}public partial class RequestItemVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestItemVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestItemVersion.ObjectType, Allors.Meta.M.RequestItemVersion.OnBuild); 

		public RequestItemVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestItemVersionOnBuildMethodInvocation;
			}
		}
	}public partial class RequirementVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequirementVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequirementVersion.ObjectType, Allors.Meta.M.RequirementVersion.OnBuild); 

		public RequirementVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequirementVersionOnBuildMethodInvocation;
			}
		}
	}public partial class AccountingPeriodVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountingPeriodVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountingPeriodVersion.ObjectType, Allors.Meta.M.AccountingPeriodVersion.OnBuild); 

		public AccountingPeriodVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountingPeriodVersionOnBuildMethodInvocation;
			}
		}
	}public partial class CapitalBudgetVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalBudgetVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CapitalBudgetVersion.ObjectType, Allors.Meta.M.CapitalBudgetVersion.OnBuild); 

		public CapitalBudgetVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalBudgetVersionOnBuildMethodInvocation;
			}
		}
	}public partial class OperatingBudgetVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OperatingBudgetVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OperatingBudgetVersion.ObjectType, Allors.Meta.M.OperatingBudgetVersion.OnBuild); 

		public OperatingBudgetVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OperatingBudgetVersionOnBuildMethodInvocation;
			}
		}
	}public partial class EmailCommunicationVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailCommunicationVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailCommunicationVersion.ObjectType, Allors.Meta.M.EmailCommunicationVersion.OnBuild); 

		public EmailCommunicationVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailCommunicationVersionOnBuildMethodInvocation;
			}
		}
	}public partial class FaceToFaceCommunicationVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaceToFaceCommunicationVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaceToFaceCommunicationVersion.ObjectType, Allors.Meta.M.FaceToFaceCommunicationVersion.OnBuild); 

		public FaceToFaceCommunicationVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaceToFaceCommunicationVersionOnBuildMethodInvocation;
			}
		}
	}public partial class FaxCommunicationVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FaxCommunicationVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FaxCommunicationVersion.ObjectType, Allors.Meta.M.FaxCommunicationVersion.OnBuild); 

		public FaxCommunicationVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FaxCommunicationVersionOnBuildMethodInvocation;
			}
		}
	}public partial class LetterCorrespondenceVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LetterCorrespondenceVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LetterCorrespondenceVersion.ObjectType, Allors.Meta.M.LetterCorrespondenceVersion.OnBuild); 

		public LetterCorrespondenceVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LetterCorrespondenceVersionOnBuildMethodInvocation;
			}
		}
	}public partial class PhoneCommunicationVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PhoneCommunicationVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PhoneCommunicationVersion.ObjectType, Allors.Meta.M.PhoneCommunicationVersion.OnBuild); 

		public PhoneCommunicationVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PhoneCommunicationVersionOnBuildMethodInvocation;
			}
		}
	}public partial class WebSiteCommunicationVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WebSiteCommunicationVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WebSiteCommunicationVersion.ObjectType, Allors.Meta.M.WebSiteCommunicationVersion.OnBuild); 

		public WebSiteCommunicationVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WebSiteCommunicationVersionOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceVersion.ObjectType, Allors.Meta.M.PurchaseInvoiceVersion.OnBuild); 

		public PurchaseInvoiceVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceVersionOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceVersion.ObjectType, Allors.Meta.M.SalesInvoiceVersion.OnBuild); 

		public SalesInvoiceVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceVersionOnBuildMethodInvocation;
			}
		}
	}public partial class DiscountAdjustmentVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DiscountAdjustmentVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DiscountAdjustmentVersion.ObjectType, Allors.Meta.M.DiscountAdjustmentVersion.OnBuild); 

		public DiscountAdjustmentVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DiscountAdjustmentVersionOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderVersion.ObjectType, Allors.Meta.M.PurchaseOrderVersion.OnBuild); 

		public PurchaseOrderVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderVersionOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderVersion.ObjectType, Allors.Meta.M.SalesOrderVersion.OnBuild); 

		public SalesOrderVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderVersionOnBuildMethodInvocation;
			}
		}
	}public partial class AutomatedAgentVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgentVersion.ObjectType, Allors.Meta.M.AutomatedAgentVersion.OnBuild); 

		public AutomatedAgentVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentVersionOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.OrganisationVersion.ObjectType, Allors.Meta.M.OrganisationVersion.OnBuild); 

		public OrganisationVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationVersionOnBuildMethodInvocation;
			}
		}
	}public partial class PersonVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PersonVersion.ObjectType, Allors.Meta.M.PersonVersion.OnBuild); 

		public PersonVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonVersionOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseInvoiceItemVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseInvoiceItemVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseInvoiceItemVersion.ObjectType, Allors.Meta.M.PurchaseInvoiceItemVersion.OnBuild); 

		public PurchaseInvoiceItemVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseInvoiceItemVersionOnBuildMethodInvocation;
			}
		}
	}public partial class SalesInvoiceItemVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesInvoiceItemVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesInvoiceItemVersion.ObjectType, Allors.Meta.M.SalesInvoiceItemVersion.OnBuild); 

		public SalesInvoiceItemVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesInvoiceItemVersionOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseOrderItemVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseOrderItemVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseOrderItemVersion.ObjectType, Allors.Meta.M.PurchaseOrderItemVersion.OnBuild); 

		public PurchaseOrderItemVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseOrderItemVersionOnBuildMethodInvocation;
			}
		}
	}public partial class SalesOrderItemVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesOrderItemVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesOrderItemVersion.ObjectType, Allors.Meta.M.SalesOrderItemVersion.OnBuild); 

		public SalesOrderItemVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesOrderItemVersionOnBuildMethodInvocation;
			}
		}
	}public partial class ProductQuoteVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductQuoteVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductQuoteVersion.ObjectType, Allors.Meta.M.ProductQuoteVersion.OnBuild); 

		public ProductQuoteVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductQuoteVersionOnBuildMethodInvocation;
			}
		}
	}public partial class ProposalVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProposalVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProposalVersion.ObjectType, Allors.Meta.M.ProposalVersion.OnBuild); 

		public ProposalVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProposalVersionOnBuildMethodInvocation;
			}
		}
	}public partial class StatementOfWorkVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StatementOfWorkVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StatementOfWorkVersion.ObjectType, Allors.Meta.M.StatementOfWorkVersion.OnBuild); 

		public StatementOfWorkVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StatementOfWorkVersionOnBuildMethodInvocation;
			}
		}
	}public partial class RequestForInformationVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForInformationVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForInformationVersion.ObjectType, Allors.Meta.M.RequestForInformationVersion.OnBuild); 

		public RequestForInformationVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForInformationVersionOnBuildMethodInvocation;
			}
		}
	}public partial class RequestForProposalVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForProposalVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForProposalVersion.ObjectType, Allors.Meta.M.RequestForProposalVersion.OnBuild); 

		public RequestForProposalVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForProposalVersionOnBuildMethodInvocation;
			}
		}
	}public partial class RequestForQuoteVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RequestForQuoteVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.RequestForQuoteVersion.ObjectType, Allors.Meta.M.RequestForQuoteVersion.OnBuild); 

		public RequestForQuoteVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RequestForQuoteVersionOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerReturnVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerReturnVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerReturnVersion.ObjectType, Allors.Meta.M.CustomerReturnVersion.OnBuild); 

		public CustomerReturnVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerReturnVersionOnBuildMethodInvocation;
			}
		}
	}public partial class CustomerShipmentVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomerShipmentVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomerShipmentVersion.ObjectType, Allors.Meta.M.CustomerShipmentVersion.OnBuild); 

		public CustomerShipmentVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomerShipmentVersionOnBuildMethodInvocation;
			}
		}
	}public partial class DropShipmentVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DropShipmentVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DropShipmentVersion.ObjectType, Allors.Meta.M.DropShipmentVersion.OnBuild); 

		public DropShipmentVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DropShipmentVersionOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseReturnVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseReturnVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseReturnVersion.ObjectType, Allors.Meta.M.PurchaseReturnVersion.OnBuild); 

		public PurchaseReturnVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseReturnVersionOnBuildMethodInvocation;
			}
		}
	}public partial class PurchaseShipmentVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PurchaseShipmentVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PurchaseShipmentVersion.ObjectType, Allors.Meta.M.PurchaseShipmentVersion.OnBuild); 

		public PurchaseShipmentVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PurchaseShipmentVersionOnBuildMethodInvocation;
			}
		}
	}public partial class TransferVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TransferVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TransferVersion.ObjectType, Allors.Meta.M.TransferVersion.OnBuild); 

		public TransferVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TransferVersionOnBuildMethodInvocation;
			}
		}
	}public partial class WorkTaskVersionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WorkTaskVersionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.WorkTaskVersion.ObjectType, Allors.Meta.M.WorkTaskVersion.OnBuild); 

		public WorkTaskVersionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WorkTaskVersionOnBuildMethodInvocation;
			}
		}
	}public partial class EngineeringChangeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringChangeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringChange.ObjectType, Allors.Meta.M.EngineeringChange.OnBuild); 

		public EngineeringChangeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringChangeOnBuildMethodInvocation;
			}
		}
	}public partial class ItemVarianceAccountingTransactionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ItemVarianceAccountingTransactionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ItemVarianceAccountingTransaction.ObjectType, Allors.Meta.M.ItemVarianceAccountingTransaction.OnBuild); 

		public ItemVarianceAccountingTransactionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ItemVarianceAccountingTransactionOnBuildMethodInvocation;
			}
		}
	}public partial class CreditLineOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditLineOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditLine.ObjectType, Allors.Meta.M.CreditLine.OnBuild); 

		public CreditLineOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditLineOnBuildMethodInvocation;
			}
		}
	}public partial class DisbursementAccountingTransactionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DisbursementAccountingTransactionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DisbursementAccountingTransaction.ObjectType, Allors.Meta.M.DisbursementAccountingTransaction.OnBuild); 

		public DisbursementAccountingTransactionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DisbursementAccountingTransactionOnBuildMethodInvocation;
			}
		}
	}public partial class NoteOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NoteOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Note.ObjectType, Allors.Meta.M.Note.OnBuild); 

		public NoteOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NoteOnBuildMethodInvocation;
			}
		}
	}public partial class ObligationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ObligationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Obligation.ObjectType, Allors.Meta.M.Obligation.OnBuild); 

		public ObligationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ObligationOnBuildMethodInvocation;
			}
		}
	}public partial class ReceiptAccountingTransactionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ReceiptAccountingTransactionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ReceiptAccountingTransaction.ObjectType, Allors.Meta.M.ReceiptAccountingTransaction.OnBuild); 

		public ReceiptAccountingTransactionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ReceiptAccountingTransactionOnBuildMethodInvocation;
			}
		}
	}public partial class SalesAccountingTransactionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SalesAccountingTransactionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SalesAccountingTransaction.ObjectType, Allors.Meta.M.SalesAccountingTransaction.OnBuild); 

		public SalesAccountingTransactionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SalesAccountingTransactionOnBuildMethodInvocation;
			}
		}
	}public partial class TaxDueOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDueOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaxDue.ObjectType, Allors.Meta.M.TaxDue.OnBuild); 

		public TaxDueOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDueOnBuildMethodInvocation;
			}
		}
	}public partial class AmortizationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AmortizationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Amortization.ObjectType, Allors.Meta.M.Amortization.OnBuild); 

		public AmortizationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AmortizationOnBuildMethodInvocation;
			}
		}
	}public partial class CapitalizationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CapitalizationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Capitalization.ObjectType, Allors.Meta.M.Capitalization.OnBuild); 

		public CapitalizationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CapitalizationOnBuildMethodInvocation;
			}
		}
	}public partial class DepreciationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepreciationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Depreciation.ObjectType, Allors.Meta.M.Depreciation.OnBuild); 

		public DepreciationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepreciationOnBuildMethodInvocation;
			}
		}
	}public partial class AgreementExhibitOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementExhibitOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementExhibit.ObjectType, Allors.Meta.M.AgreementExhibit.OnBuild); 

		public AgreementExhibitOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementExhibitOnBuildMethodInvocation;
			}
		}
	}public partial class AgreementPricingProgramOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementPricingProgramOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementPricingProgram.ObjectType, Allors.Meta.M.AgreementPricingProgram.OnBuild); 

		public AgreementPricingProgramOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementPricingProgramOnBuildMethodInvocation;
			}
		}
	}public partial class AgreementSectionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AgreementSectionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AgreementSection.ObjectType, Allors.Meta.M.AgreementSection.OnBuild); 

		public AgreementSectionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AgreementSectionOnBuildMethodInvocation;
			}
		}
	}public partial class SubAgreementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SubAgreementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SubAgreement.ObjectType, Allors.Meta.M.SubAgreement.OnBuild); 

		public SubAgreementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SubAgreementOnBuildMethodInvocation;
			}
		}
	}public partial class FinancialTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinancialTerm.ObjectType, Allors.Meta.M.FinancialTerm.OnBuild); 

		public FinancialTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialTermOnBuildMethodInvocation;
			}
		}
	}public partial class IncentiveOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IncentiveOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Incentive.ObjectType, Allors.Meta.M.Incentive.OnBuild); 

		public IncentiveOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncentiveOnBuildMethodInvocation;
			}
		}
	}public partial class IncoTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IncoTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IncoTerm.ObjectType, Allors.Meta.M.IncoTerm.OnBuild); 

		public IncoTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IncoTermOnBuildMethodInvocation;
			}
		}
	}public partial class InvoiceTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvoiceTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvoiceTerm.ObjectType, Allors.Meta.M.InvoiceTerm.OnBuild); 

		public InvoiceTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvoiceTermOnBuildMethodInvocation;
			}
		}
	}public partial class LegalTermOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LegalTermOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LegalTerm.ObjectType, Allors.Meta.M.LegalTerm.OnBuild); 

		public LegalTermOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LegalTermOnBuildMethodInvocation;
			}
		}
	}public partial class ThresholdOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ThresholdOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Threshold.ObjectType, Allors.Meta.M.Threshold.OnBuild); 

		public ThresholdOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ThresholdOnBuildMethodInvocation;
			}
		}
	}public partial class SingletonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnBuild); 

		public SingletonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnBuildMethodInvocation;
			}
		}
	}public partial class ActivityUsageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ActivityUsageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ActivityUsage.ObjectType, Allors.Meta.M.ActivityUsage.OnBuild); 

		public ActivityUsageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ActivityUsageOnBuildMethodInvocation;
			}
		}
	}public partial class TimePeriodUsageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimePeriodUsageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimePeriodUsage.ObjectType, Allors.Meta.M.TimePeriodUsage.OnBuild); 

		public TimePeriodUsageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimePeriodUsageOnBuildMethodInvocation;
			}
		}
	}public partial class VolumeUsageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VolumeUsageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.VolumeUsage.ObjectType, Allors.Meta.M.VolumeUsage.OnBuild); 

		public VolumeUsageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VolumeUsageOnBuildMethodInvocation;
			}
		}
	}public partial class BillOfLadingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BillOfLadingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BillOfLading.ObjectType, Allors.Meta.M.BillOfLading.OnBuild); 

		public BillOfLadingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BillOfLadingOnBuildMethodInvocation;
			}
		}
	}public partial class EngineeringDocumentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringDocumentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringDocument.ObjectType, Allors.Meta.M.EngineeringDocument.OnBuild); 

		public EngineeringDocumentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringDocumentOnBuildMethodInvocation;
			}
		}
	}public partial class ExportDocumentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExportDocumentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ExportDocument.ObjectType, Allors.Meta.M.ExportDocument.OnBuild); 

		public ExportDocumentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExportDocumentOnBuildMethodInvocation;
			}
		}
	}public partial class HazardousMaterialsDocumentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation HazardousMaterialsDocumentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.HazardousMaterialsDocument.ObjectType, Allors.Meta.M.HazardousMaterialsDocument.OnBuild); 

		public HazardousMaterialsDocumentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return HazardousMaterialsDocumentOnBuildMethodInvocation;
			}
		}
	}public partial class ManifestOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManifestOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Manifest.ObjectType, Allors.Meta.M.Manifest.OnBuild); 

		public ManifestOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManifestOnBuildMethodInvocation;
			}
		}
	}public partial class MarketingMaterialOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingMaterialOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MarketingMaterial.ObjectType, Allors.Meta.M.MarketingMaterial.OnBuild); 

		public MarketingMaterialOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingMaterialOnBuildMethodInvocation;
			}
		}
	}public partial class PackagingSlipOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PackagingSlipOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PackagingSlip.ObjectType, Allors.Meta.M.PackagingSlip.OnBuild); 

		public PackagingSlipOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PackagingSlipOnBuildMethodInvocation;
			}
		}
	}public partial class ProductDrawingOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductDrawingOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductDrawing.ObjectType, Allors.Meta.M.ProductDrawing.OnBuild); 

		public ProductDrawingOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductDrawingOnBuildMethodInvocation;
			}
		}
	}public partial class ProductModelOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductModelOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductModel.ObjectType, Allors.Meta.M.ProductModel.OnBuild); 

		public ProductModelOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductModelOnBuildMethodInvocation;
			}
		}
	}public partial class TaxDocumentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaxDocumentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaxDocument.ObjectType, Allors.Meta.M.TaxDocument.OnBuild); 

		public TaxDocumentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaxDocumentOnBuildMethodInvocation;
			}
		}
	}public partial class CustomEngagementItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomEngagementItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomEngagementItem.ObjectType, Allors.Meta.M.CustomEngagementItem.OnBuild); 

		public CustomEngagementItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomEngagementItemOnBuildMethodInvocation;
			}
		}
	}public partial class DeliverableOrderItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableOrderItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableOrderItem.ObjectType, Allors.Meta.M.DeliverableOrderItem.OnBuild); 

		public DeliverableOrderItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableOrderItemOnBuildMethodInvocation;
			}
		}
	}public partial class GoodOrderItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation GoodOrderItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.GoodOrderItem.ObjectType, Allors.Meta.M.GoodOrderItem.OnBuild); 

		public GoodOrderItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return GoodOrderItemOnBuildMethodInvocation;
			}
		}
	}public partial class ProfessionalPlacementOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProfessionalPlacementOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProfessionalPlacement.ObjectType, Allors.Meta.M.ProfessionalPlacement.OnBuild); 

		public ProfessionalPlacementOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProfessionalPlacementOnBuildMethodInvocation;
			}
		}
	}public partial class StandardServiceOrderItemOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation StandardServiceOrderItemOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.StandardServiceOrderItem.ObjectType, Allors.Meta.M.StandardServiceOrderItem.OnBuild); 

		public StandardServiceOrderItemOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return StandardServiceOrderItemOnBuildMethodInvocation;
			}
		}
	}public partial class BankAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation BankAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.BankAccount.ObjectType, Allors.Meta.M.BankAccount.OnBuild); 

		public BankAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return BankAccountOnBuildMethodInvocation;
			}
		}
	}public partial class CreditCardOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CreditCardOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CreditCard.ObjectType, Allors.Meta.M.CreditCard.OnBuild); 

		public CreditCardOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CreditCardOnBuildMethodInvocation;
			}
		}
	}public partial class InvestmentAccountOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation InvestmentAccountOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.InvestmentAccount.ObjectType, Allors.Meta.M.InvestmentAccount.OnBuild); 

		public InvestmentAccountOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return InvestmentAccountOnBuildMethodInvocation;
			}
		}
	}public partial class AccountAdjustmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccountAdjustmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccountAdjustment.ObjectType, Allors.Meta.M.AccountAdjustment.OnBuild); 

		public AccountAdjustmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccountAdjustmentOnBuildMethodInvocation;
			}
		}
	}public partial class DepositOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DepositOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Deposit.ObjectType, Allors.Meta.M.Deposit.OnBuild); 

		public DepositOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DepositOnBuildMethodInvocation;
			}
		}
	}public partial class FinancialAccountAdjustmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FinancialAccountAdjustmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.FinancialAccountAdjustment.ObjectType, Allors.Meta.M.FinancialAccountAdjustment.OnBuild); 

		public FinancialAccountAdjustmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FinancialAccountAdjustmentOnBuildMethodInvocation;
			}
		}
	}public partial class WithdrawalOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation WithdrawalOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Withdrawal.ObjectType, Allors.Meta.M.Withdrawal.OnBuild); 

		public WithdrawalOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return WithdrawalOnBuildMethodInvocation;
			}
		}
	}public partial class EquipmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EquipmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Equipment.ObjectType, Allors.Meta.M.Equipment.OnBuild); 

		public EquipmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EquipmentOnBuildMethodInvocation;
			}
		}
	}public partial class PropertyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PropertyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Property.ObjectType, Allors.Meta.M.Property.OnBuild); 

		public PropertyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PropertyOnBuildMethodInvocation;
			}
		}
	}public partial class VehicleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation VehicleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Vehicle.ObjectType, Allors.Meta.M.Vehicle.OnBuild); 

		public VehicleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return VehicleOnBuildMethodInvocation;
			}
		}
	}public partial class ManufacturingConfigurationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingConfigurationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturingConfiguration.ObjectType, Allors.Meta.M.ManufacturingConfiguration.OnBuild); 

		public ManufacturingConfigurationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingConfigurationOnBuildMethodInvocation;
			}
		}
	}public partial class ServiceConfigurationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ServiceConfigurationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ServiceConfiguration.ObjectType, Allors.Meta.M.ServiceConfiguration.OnBuild); 

		public ServiceConfigurationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ServiceConfigurationOnBuildMethodInvocation;
			}
		}
	}public partial class FeeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation FeeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Fee.ObjectType, Allors.Meta.M.Fee.OnBuild); 

		public FeeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return FeeOnBuildMethodInvocation;
			}
		}
	}public partial class ShippingAndHandlingChargeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ShippingAndHandlingChargeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ShippingAndHandlingCharge.ObjectType, Allors.Meta.M.ShippingAndHandlingCharge.OnBuild); 

		public ShippingAndHandlingChargeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ShippingAndHandlingChargeOnBuildMethodInvocation;
			}
		}
	}public partial class SurchargeAdjustmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SurchargeAdjustmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SurchargeAdjustment.ObjectType, Allors.Meta.M.SurchargeAdjustment.OnBuild); 

		public SurchargeAdjustmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SurchargeAdjustmentOnBuildMethodInvocation;
			}
		}
	}public partial class EngineeringBomOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EngineeringBomOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EngineeringBom.ObjectType, Allors.Meta.M.EngineeringBom.OnBuild); 

		public EngineeringBomOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EngineeringBomOnBuildMethodInvocation;
			}
		}
	}public partial class ManufacturingBomOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ManufacturingBomOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ManufacturingBom.ObjectType, Allors.Meta.M.ManufacturingBom.OnBuild); 

		public ManufacturingBomOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ManufacturingBomOnBuildMethodInvocation;
			}
		}
	}public partial class CustomOrganisationClassificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CustomOrganisationClassificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.CustomOrganisationClassification.ObjectType, Allors.Meta.M.CustomOrganisationClassification.OnBuild); 

		public CustomOrganisationClassificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CustomOrganisationClassificationOnBuildMethodInvocation;
			}
		}
	}public partial class IndustryClassificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation IndustryClassificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.IndustryClassification.ObjectType, Allors.Meta.M.IndustryClassification.OnBuild); 

		public IndustryClassificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return IndustryClassificationOnBuildMethodInvocation;
			}
		}
	}public partial class MarketingPackageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MarketingPackageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MarketingPackage.ObjectType, Allors.Meta.M.MarketingPackage.OnBuild); 

		public MarketingPackageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MarketingPackageOnBuildMethodInvocation;
			}
		}
	}public partial class ProductConfigurationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ProductConfigurationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ProductConfiguration.ObjectType, Allors.Meta.M.ProductConfiguration.OnBuild); 

		public ProductConfigurationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ProductConfigurationOnBuildMethodInvocation;
			}
		}
	}public partial class DeliverableTurnoverOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation DeliverableTurnoverOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.DeliverableTurnover.ObjectType, Allors.Meta.M.DeliverableTurnover.OnBuild); 

		public DeliverableTurnoverOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return DeliverableTurnoverOnBuildMethodInvocation;
			}
		}
	}public partial class ExpenseEntryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation ExpenseEntryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.ExpenseEntry.ObjectType, Allors.Meta.M.ExpenseEntry.OnBuild); 

		public ExpenseEntryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return ExpenseEntryOnBuildMethodInvocation;
			}
		}
	}public partial class MaterialsUsageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MaterialsUsageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MaterialsUsage.ObjectType, Allors.Meta.M.MaterialsUsage.OnBuild); 

		public MaterialsUsageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MaterialsUsageOnBuildMethodInvocation;
			}
		}
	}public partial class TimeEntryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TimeEntryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TimeEntry.ObjectType, Allors.Meta.M.TimeEntry.OnBuild); 

		public TimeEntryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TimeEntryOnBuildMethodInvocation;
			}
		}
	}
}